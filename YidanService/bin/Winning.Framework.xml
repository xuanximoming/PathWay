<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Winning.Framework</name>
    </assembly>
    <members>
        <member name="T:Winning.Framework.NameAbbreviation">
            <summary>
            汉字的缩写类
            </summary>
        </member>
        <member name="P:Winning.Framework.NameAbbreviation.ABOfSpell">
            <summary>
            拼音缩写
            </summary>
        </member>
        <member name="P:Winning.Framework.NameAbbreviation.ABOfWubi">
            <summary>
            五笔缩写
            </summary>
        </member>
        <member name="T:Winning.Framework.FormStyleExtender">
            <summary>
            扩展窗口可视
            </summary>
        </member>
        <member name="F:Winning.Framework.FormStyleExtender.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Winning.Framework.FormStyleExtender.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Winning.Framework.FormStyleExtender.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Winning.Framework.FormStyleExtender.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Winning.Framework.FormStyleExtender.#ctor(System.ComponentModel.IContainer)">
            <summary>
            ctor2
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Winning.Framework.FormStyleExtender.CanExtend(System.Object)">
            <summary>
            判断是否可扩展
            </summary>
            <param name="extendee"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.FormStyleExtender.GetStyle(System.Windows.Forms.Form)">
            <summary>
            getStyle
            </summary>
            <param name="form"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.FormStyleExtender.SetStyle(System.Windows.Forms.Control,Winning.Framework.MyFormVisualStyle)">
            <summary>
            setStyle
            </summary>
            <param name="form"></param>
            <param name="value"></param>
        </member>
        <member name="M:Winning.Framework.FormStyleExtender.GetUseFormStyle(System.Windows.Forms.Control)">
            <summary>
            getUseFormStyle
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.FormStyleExtender.SetUseFormStyle(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            setUseFormStyle
            </summary>
            <param name="control"></param>
            <param name="useFormStyle"></param>
        </member>
        <member name="M:Winning.Framework.FormStyleExtender.GetStyleFile(System.Windows.Forms.Form)">
            <summary>
            getStyleFile
            </summary>
            <param name="form"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.FormStyleExtender.SetStyleFile(System.Windows.Forms.Form,System.String)">
            <summary>
            setStyleFile
            </summary>
            <param name="form"></param>
            <param name="value"></param>
        </member>
        <!-- 对于成员“T:Winning.Framework.IStartup”忽略有格式错误的 XML 注释 -->
        <member name="M:Winning.Framework.IStartup.Run(Winning.Framework.IApplication)">
            <summary>
            插件启动函数
            </summary>
            <param name="application">应用程序对象接口,可通过该接口访问登录的相关信息和病人信息，具体可参见IApplication</param>
            <returns>插件对象接口</returns>
        </member>
        <member name="T:Winning.Framework.IPlugIn">
            <summary>
            插件对象接口，该接口目前只被Plugin类继承。在其他地方只作为参数使用。
            </summary>
        </member>
        <member name="M:Winning.Framework.IPlugIn.ExecutePatientChangeEvent(Winning.Framework.PatientArgs)">
            <summary>
            执行病人改变事件
            </summary>
        </member>
        <member name="M:Winning.Framework.IPlugIn.ExecutePatientChangingEvent(System.ComponentModel.CancelEventArgs)">
            <summary>
            执行病人正改变事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Framework.IPlugIn.GetImage(System.String)">
            <summary>
            获取图片
            </summary>
            <param name="imageName">图片名称(包含后缀)，例如："EMRTitle.bmp"</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IPlugIn.GetNormalIcon(System.String)">
            <summary>
            获取普通的图标（以ico结尾的）
            </summary>
            <param name="iconName">图标名称（包含后缀）</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IPlugIn.GetSmallIcon(System.String,Winning.Resource.IconType)">
            <summary>
            获取小尺寸图标（16×16）
            </summary>
            <param name="imageName">图片名称，不需要指明尺寸、类型和后缀,例如："Save"</param>
            <param name="imageType">图片类型(一般图标都有3张：正常状态、禁用状态、高亮)</param>
        </member>
        <member name="M:Winning.Framework.IPlugIn.GetMiddleIcon(System.String,Winning.Resource.IconType)">
            <summary>
            获取大尺寸图标（24×24）
            </summary>
            <param name="imageName">图片名称，不需要指明尺寸、类型和后缀,例如："Save"</param>
            <param name="imageType">图片类型（一般图标都有3张：正常状态、禁用状态、高亮)</param>
        </member>
        <member name="M:Winning.Framework.IPlugIn.NeedSave">
            <summary>
            是否需要保存
            </summary>
        </member>
        <member name="M:Winning.Framework.IPlugIn.Save">
            <summary>
            保存数据
            </summary>
            <returns>是否继续</returns>
        </member>
        <member name="P:Winning.Framework.IPlugIn.AssemblyFileName">
            <summary>
            Assembly的文件名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IPlugIn.StartClassType">
            <summary>
            启动类的类型
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IPlugIn.MainForm">
            <summary>
            获取插件的主窗体
            </summary>
            <value>启动插件的Form</value>
        </member>
        <member name="P:Winning.Framework.IPlugIn.IsMdiChild">
             <summary>
            获取被启动的Form是否以MdiChild方式启动 
             </summary>
             <value></value>
        </member>
        <member name="P:Winning.Framework.IPlugIn.IsShowModel">
            <summary>
            获取被启动的Form是否以ShowModel方式启动
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IPlugIn.AddInMenuItems">
            <summary>
            获取需要添加的菜单数组
            </summary>
            <value>菜单数组</value>
        </member>
        <member name="P:Winning.Framework.IPlugIn.AddInToolStrips">
            <summary>
            获取需要添加的工具栏数组
            </summary>
            <value>工具栏数据</value>
        </member>
        <member name="P:Winning.Framework.IPlugIn.AssistPlugIn">
            <summary>
            当前插件使用的辅助插件，一般是Dock方式生成的StartForm
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IPlugIn.ByLoadPlugIn">
            <summary>
            加载当前插件的所有插件，一般是AssistPlugin的相关的Plugin
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IPlugIn.AddInDockingForms">
            <summary>
            获取需要显示的DockingForm对象数组
            </summary>
        </member>
        <member name="E:Winning.Framework.IPlugIn.PatientChanged">
            <summary>
            选择的病人发生改变
            </summary>
        </member>
        <member name="E:Winning.Framework.IPlugIn.PatientChanging">
            <summary>
            选择的病人正在发生改变
            </summary>
        </member>
        <member name="P:Winning.Framework.IPlugIn.Icon">
            <summary>
            获取或设置该plugin的icon
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.PreDefineSqlCollection">
            <summary>
            预定义选择语句集合
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PreDefineSqlCollection.Sentences">
            <summary>
            预定义选择语句集合
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.SelectSentence">
            <summary>
            预定义选择语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.SelectSentence.Name">
            <summary>
            语句标识符
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.SelectSentence.QuerySentence">
            <summary>
            不带参数的查询语句
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ORMapping">
            <summary>
            表和对象映射关系
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ORMapping.OneOnes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ORMapping.States">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ORMapping.Structures">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ORMapping.ObjectClasses">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ORMapping.SubClasses">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ORMapping.DefaultValues">
            <remarks/>
        </member>
        <member name="P:Winning.Common.Eop.ORMapping.ClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ORMapping.ParentClass">
            <summary>
            父类名
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ORMapping.TableName">
            <summary>
            对应的表名
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.DefaultValueType">
            <summary>
            使用工厂类创建实例时对于具体的实例不一定会用到所有的列，所以要给列指定默认值
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.DefaultValueType.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Common.Eop.DefaultValueType.Column">
            <summary>
            列名
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.DefaultValueType.Value">
            <summary>
            默认值
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.DepartmentKind">
            <summary>
            科室类别标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DepartmentKind.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DepartmentKind.Clinic">
            <summary>
            临床
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DepartmentKind.Technic">
            <summary>
            医技
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DepartmentKind.Druggery">
            <summary>
            药剂
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DepartmentKind.Service">
            <summary>
            机关
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DepartmentKind.Other">
            <summary>
            其他
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.DepartmentClinicKind">
            <summary>
            科室标志(针对临床科室)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DepartmentClinicKind.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DepartmentClinicKind.Normal">
            <summary>
            普通
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DepartmentClinicKind.Theater">
            <summary>
            手术室
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DepartmentClinicKind.Delivery">
            <summary>
            产房
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DepartmentClinicKind.ICU">
            <summary>
            ICU|CCU
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DepartmentClinicKind.Pediatrics">
            <summary>
            儿科
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.WardKind">
            <summary>
            病区标志
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.WardKind.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.WardKind.Normal">
            <summary>
            普通
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.WardKind.Emergency">
            <summary>
            急观
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.WardKind.Delivery">
            <summary>
            产房
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.WardKind.ICU">
            <summary>
            ICU|CCU
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.EmployeeKind">
            <summary>
            职工类别标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.EmployeeKind.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.EmployeeKind.Doctor">
            <summary>
            普通医生
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.EmployeeKind.Specialist">
            <summary>
            专家医生
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.EmployeeKind.Nurse">
            <summary>
            护士
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.EmployeeKind.Anaesthetist">
            <summary>
            麻醉师
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.EmployeeKind.Others">
            <summary>
            其他
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.HospitalGrade">
            <summary>
            医院等级标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.HospitalGrade.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.HospitalGrade.Level1">
            <summary>
            一级
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.HospitalGrade.Level2">
            <summary>
            二级
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.HospitalGrade.Level3">
            <summary>
            三级
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.HospitalKind">
            <summary>
            医院类别标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.HospitalKind.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.HospitalKind.Current">
            <summary>
            当前系统使用医院
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.HospitalKind.Cooperation">
            <summary>
            协作医院
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.DiseaseKind">
            <summary>
            病种类别标记(用在病种分类库中)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DiseaseKind.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DiseaseKind.Single">
            <summary>
            单病种
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DiseaseKind.Disease">
            <summary>
            疾病分类
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DiseaseKind.Hospital">
            <summary>
            院内分类
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OperationGrade">
            <summary>
            手术级别标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OperationGrade.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OperationGrade.Super">
            <summary>
            特大
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OperationGrade.Large">
            <summary>
            大
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OperationGrade.Middle">
            <summary>
            中
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OperationGrade.Small">
            <summary>
            小
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ZoneGrade">
            <summary>
            地区级别标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ZoneGrade.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ZoneGrade.Province">
            <summary>
            省、直辖市
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ZoneGrade.Country">
            <summary>
            区县
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.BedType">
            <summary>
            床位类型标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.BedType.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.BedType.Male">
            <summary>
            男
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.BedType.Female">
            <summary>
            女
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.BedType.Mix">
            <summary>
            混
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.BedKind">
            <summary>
            床位编制类型标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.BedKind.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.BedKind.Normal">
            <summary>
            在编
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.BedKind.Extra">
            <summary>
            非编
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.BedKind.AddIn">
            <summary>
            加床
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.BedState">
            <summary>
            床位使用状态
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.BedState.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.BedState.No">
            <summary>
            空床
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.BedState.Yes">
            <summary>
            占床
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.BedState.Wrapped">
            <summary>
            包床
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.SystemApplyRange">
            <summary>
            系统标志(指明数据项适用的系统范围)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SystemApplyRange.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SystemApplyRange.All">
            <summary>
            门诊、住院
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SystemApplyRange.OutpatientDept">
            <summary>
            门诊部门
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SystemApplyRange.InpatientDept">
            <summary>
            住院部门
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.InpatientState">
            <summary>
            住院病人状态标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.InpatientState.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.InpatientState.New">
            <summary>
            入院登记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.InpatientState.InWard">
            <summary>
            病区分床
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.InpatientState.OutWard">
            <summary>
            病区出院
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.InpatientState.Balanced">
            <summary>
            病人出院
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.InpatientState.CancleBalanced">
            <summary>
            取消结算
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.InpatientState.InICU">
            <summary>
            进入ICU
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.InpatientState.InDeliveryRoom">
            <summary>
            进入产房
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.InpatientState.ShiftDept">
            <summary>
            转科状态(待转出,对方还没有接收)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.InpatientState.DataDumped">
            <summary>
            数据转出(数据已迁移到历史库中)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.InpatientState.Outdated">
            <summary>
            作废记录
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.DoctorGrade">
            <summary>
            医生级别标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DoctorGrade.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DoctorGrade.Chief">
            <summary>
            主任医师
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DoctorGrade.AssociateChief">
            <summary>
            副主任医师
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DoctorGrade.Attending">
            <summary>
            主治医师
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DoctorGrade.Resident">
            <summary>
            住院医师
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.SnomedConceptState">
            <summary>
            SNOMED概念状态标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedConceptState.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedConceptState.Natural">
            <summary>
            正常-有效
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedConceptState.Retired">
            <summary>
            退休-停用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedConceptState.Repeated">
            <summary>
            重复-停用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedConceptState.Outdated">
            <summary>
            过期-停用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedConceptState.Multivocal">
            <summary>
            多义-停用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedConceptState.Wrong">
            <summary>
            错误-停用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedConceptState.Limited">
            <summary>
            有限-停用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedConceptState.Transferred">
            <summary>
            已转移-停用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedConceptState.Transferring">
            <summary>
            待移动-有效
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedConceptState.Custom">
            <summary>
            自定义-有效
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedConceptState.Cancellation">
            <summary>
            作废自定义码
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.SnomedAliasState">
            <summary>
            SNOMED别名状态标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedAliasState.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedAliasState.Natural">
            <summary>
            正常-有效
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedAliasState.Retired">
            <summary>
            退休-停用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedAliasState.Repeated">
            <summary>
            重复-停用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedAliasState.Outdated">
            <summary>
            过期-停用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedAliasState.Wrong">
            <summary>
            错误-停用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedAliasState.Limited">
            <summary>
            有限-停用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedAliasState.Unseemliness">
            <summary>
            不合适-停用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedAliasState.ConceptCeased">
            <summary>
            概念已停用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedAliasState.Transferred">
            <summary>
            已转移-停用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedAliasState.Transferring">
            <summary>
            待移动-有效
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.SnomedTermKind">
            <summary>
            SNOMED术语类型标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedTermKind.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedTermKind.Unspecified">
            <summary>
            未指明
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedTermKind.Preferred">
            <summary>
            首选
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedTermKind.Synonymous">
            <summary>
            同义词
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SnomedTermKind.FullName">
            <summary>
            全称
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ItemKind">
            <summary>
            项目类别标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.WesternMedicine">
            <summary>
            西药
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.PatentMedicine">
            <summary>
            成药
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.HerbalMedicine">
            <summary>
            草药
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.Cure">
            <summary>
            治疗
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.Operation">
            <summary>
            手术
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.Anesthesia">
            <summary>
            麻醉
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.Meal">
            <summary>
            膳食
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.Transfusion">
            <summary>
            输血
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.Care">
            <summary>
            护理
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.BedFee">
            <summary>
            床位
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.Examination">
            <summary>
            检查
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.Assay">
            <summary>
            检验
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.Infusion">
            <summary>
            输液
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.Registration">
            <summary>
            挂号
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.Meterial">
            <summary>
            材料
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.Diagnosis">
            <summary>
            诊疗(注意与治疗的区别)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.Other">
            <summary>
            其它
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.Sugar">
            <summary>
            糖
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.DangerLevel">
            <summary>
            危重级别
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.IsolationCatalog">
            <summary>
            隔离种类
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.BodyPosition">
            <summary>
            体位
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemKind.ClinicItem">
            <summary>
            临床项目
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.SubmitAccountKind">
            <summary>
            报销类别
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SubmitAccountKind.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SubmitAccountKind.PayFull">
            <summary>
            全报
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SubmitAccountKind.PayPart">
            <summary>
            部分报
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SubmitAccountKind.PaySelf">
            <summary>
            自费
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.SubmitAccountKind.Other">
            <summary>
            其它
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.DruggeryKind">
            <summary>
            药品类别
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryKind.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryKind.Normal">
            <summary>
            普通
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryKind.Anesthetics">
            <summary>
            麻醉
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryKind.Psychosis">
            <summary>
            精神
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryKind.Virulent">
            <summary>
            剧毒
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryKind.Danger">
            <summary>
            危险
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryKind.Reagent">
            <summary>
            化试
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryKind.Insulin">
            <summary>
            胰岛素
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryKind.Antibiotics">
            <summary>
            抗菌素
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OrderManagerKind">
            <summary>
            医嘱管理标志
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderManagerKind.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderManagerKind.Normal">
            <summary>
            普通
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderManagerKind.NotUse">
            <summary>
            不用于医嘱
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderManagerKind.ForTemp">
            <summary>
            只用于临时医嘱
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderManagerKind.ForLong">
            <summary>
            只用于长期医嘱
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ItemApplyRange">
            <summary>
            项目使用范围标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemApplyRange.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemApplyRange.Unlimited">
            <summary>
            不限制
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemApplyRange.ForNormal">
            <summary>
            自费使用
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemApplyRange.ForInsurance">
            <summary>
            医保使用
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.DataApplyRange">
            <summary>
            使用范围控制标记(数据的应用范围)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DataApplyRange.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DataApplyRange.All">
            <summary>
            全院
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DataApplyRange.Department">
            <summary>
            科室
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DataApplyRange.Ward">
            <summary>
            病区
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DataApplyRange.Individual">
            <summary>
            个人
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.DruggeryUnitKind">
            <summary>
            药品单位类别
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryUnitKind.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryUnitKind.Dosage">
            <summary>
            剂量单位
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryUnitKind.Depot">
            <summary>
            药库单位
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryUnitKind.Policlinic">
            <summary>
            门诊单位
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryUnitKind.Ward">
            <summary>
            住院单位
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryUnitKind.Stock">
            <summary>
            进货单位
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryUnitKind.Paediatrics">
            <summary>
            儿科单位
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryUnitKind.Specification">
            <summary>
            规格单位
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryUnitKind.Min">
            <summary>
            最小单位
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OrderContentKind">
            <summary>
            医嘱类别标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderContentKind.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderContentKind.Druggery">
            <summary>
            药品医嘱
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderContentKind.ChargeItem">
            <summary>
            收费项目医嘱
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderContentKind.GeneralItem">
            <summary>
            常规医嘱
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderContentKind.ClinicItem">
            <summary>
            临床项目医嘱
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderContentKind.OutDruggery">
            <summary>
            出院带药
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderContentKind.Operation">
            <summary>
            手术医嘱
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderContentKind.CeaseLong">
            <summary>
            停长期医嘱
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderContentKind.TextNormal">
            <summary>
            纯医嘱(普通)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderContentKind.TextShiftDept">
            <summary>
            纯医嘱(转科)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderContentKind.TextAfterOperation">
            <summary>
            纯医嘱(术后)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderContentKind.TextLeaveHospital">
            <summary>
            纯医嘱(出院)
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OrderState">
            <summary>
            医嘱状态标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderState.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderState.All">
            <summary>
            全部
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderState.New">
            <summary>
            录入
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderState.Audited">
            <summary>
            已审核
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderState.Executed">
            <summary>
            已执行
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderState.Cancellation">
            <summary>
            被取消
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderState.Ceased">
            <summary>
            已停止
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OrderCeaseReason">
            <summary>
            长期医嘱停止原因标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderCeaseReason.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderCeaseReason.Natural">
            <summary>
            正常停
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderCeaseReason.AfterOperation">
            <summary>
            术后
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderCeaseReason.AfterDelivery">
            <summary>
            产后
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderCeaseReason.ShiftDept">
            <summary>
            转科
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderCeaseReason.NewGeneral">
            <summary>
            新常规
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderCeaseReason.LeaveHospital">
            <summary>
            出院
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OrderExecPeriodUnitKind">
            <summary>
            医嘱执行周期(单位)类别
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderExecPeriodUnitKind.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderExecPeriodUnitKind.Week">
            <summary>
            周
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderExecPeriodUnitKind.Day">
            <summary>
            天
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderExecPeriodUnitKind.Hour">
            <summary>
            小时
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderExecPeriodUnitKind.Minute">
            <summary>
            分钟
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.GroupPositionKind">
            <summary>
            分组位置类型
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.GroupPositionKind.None">
            <summary>
            无法识别
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.GroupPositionKind.SingleOrder">
            <summary>
            单条医嘱
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.GroupPositionKind.GroupStart">
            <summary>
            组开始
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.GroupPositionKind.GroupMiddle">
            <summary>
            组中间
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.GroupPositionKind.GroupEnd">
            <summary>
            组结束
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.PrintState">
            <summary>
            打印状态
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PrintState.None">
            <summary>
            无法识别
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PrintState.IsNotPrinted">
            <summary>
            未打印
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PrintState.HadPrinted">
            <summary>
            已打印
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PrintState.ChangedAfterPrint">
            <summary>
            打印后修改
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.MessageState">
            <summary>
            消息状态
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.MessageState.None">
            <summary>
            无法识别
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.MessageState.Waiting">
            <summary>
            初始待处理
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.MessageState.Handling">
            <summary>
            处理中
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.MessageState.Handled">
            <summary>
            处理完成
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ModelKind">
            <summary>
            病历模型类型
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ModelKind.Atom">
            <summary>
            原子数据
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ModelKind.MetaData">
            <summary>
            元数据
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ModelKind.BaseModel">
            <summary>
            基础模板
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ModelKind.FileStructure">
            <summary>
            文件结构
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ModelKind.File">
            <summary>
            病历文件
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ModelKind.FullModel">
            <summary>
            病历模板
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ModelKind.Grid">
            <summary>
            表格
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ModelKind.Picture">
            <summary>
            图像
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ModelKind.Folder">
            <summary>
            病历文件夹
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ModelKind.PersonalModel">
            <summary>
            个人模板
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.TechAffirmState">
            <summary>
            医技确认状态
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.TechAffirmState.New">
            <summary>
            新增
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.TechAffirmState.Audited">
            <summary>
            审核
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.TechAffirmState.Executed">
            <summary>
            执行
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.TechAffirmState.Affirmed">
            <summary>
            医技确认
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.TechAffirmState.Abolished">
            <summary>
            医技作废
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.TechAffirmState.Rejected">
            <summary>
            医技拒绝
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.TechAffirmState.Cancelled">
            <summary>
            审核后取消
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.PrintReason">
            <summary>
            打印原因
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PrintReason.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PrintReason.Continue">
            <summary>
            续打
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PrintReason.All">
            <summary>
            完整打印
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PrintReason.FirstTime">
            <summary>
            第一次打印
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PrintReason.PageDamaged">
            <summary>
            纸张损坏
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PrintReason.PrintedChanged">
            <summary>
            已打印部分被修改
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PrintReason.PreviewPrint">
            <summary>
            预览打印
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PrintReason.Other">
            <summary>
            其他理由
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.DataOperator">
            <summary>
            数据操作类型
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DataOperator.New">
            <summary>
            创建
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DataOperator.Modiffy">
            <summary>
            修改
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DataOperator.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DataOperator.Submit">
            <summary>
            提交
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DataOperator.Audit">
            <summary>
            审核
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DataOperator.DischargeSubmit">
            <summary>
            撤销提交
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.PhysicalSignKind">
            <summary>
            体征数据类别
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.Temperature">
            <summary>
            体温
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.Sphygmus">
            <summary>
            脉搏
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.HeartRate">
            <summary>
            心率
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.BloodPressure">
            <summary>
            血压
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.Breathe">
            <summary>
            呼吸次数
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.Stool">
            <summary>
            大便次数
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.Height">
            <summary>
            身高
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.Weight">
            <summary>
            体重
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.GirthOfPaunch">
            <summary>
            腹围
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.TotalOutput">
            <summary>
            总出量
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.UrinaQuantity">
            <summary>
            尿量
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.SputumQuantity">
            <summary>
            痰量
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.VomitQuantity">
            <summary>
            呕吐量
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.ConductionQuantity">
            <summary>
            引流量
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.TotalInput">
            <summary>
            总入量
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.TongueMark">
            <summary>
            舌象
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.PhysicalSignKind.SphygmusMark">
            <summary>
            脉象
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.DragUsageKind">
            <summary>
            药品用法类别
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DragUsageKind.Normal">
            <summary>
            普通
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DragUsageKind.PO">
            <summary>
            口服
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DragUsageKind.Transfusion">
            <summary>
            输液
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DragUsageKind.Ampule">
            <summary>
            针剂
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ExamineState">
            <summary>
            审阅状态
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ExamineState.NotSubmit">
            <summary>
            未提交,
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ExamineState.SubmitButNotExamine">
            <summary>
            提交但未审核,
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ExamineState.FirstExamine">
            <summary>
            主治审核,
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ExamineState.SecondExamine">
            <summary>
            主任审核
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ExamineState.Deleted">
            <summary>
            已删除
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ExamineState.ThirdExamine">
            <summary>
            第三次审核
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ExamineState.FouthExamine">
            <summary>
            第四次审核
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ExamineState.FifthExamine">
            <summary>
            第五次审核,
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ExamineState.Final">
            <summary>
            最终审核
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.Inpatient">
            <summary>
            病人首页库类(病人对象的ORM)
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.EPBaseObject">
            <summary>
            EmrPersistentBaseObject, 基础持久类
            TODO: 需要再增加接口类,以优化程序
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.EPBaseObject.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.EPBaseObject.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.EPBaseObject.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.EPBaseObject.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.EPBaseObject.GetQuerySentenceFromXml(System.String)">
            <summary>
            
            </summary>
            <param name="sqlName"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.EPBaseObject.FormatFilterString(System.String,System.String)">
            <summary>
            统一的格式化过滤条件方法
            </summary>
            <param name="fieldName"></param>
            <param name="codeValue"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.EPBaseObject.Initialize(System.Data.DataRow)">
            <summary>
            用传入的DataRow初始化属性(DataRow不需要与对象的结构完全匹配，内部只初始化字段名匹配的属性)
            </summary>
            <param name="sourceRow">包含初始数据的DataRow</param>
        </member>
        <member name="M:Winning.Common.Eop.EPBaseObject.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.EPBaseObject.Clone">
            <summary>
            克隆对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.EPBaseObject.ReInitializeProperties">
            <summary>
            由主键获取相应DataRow，并初始化其它属性
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.EPBaseObject.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.EPBaseObject.BeginInit">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.EPBaseObject.EndInit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.EPBaseObject.Code">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.EPBaseObject.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.EPBaseObject.Enabled">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.EPBaseObject.Memo">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.EPBaseObject.KeyInitialized">
            <summary>
            标记主键属性是否已初始化
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.EPBaseObject.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.EPBaseObject.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.EPBaseObject.IsInit">
            <summary>
            供子类判断是否是在做初始化动作
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Inpatient.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Inpatient.#ctor(System.Decimal)">
            <summary>
            用代码初始化实例
            </summary>
            <param name="firstPageNo"></param>
        </member>
        <member name="M:Winning.Common.Eop.Inpatient.#ctor(System.Data.DataRow)">
            <summary>
            用DataRow初始化实例
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.Inpatient.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.Inpatient.CreateInpatientByHisSerialNo(System.Decimal)">
            <summary>
            根据HIS的首页序号创建病人的静态方法
            </summary>
            <param name="noOfHisFirstPage"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.Inpatient.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Inpatient.ReInitializeProperties">
            <summary>
            病人表比较大，默认的初始化方式会将病人信息先全部加载再过滤，这样做会有性能问题。
            在这里只取单个病人的数据，且不做缓存！！！
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Inpatient.Equals(System.Object)">
            <summary>
            比较病人对象
            </summary>
            <param name="obj"></param>
            <returns>是否相等</returns>
        </member>
        <member name="M:Winning.Common.Eop.Inpatient.GetHashCode">
            <summary>
            获得Hash码
            </summary>
            <returns>Hash码</returns>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.Code">
            <summary>
            返回主要号码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.Name">
            <summary>
            返回病人姓名
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.NoOfFirstPage">
            <summary>
            首页序号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.NoOfHisFirstPage">
            <summary>
            HIS首页序号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.RecordNoOfClinic">
            <summary>
            门诊号码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.RecordNoOfMedical">
            <summary>
            病案号码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.RecordNoOfHospital">
            <summary>
            住院号码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.TimesOfAdmission">
            <summary>
            第几次入院(>=1)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.HistoryProvider">
            <summary>
            病史陈述者
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.State">
            <summary>
            病人状态
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.PreState">
            <summary>
            病人前一状态,时限质量会用到
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.PatientCondition">
            <summary>
            危重级别
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.IsBaby">
            <summary>
            婴儿标志
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.Medicare">
            <summary>
            医保代码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.MedicareQuota">
            <summary>
            医保定额
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.PaymentKind">
            <summary>
            病人性质(医疗付款方式)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.PatientSource">
            <summary>
            病人来源（本地、外地） 
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.PatientKind">
            <summary>
            病人类型（工伤、职业病）
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.VouchersCode">
            <summary>
            凭证类型代码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.VouchersName">
            <summary>
            凭证类型名称
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.VouchersNo">
            <summary>
            凭证号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.Recorder">
            <summary>
            记录员
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.ModifyDate">
            <summary>
            更新日期
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.PersonalInformation">
            <summary>
            病人基本信息
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.InfoOfAdmission">
            <summary>
            住院信息
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.HospitalName">
            <summary>
            医院名称(XXX医院)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.HospitalSubName">
            <summary>
            医院附加名称，如"XXX附属"
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.HospitalID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Inpatient.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.Employee">
            <summary>
            职工类
            TODO: 最好是再继承出具体的医生类、护士类等子类
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Employee.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Employee.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.Employee.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.Employee.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.Employee.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.Employee.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.Birthday">
            <summary>
            出生日期
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.MaritalState">
            <summary>
            婚姻状况
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.IdentityNo">
            <summary>
            身份证号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.CurrentDept">
            <summary>
            所属科室
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.CurrentWard">
            <summary>
            所属病区
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.Kind">
            <summary>
            职工类别
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.TechnicalTitle">
            <summary>
            职称代码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.RecipeSealNo">
            <summary>
            处方章号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.HasRecipeRight">
            <summary>
            是否有处方权
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.HasNarcosisRight">
            <summary>
            是否有麻醉处方权
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.GroupCode">
            <summary>
            分组编码(对医生进行分组管理时需要)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.Grade">
            <summary>
            医生级别
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.DoctorGradeNumber">
            <summary>
            医生级别数字（便于比较医生级别高低，从低到高，由1开始, -1表示无级别）
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Employee.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ZoneProvince">
            <summary>
            地区代码--省、直辖市
            TODO: 有关地区代码的处理还需改进设计
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ZoneProvince.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ZoneProvince.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.ZoneProvince.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.ZoneProvince.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.ZoneProvince.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ZoneProvince.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ZoneProvince.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ZoneCountry">
            <summary>
            地区代码--区县
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ZoneCountry.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ZoneCountry.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.ZoneCountry.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.ZoneCountry.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.ZoneCountry.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ZoneCountry.ParentZone">
            <summary>
            所属地区
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ZoneCountry.Grade">
            <summary>
            级别
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ZoneCountry.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ZoneCountry.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ICDDiagnosis">
            <summary>
            医院诊断库类
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ICDDiagnosis.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ICDDiagnosis.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.ICDDiagnosis.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.ICDDiagnosis.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.ICDDiagnosis.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ICDDiagnosis.IcdCode">
            <summary>
            ICD10代码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ICDDiagnosis.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ICDDiagnosis.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Framework.DataAccessFactory">
            <summary>
            取得数据存储的对象
            </summary>
        </member>
        <member name="M:Winning.Framework.DataAccessFactory.GetSqlDataAccess">
            <summary>
            得到一个数据访问对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.DataAccessFactory.GetSqlDataAccess(System.String)">
            <summary>
            通过指定的DbName得到数据访问对象
            </summary>
            <param name="dbName"></param>
            <returns></returns>
        </member>
        <member name="P:Winning.Framework.DataAccessFactory.CacheComConfig">
            <summary>
            取得Cache访问组件的设置
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Framework.DataAccessFactory.DefaultDataAccess">
            <summary>
            默认的数据访问连接。
            以后在自定义的控件和组件内若需要使用数据访问时用此属性。KwSystem会初始化此属性，以避免重复创建数据连接
            </summary>
        </member>
        <member name="T:Winning.Framework.IPluginOwnerMenu">
            <summary>
            插件内自定义菜单接口
            </summary>
        </member>
        <member name="M:Winning.Framework.IPluginOwnerMenu.Click">
            <summary>
            单击事件
            </summary>
        </member>
        <member name="P:Winning.Framework.IPluginOwnerMenu.Text">
            <summary>
            显示文本
            </summary>
        </member>
        <member name="P:Winning.Framework.IPluginOwnerMenu.subMenus">
            <summary>
            子菜单
            </summary>
        </member>
        <member name="T:Winning.Framework.IPluginOwnerToolBar">
            <summary>
            自定义工具条接口
            </summary>
        </member>
        <member name="P:Winning.Framework.IPluginOwnerToolBar.Items">
            <summary>
            工具条项目
            </summary>
        </member>
        <member name="P:Winning.Framework.IPluginOwnerToolBar.Name">
            <summary>
            名称(同一plugin中保持唯一)
            </summary>
        </member>
        <member name="T:Winning.Framework.IPluginContextMenu">
            <summary>
            自定义弹出菜单接口
            </summary>
        </member>
        <member name="M:Winning.Framework.IPluginContextMenu.AddItem(Winning.Framework.IPlugInMenuInfo)">
            <summary>
            增加一项
            </summary>
            <param name="menu"></param>
        </member>
        <member name="M:Winning.Framework.IPluginContextMenu.InsertAt(System.Int32,Winning.Framework.IPlugInMenuInfo)">
            <summary>
            指定位置增加一项
            </summary>
            <param name="index"></param>
            <param name="menu"></param>
        </member>
        <member name="M:Winning.Framework.IPluginContextMenu.RemoveItem(Winning.Framework.IPlugInMenuInfo)">
            <summary>
            移除一项
            </summary>
            <param name="menu"></param>
        </member>
        <member name="M:Winning.Framework.IPluginContextMenu.RemoveAt(System.Int32)">
            <summary>
            移除一项指定位置
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Winning.Framework.IPluginContextMenu.MenuType">
            <summary>
            菜单形式
            </summary>
        </member>
        <member name="P:Winning.Framework.IPluginContextMenu.Items">
            <summary>
            子菜单
            </summary>
        </member>
        <member name="T:Winning.Framework.PluginContextMenuType">
            <summary>
            弹出菜单类型
            </summary>
        </member>
        <member name="F:Winning.Framework.PluginContextMenuType.DotNet">
            <summary>
            .Net = ContextMenu
            </summary>
        </member>
        <member name="F:Winning.Framework.PluginContextMenuType.DevExpress">
            <summary>
            Devexpress = PopupMenu
            </summary>
        </member>
        <member name="T:Winning.Framework.IPlugInMenuInfo">
            <summary>
            插件菜单接口
            </summary>
        </member>
        <member name="P:Winning.Framework.IPlugInMenuInfo.MenuInfo">
            <summary>
            插件信息
            </summary>
        </member>
        <member name="P:Winning.Framework.IPlugInMenuInfo.SubItems">
            <summary>
            子菜单
            </summary>
        </member>
        <member name="P:Winning.Framework.IPlugInMenuInfo.Text">
            <summary>
            显示
            </summary>
        </member>
        <member name="P:Winning.Framework.IPlugInMenuInfo.Name">
            <summary>
            名称(定位)
            </summary>
        </member>
        <member name="T:Winning.Framework.NativeMethods">
            <summary>
            用于创建无标题栏的窗口
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.GwlStyle">
            <summary>
            GWL_STYLE
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.WMNccreate">
            <summary>
            WM_NCCREATE
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.WMNcactivate">
            <summary>
            WM_NCACTIVATE
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.WSDlgFrame">
            <summary>
            WS_DLGFRAME
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.WMCreate">
            <summary>
            WM_CREATE
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.WMPaint">
            <summary>
            WM_PAINT
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.WMShowWindow">
            <summary>
            WM_SHOWWINDOW
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.HTCaption">
            <summary>
            HTCAPTION
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.WMNclbuttonDown">
            <summary>
            WM_NCLBUTTONDOWN
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.WSSizeBox">
            <summary>
            WS_SIZEBOX
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.WSCaption">
            <summary>
            WS_CAPTION
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.WSSysmenu">
            <summary>
            WS_SYSMENU
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.WSMinimizeBox">
            <summary>
            WS_MINIMIZEBOX
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.WSVisible">
            <summary>
            WS_VISIBLE
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.SWMinimize">
            <summary>
            SWMINIMIZE
            </summary>
        </member>
        <member name="F:Winning.Framework.NativeMethods.SWMaximize">
            <summary>
            SWMaximize
            </summary>
        </member>
        <member name="M:Winning.Framework.NativeMethods.SetWindowLong(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            SetWindowLong
            </summary>
            <param name="hwnd"></param>
            <param name="index"></param>
            <param name="dwNew"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.NativeMethods.GetWindowLong(System.IntPtr,System.Int32)">
            <summary>
            GetWindowLong
            </summary>
            <param name="hwnd"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.NativeMethods.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            SendMessage
            </summary>
            <param name="hwnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.NativeMethods.ReleaseCapture">
            <summary>
            ReleaseCapture
            </summary>
        </member>
        <member name="M:Winning.Framework.NativeMethods.GetSystemMenu(System.IntPtr,System.Boolean)">
            <summary>
            GetSystemMenu
            </summary>
            <param name="hwnd"></param>
            <param name="bRevert"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.NativeMethods.TrackPopupMenu(System.IntPtr,System.UInt32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            TrackPopupMenu
            </summary>
            <param name="hmenu"></param>
            <param name="uFlags"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="nReserved"></param>
            <param name="hwnd"></param>
            <param name="prcRect"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.NativeMethods.EnumWindows(Winning.Framework.NativeMethods.CallBack,System.IntPtr)">
            <summary>
            EnumWindows
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.NativeMethods.ShowWindow(System.Int32,System.Int32)">
            <summary>
            ShowWindow
            </summary>
            <param name="hwnd"></param>
            <param name="nCmdShow"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.NativeMethods.SetActiveWindow(System.Int32)">
            <summary>
            SetActiveWindow
            </summary>
            <param name="hwnd"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.NativeMethods.GetLastActivePopup(System.Int32)">
            <summary>
            GetLastActivePopup
            </summary>
            <param name="hwndOwnder"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.NativeMethods.SetForegroundWindow(System.Int32)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.NativeMethods.CallBack">
            <summary>
            CallBack
            </summary>
            <param name="hwnd"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Common.Eop.PersistentObjectFactory">
            <summary>
            创建持久类工厂
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.PersistentObjectFactory.GetTrueColumnAndDefaultValue(System.String,System.Collections.Generic.Dictionary{System.String,Winning.Common.Eop.ColumnToColumn})">
            <summary>
            在对应表中根据原始列名获得映射的列名或缺省值
            </summary>
            <param name="originalCol"></param>
            <param name="colMaps"></param>
            <returns>{列名, 缺省值}，两个 Cell 不会同时非空</returns>
        </member>
        <member name="M:Winning.Common.Eop.PersistentObjectFactory.GetTrueColumn(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            在对应表中根据原始列名获得映射的列名
            </summary>
            <param name="originalCol"></param>
            <param name="colMaps"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.PersistentObjectFactory.CreateAndIntializeObject(System.String,System.Data.DataRow)">
            <summary>
            创建并初始化指定的类实例
            </summary>
            <param name="objectName"></param>
            <param name="sourceRow">用来初始化数据的数据行</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.PersistentObjectFactory.CreateAndIntializeObject(System.String,System.Data.DataRow,System.Collections.ObjectModel.Collection{Winning.Common.Eop.ColumnToColumn})">
            <summary>
            创建并初始化指定的类实例
            </summary>
            <param name="objectName"></param>
            <param name="sourceRow">用来初始化数据的数据行</param>
            <param name="colMaps">如果是通过数据行中的部分字段创建引用的类，则需要提供当前数据集与类默认数据集的字段映射关系</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.PersistentObjectFactory.InitializeObjectProperty(System.Object,System.Data.DataRow)">
            <summary>
            用DataRow初始化对象的属性
            </summary>
            <param name="targetObj"></param>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.PersistentObjectFactory.SetDataRowValueFromObject(System.Data.DataRow,System.Object)">
            <summary>
            用对象属性给DataRow中对应的字段赋值
            </summary>
            <param name="targetRow">需要赋值的数据行</param>
            <param name="obj">用来赋值的对象</param>
        </member>
        <member name="M:Winning.Common.Eop.PersistentObjectFactory.SetDataRowValueFromObject(System.Data.DataRow,System.Object,System.Collections.ObjectModel.Collection{Winning.Common.Eop.ColumnToColumn})">
            <summary>
            用对象属性给DataRow中对应的字段赋值
            </summary>
            <param name="targetRow">需要赋值的数据行</param>
            <param name="obj">用来赋值的对象</param>
            <param name="colMaps">如果要使用关联类的属性来赋值，则需要提供当前数据集与类默认数据集的字段映射关系</param>
        </member>
        <member name="M:Winning.Common.Eop.PersistentObjectFactory.ResetORMSettings">
            <summary>
            重新调用ORM的设置数据
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.PersistentObjectFactory.CloneEopBaseObject(System.Object)">
            <summary>
            以传入对象为母版克隆对象
            </summary>
            <param name="sourceObj"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.PersistentObjectFactory.GetQuerySentenceByName(System.String)">
            <summary>
            提取指定名称的查询语句
            </summary>
            <param name="sqlName">查询语句名称</param>
            <returns>查询语句</returns>
        </member>
        <member name="P:Winning.Common.Eop.PersistentObjectFactory.SqlSentences">
            <summary>
            预定义的Sql语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PersistentObjectFactory.SqlExecutor">
            <summary>
            数据访问对象
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.PatientBasicInfo">
            <summary>
            病人个人基本信息
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.PatientBasicInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.PatientBasicInfo.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.PatientBasicInfo.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.PatientBasicInfo.RefreshAge(System.DateTime)">
            <summary>
            刷新病人年龄数据
            </summary>
            <param name="inWardTime">入区时间</param>
        </member>
        <member name="M:Winning.Common.Eop.PatientBasicInfo.CalcDisplayAge(System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
            <param name="birthday"></param>
            <param name="endDate"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.PatientBasicInfo.CalculateAge(System.DateTime,System.DateTime,System.String@,System.Int32@)">
            <summary>
            按照病案年龄处理逻辑计算病人截止到指定日期的年龄（显示用）
            </summary>
            <param name="birthday">病人出生日期</param>
            <param name="endDate">截止日期</param>
            <param name="displayAge">显示年龄</param>
            <param name="accurateAge">精确的年龄值</param>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.PatientName">
            <summary>
            患者姓名
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.Sex">
            <summary>
            病人性别
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.Birthday">
            <summary>
            出生日期
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.CurrentAge">
            <summary>
            病人当前年龄,单位：年
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.CurrentDisplayAge">
            <summary>
            病人当前年龄（显示用）
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.DisplayAge">
            <summary>
            显示年龄(入院时年龄，根据实际情况显示的年龄,如XXX年,XX月XX天,XX天)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.IdentificationNo">
            <summary>
            身份证号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.SocialInsuranceNo">
            <summary>
            社保卡号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.InsuranceNo">
            <summary>
            保险卡号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.OtherCardNo">
            <summary>
            其它卡号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.BabySequence">
            <summary>
            婴儿序号(从1开始，0表示不是婴儿)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.MotherFirstPageNo">
            <summary>
            母亲首页序号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.EducationLevel">
            <summary>
            文化程度 
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.MarriageCondition">
            <summary>
            婚姻状况 
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.Nation">
            <summary>
            民族代码 
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.Homeplace">
            <summary>
            出生地
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.DepartmentOfWork">
            <summary>
            工作单位
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.DomiciliaryInfo">
            <summary>
            户口有关信息
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.NativePlace">
            <summary>
            籍贯
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.LinkManInfo">
            <summary>
            联系信息
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.YearsOfEducation">
            <summary>
            受教育年限
            以年为单位
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.Faith">
            <summary>
            宗教信仰
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.CurrentAddress">
            <summary>
            目前住址
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PatientBasicInfo.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ChargeItem">
            <summary>
            收费小项目
            </summary> 
        </member>
        <member name="T:Winning.Common.Eop.ItemBase">
            <summary>
            医嘱项目基类,表示一个具体的医嘱项目,包括项目的基本属性、使用范围及其它特殊标记
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ItemBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ItemBase.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.ItemBase.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.ItemBase.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.ItemBase.ToString">
            <summary>
            默认以"项目名[规格]"的形式返回
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Common.Eop.ItemBase.KeyValue">
            <summary>
            主键的值
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ItemBase.Specification">
            <summary>
            规格
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ItemBase.RetailPrice">
            <summary>
            零售价
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ItemBase.Price">
            <summary>
            单价(含单位)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ItemBase.BaseUnit">
            <summary>
            基础单位(最小单位)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ItemBase.Kind">
            <summary>
            项目类别
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ItemBase.OutpatientSubmitFlag">
            <summary>
            门诊报销标志
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ItemBase.InpatientSubmitFlag">
            <summary>
            住院报销标志
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ItemBase.ItemApplyFlag">
            <summary>
            项目使用范围标志
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ItemBase.OrderManagerFlag">
            <summary>
            医嘱管理标志
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ItemBase.SystemFlag">
            <summary>
            系统标志
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ChargeItem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ChargeItem.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.ChargeItem.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.ChargeItem.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.ChargeItem.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ChargeItem.ItemCatalog">
            <summary>
            项目大类代码
            TODO: 暂时用代码字段，以后改成对象
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ChargeItem.Attributes">
            <summary>
            项目性质
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ChargeItem.PrintAttributes">
            <summary>
            显示控制属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ChargeItem.PlugInformation">
            <summary>
            附加信息(提供额外的处理信息,比如对应的手术代码)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ChargeItem.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ChargeItem.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ClinicItem">
            <summary>
            收费小项目
            </summary> 
        </member>
        <member name="M:Winning.Common.Eop.ClinicItem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ClinicItem.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.ClinicItem.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.ClinicItem.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.ClinicItem.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ClinicItem.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ClinicItem.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.MedicareType">
            <summary>
            医保类型类
            TODO: 临时编写，未完整实现
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.MedicareType.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.MedicareType.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.MedicareType.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.MedicareType.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.MedicareType.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.MedicareType.VoucherCode">
            <summary>
            凭证类型
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.MedicareType.VoucherName">
            <summary>
            凭证类型名称
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.MedicareType.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.MedicareType.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.DruggeryForm">
            <summary>
            药品剂型类
            TODO: 临时编写，未完整实现
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.DruggeryForm.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.DruggeryForm.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.DruggeryForm.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.DruggeryForm.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.DruggeryForm.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.DruggeryForm.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.DruggeryForm.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Framework.AppConfigDalc">
            <summary>
            配置数据访问类
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.ColKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.ColName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.ColValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.ColDescript">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.ColType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.ColKeyset">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.ColIsChoice">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.ColShowlist">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.ColDesign">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.ColCanSetUserLevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.ColValid">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.ColGzgw">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.ColZgdm">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.ColSsxt">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.CapKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.CapDescript">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.AppConfigDalc.CapName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Framework.AppConfigDalc.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Winning.Framework.AppConfigDalc.SelectAppConfigs">
            <summary>
            返回应用配置数据表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.AppConfigDalc.CheckUserConfigState(System.String,Winning.Framework.SubSystemFlag)">
            <summary>
            检查用户的配置参数是否完整
            </summary>
            <param name="userId"></param>
            <param name="systemId">当前系统</param>
        </member>
        <member name="M:Winning.Framework.AppConfigDalc.SelectUserConfigs(System.String)">
            <summary>
            选择某操作员的当前系统的配置(包括岗位的通用配置,YY_USERCFG.zgdm is null)
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.AppConfigDalc.DataRow2EmrAppConfig(System.Data.DataRow)">
            <summary>
            数据行构造配置类实例
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.AppConfigDalc.UpdateEmrAppConfig(Winning.Framework.EmrAppConfig)">
            <summary>
            更新配置值
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Winning.Framework.AppConfigDalc.SelectAppConfig(System.String)">
            <summary>
            选择指定的配置
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.AppConfigDalc.SelectAppConfigs(System.String[])">
            <summary>
            选择指定的配置集合
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.AppConfigDalc.SelectAppConfig(System.String,System.String)">
            <summary>
            选择指定的用户配置(多个包括岗位级,用户级)
            </summary>
            <param name="key"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.IApplication">
            <summary>
            应用程序对象接口，该接口对象目前主要用于插件中访问当前用户登录信息，当前机器、当前患者，当前病区等的相关信息
            </summary>
        </member>
        <member name="M:Winning.Framework.IApplication.LoadAnotherAssembly(System.String,System.String,System.String,System.Object[])">
            <summary>
            调用另一个Assembly
            </summary>
            <param name="assemblyName"></param>
            <param name="assemblyClassName"></param>
            <param name="loadFunctionName"></param>
            <param name="loadParameters"></param>
        </member>
        <member name="M:Winning.Framework.IApplication.LoadPlugIn(System.String)">
            <summary>
            手动加载指定的插件，如在一个模块中启动另一个（实现了IStart接口）模块
            </summary>
            <param name="typeName">类名GetType().TypeName</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IApplication.SendBusiness(Winning.Framework.IPlugIn,System.String,System.Object[])">
            <summary>
            发送一个事务（在什么场景下用呢？请知道的人完善）
            </summary>
            <param name="plugIn"></param>
            <param name="businessName"></param>
            <param name="businessParameters"></param>
        </member>
        <member name="M:Winning.Framework.IApplication.ChoosePatient(System.Decimal)">
            <summary>
            根据病人首页序号加载病人信息
            </summary>
            <param name="firstPageNo">病人首页序号</param>
        </member>
        <member name="M:Winning.Framework.IApplication.RefreshPatientInfos">
            <summary>
            刷新病人信息数据集
            </summary>
            <returns>成功：空  失败：失败原因</returns>
        </member>
        <member name="P:Winning.Framework.IApplication.Pluginfo">
            <summary>
            当前插件附属信息
            如果修改了istarup接口，则所有的插件都需要修改
            为减少修改量,特将插件菜单信息绑定至iapplication接口内
            只在iplugin构造的时候使用
            如果乱用后果自负
            </summary>
        </member>
        <member name="P:Winning.Framework.IApplication.User">
            <summary>
            获得用户对象
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IApplication.DockingHelper">
            <summary>
            获得Docking控制对象
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IApplication.RemotingHelper">
            <summary>
            获得远程服务对象接口
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IApplication.CurrentPatientInfo">
            <summary>
            当前病人信息
            </summary>
        </member>
        <member name="P:Winning.Framework.IApplication.CustomMessageBox">
            <summary>
            获得自定义消息提示的对象接口，对MessageBox的一层封装，信息提示时不直接使用MessageBox，而使用该封装的对象
            </summary>
        </member>
        <member name="P:Winning.Framework.IApplication.SqlHelper">
            <summary>
            获得访问数据库的辅助对象
            </summary>
        </member>
        <member name="P:Winning.Framework.IApplication.GenShortCode">
            <summary>
            获得生成拼音五笔缩写的类实例
            </summary>
        </member>
        <member name="P:Winning.Framework.IApplication.MacAddress">
            <summary>
            网卡Mac地址
            </summary>
        </member>
        <member name="P:Winning.Framework.IApplication.ContextMenu">
            <summary>
            获得操作列表的右键菜单
            </summary>
        </member>
        <member name="P:Winning.Framework.IApplication.AppConfig">
            <summary>
            读取配置接口
            </summary>
        </member>
        <member name="P:Winning.Framework.IApplication.PatientInfos">
            <summary>
            病人相关信息数据集，根据表名进行使用。
            表名:Inpatients[当前科室病区的病人数据]Beds[当前科室病区的床位信息]
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OrderAttributeFlag">
            <summary>
            医嘱特殊标记(以二进制位表示)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderAttributeFlag.Provide4Oneself">
            <summary>
            自备药标志
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderAttributeFlag.TransfusionOrder">
            <summary>
            输液医嘱
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderAttributeFlag.NeedPrint">
            <summary>
            需要打印标志
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderAttributeFlag.CeaseLongOrder">
            <summary>
            是否需要停长期医嘱(只对手术医嘱有效)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderAttributeFlag.NeedAudit">
            <summary>
            需要医保审批标志
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderAttributeFlag.NeedSupLongOderToTemp">
            <summary>
            暂不启用
            是否需要拷贝长嘱到临嘱
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderAttributeFlag.UsedFromTomorrow">
            <summary>
            医嘱“明起”标志
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.LinkMan">
            <summary>
            联系人
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.LinkMan.#ctor">
            <summary>
            初始化空实例
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.LinkMan.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.LinkMan.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.LinkMan.Relation">
            <summary>
            联系关系
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.LinkMan.ContactAddress">
            <summary>
            联系地址
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.LinkMan.ContactDepartment">
            <summary>
            联系单位
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.LinkMan.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.LinkMan.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.Department">
            <summary>
            院内科室
            TODO: 还缺部分属性
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Department.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Department.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.Department.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.Department.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.Department.InitializeCorrespondingWards(Winning.Framework.IDataAccess)">
            <summary>
            初始化科室对应病区数据
            </summary>
            <param name="sqlExecutor"></param>
        </member>
        <member name="M:Winning.Common.Eop.Department.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Department.HospitalCode">
            <summary>
            所属医院代码
            TODO: 需要补充医院类
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Department.LevelADeptCode">
            <summary>
            所属一级科室代码
            TODO: 需补充一级科室类
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Department.LevelBDeptCode">
            <summary>
            所属二级科室代码
            TODO: 需补充二级科室类
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Department.Kind">
            <summary>
            科室类别
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Department.DeptAttribute">
            <summary>
            科室标志
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Department.CorrespondingWards">
            <summary>
            对应病区代码列表
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Department.CorrespondingWardsCondition">
            <summary>
            对应病区过滤条件
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Department.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Department.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Localization.ResourceEnumConverter">
            <summary>
            定义一个枚举值的类型转换器，使用资源文件对枚举值和显示名称之间进行转换。
            </summary>
            <remarks>
            在工程里从该类继承一个类，在构造函数里传入ResourceManager。
            
            <code lang="C#" escaped="true" >
            class LocalizedEnumConverter : ResourceEnumConverter
            {
               public LocalizedEnumConverter(Type type)
                   : base(type, Properties.Resources.ResourceManager)
               {
               }
            }    
            </code>
            
            <code lang="Visual Basic" escaped="true" >
            Public Class LocalizedEnumConverter
            
               Inherits ResourceEnumConverter
               Public Sub New(ByVal sType as Type)
                   MyBase.New(sType, My.Resources.ResourceManager)
               End Sub
            End Class    
            </code>
            
            在资源编辑界面设置枚举值字符串。资源的名称以“枚举类型名_枚举值”的形式命名，
            例如“MyEnum_MyValue”。在工程里，将LocalizedEnumConverter指定为枚举类型的默认
            类型转换器（使用TypeConverter attribute）。
            </remarks>
        </member>
        <member name="M:Winning.Localization.ResourceEnumConverter.GetLookupTable(System.Globalization.CultureInfo)">
            <summary>
            Get the lookup table for the given culture (creating if necessary)
            </summary>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Localization.ResourceEnumConverter.GetValueText(System.Globalization.CultureInfo,System.Object)">
            <summary>
            Return the text to display for a simple value in the given culture
            </summary>
            <param name="culture">The culture to get the text for</param>
            <param name="value">The enum value to get the text for</param>
            <returns>The localized text</returns>
        </member>
        <member name="M:Winning.Localization.ResourceEnumConverter.IsSingleBitValue(System.UInt64)">
            <summary>
            Return true if the given value is can be represented using a single bit
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Localization.ResourceEnumConverter.GetFlagValueText(System.Globalization.CultureInfo,System.Object)">
            <summary>
            Return the text to display for a flag value in the given culture
            </summary>
            <param name="culture">The culture to get the text for</param>
            <param name="value">The flag enum value to get the text for</param>
            <returns>The localized text</returns>
        </member>
        <member name="M:Winning.Localization.ResourceEnumConverter.GetValue(System.Globalization.CultureInfo,System.String)">
            <summary>
            Return the Enum value for a simple (non-flagged enum)
            </summary>
            <param name="culture">The culture to convert using</param>
            <param name="text">The text to convert</param>
            <returns>The enum value</returns>
        </member>
        <member name="M:Winning.Localization.ResourceEnumConverter.GetFlagValue(System.Globalization.CultureInfo,System.String)">
            <summary>
            Return the Enum value for a flagged enum
            </summary>
            <param name="culture">The culture to convert using</param>
            <param name="text">The text to convert</param>
            <returns>The enum value</returns>
        </member>
        <member name="M:Winning.Localization.ResourceEnumConverter.#ctor(System.Type,System.Resources.ResourceManager)">
            <summary>
            Create a new instance of the converter using translations from the given resource manager
            </summary>
            <param name="type"></param>
            <param name="resourceManager"></param>
        </member>
        <member name="M:Winning.Localization.ResourceEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert string values to enum values
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Localization.ResourceEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert the enum value to a string
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Localization.ResourceEnumConverter.ConvertToString(System.Enum)">
            <summary>
            Convert the given enum value to string using the registered type converter
            </summary>
            <param name="value">The enum value to convert to string</param>
            <returns>The localized string value for the enum</returns>
        </member>
        <member name="M:Winning.Localization.ResourceEnumConverter.GetValues(System.Type,System.Globalization.CultureInfo)">
            <summary>
            Return a list of the enum values and their associated display text for the given enum type
            </summary>
            <param name="enumType">The enum type to get the values for</param>
            <param name="culture">The culture to get the text for</param>
            <returns>
            A list of KeyValuePairs where the key is the enum value and the value is the text to display
            </returns>
            <remarks>
            This method can be used to provide localized binding to enums in ASP.NET applications.   Unlike 
            windows forms the standard ASP.NET controls do not use TypeConverters to convert from enum values
            to the displayed text.   You can bind an ASP.NET control to the list returned by this method by setting
            the DataValueField to "Key" and theDataTextField to "Value". 
            </remarks>
        </member>
        <member name="M:Winning.Localization.ResourceEnumConverter.GetValues(System.Type)">
            <summary>
            Return a list of the enum values and their associated display text for the given enum type in the current UI Culture
            </summary>
            <param name="enumType">The enum type to get the values for</param>
            <returns>
            A list of KeyValuePairs where the key is the enum value and the value is the text to display
            </returns>
            <remarks>
            This method can be used to provide localized binding to enums in ASP.NET applications.   Unlike 
            windows forms the standard ASP.NET controls do not use TypeConverters to convert from enum values
            to the displayed text.   You can bind an ASP.NET control to the list returned by this method by setting
            the DataValueField to "Key" and theDataTextField to "Value". 
            </remarks>
        </member>
        <member name="T:Winning.Framework.MyFormVisualStyle">
            <summary>
            窗口可视型枚举项
            </summary>
        </member>
        <member name="F:Winning.Framework.MyFormVisualStyle.Null">
            <summary>
            空,默认当前
            </summary>
        </member>
        <member name="F:Winning.Framework.MyFormVisualStyle.ThreeD">
            <summary>
            _3D
            </summary>
        </member>
        <member name="F:Winning.Framework.MyFormVisualStyle.TwoD">
            <summary>
            _2D
            </summary>
        </member>
        <member name="T:Winning.Framework.VisualStyle">
            <summary>
            VisualStyle
            </summary>
        </member>
        <member name="M:Winning.Framework.VisualStyle.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Winning.Framework.VisualStyle.#ctor(System.Drawing.Color,System.Windows.Forms.BorderStyle)">
            <summary>
            ctor2
            </summary>
            <param name="bgColor"></param>
            <param name="bStyle"></param>
        </member>
        <member name="M:Winning.Framework.VisualStyle.#ctor(Winning.Framework.MyFormVisualStyle)">
            <summary>
            ctor3
            </summary>
            <param name="styleId"></param>
        </member>
        <member name="P:Winning.Framework.VisualStyle.BGColor">
            <summary>
            BackgroundColor
            </summary>
        </member>
        <member name="P:Winning.Framework.VisualStyle.ButtonStyle">
            <summary>
            button style
            </summary>
        </member>
        <member name="P:Winning.Framework.VisualStyle.VisualStyleId">
            <summary>
            visual style id
            </summary>
        </member>
        <member name="T:Winning.Framework.XmlFileSelectEditor">
            <summary>
            XmlFileSelectEditor
            </summary>
        </member>
        <member name="M:Winning.Framework.XmlFileSelectEditor.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Winning.Framework.XmlFileSelectEditor.CreateFilterEntry">
            <summary>
            文件后缀
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.XmlFileSelectEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            override EditValue
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.XmlFileSelectEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            override GetEditStyle
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.NativeMethodsPoint">
            <summary>
            Nested Types
            </summary>
        </member>
        <member name="M:Winning.Framework.NativeMethodsPoint.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Winning.Framework.NativeMethodsPoint.#ctor(System.Int32,System.Int32)">
            <summary>
            ctor2
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:Winning.Framework.NativeMethodsPoint.X">
            <summary>
            x
            </summary>
        </member>
        <member name="P:Winning.Framework.NativeMethodsPoint.Y">
            <summary>
            y
            </summary>
        </member>
        <member name="T:Winning.Framework.Security.HisEncryption">
            <summary>
            His加密类
            注：虽然采用与HIS程序一致的算法，但是HIS程序采用bdsj的后8位进行加密，EMR中取bdsj的16位全部进行加密
            </summary>
        </member>
        <member name="F:Winning.Framework.Security.HisEncryption.PasswordLength">
            <summary>
            加密后的密码长度
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.HisEncryption.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.HisEncryption.CharArrayLength(System.Char[])">
            <summary>
            字符数组长度
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.Security.HisEncryption.LoadKey">
            <summary>
            Loadkey
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.HisEncryption.PreProcess">
            <summary>
            preprocess
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.HisEncryption.EncodeStringSql(System.String,System.Int32,System.String)">
            <summary>
            加密字符串sql用,形式为Char(xx)+Char(xx)...
            </summary>
            <param name="buffer">密钥</param>
            <param name="len">长度=8</param>
            <param name="key">传入的明码密码</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.Security.HisEncryption.EncodeString(System.String,System.Int32,System.String)">
            <summary>
            加密串
            </summary>
            <param name="buffer">密钥</param>
            <param name="len">长度=8</param>
            <param name="key">传入的明码密码</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.Security.HisEncryption.EncodeString2ByteArray(System.String,System.Int32,System.String)">
            <summary>
            加密串
            </summary>
            <param name="buffer">密钥</param>
            <param name="len">长度=8</param>
            <param name="key">传入的明码密码</param>
            <returns>返回字符数组</returns>
        </member>
        <member name="P:Winning.Framework.Security.HisEncryption.EncryptPassword">
            <summary>
            加密密码
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.HisEncryption.UNEncryptPassword">
            <summary>
            解密密码
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ItemUnit">
            <summary>
            项目单位结构体
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ItemUnit.#ctor(System.String,System.Decimal,Winning.Common.Eop.DruggeryUnitKind)">
            <summary>
            用传入的代码和名称初始化CodeItem
            </summary>
            <param name="name">单位名称</param>
            <param name="quotiety">单位系数(相对于最小单位)</param>
            <param name="kind">单位类别</param>
        </member>
        <member name="M:Winning.Common.Eop.ItemUnit.#ctor(System.Object,System.Object,System.Object)">
            <summary>
            用传入的代码和名称对象初始化CodeItem
            </summary>
            <param name="name">单位名称</param>
            <param name="quotiety">单位系数(相对于最小单位)</param>
            <param name="kind">单位类型</param>
        </member>
        <member name="M:Winning.Common.Eop.ItemUnit.#ctor(Winning.Common.Eop.ItemUnit)">
            <summary>
            用传入的ItemUnit创建新的ItemUnit
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Winning.Common.Eop.ItemUnit.Convert2BaseUnit(System.Decimal)">
            <summary>
            将以“当前单位”为单位的数量转换成以“最小单位”为单位的数量
            </summary>
            <param name="quantity">相对于当前单位的数量</param>
            <returns>相对于最小单位的数量</returns>
        </member>
        <member name="M:Winning.Common.Eop.ItemUnit.Convert2CurrentUnit(System.Decimal)">
            <summary>
            将以“最小单位”为单位的数量转换成以“当前单位”为单位的数量
            </summary>
            <param name="quantity">相对于最小单位的数量</param>
            <returns>相对于当前单位的数量</returns>
        </member>
        <member name="M:Winning.Common.Eop.ItemUnit.Equals(System.Object)">
            <summary>
            确定两个对象是否具有相同的值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.ItemUnit.GetHashCode">
            <summary>
            返回该实例的哈希代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.ItemUnit.ToString">
            <summary>
            获取对象的 Expression（如果存在的话）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.ItemUnit.op_Equality(Winning.Common.Eop.ItemUnit,Winning.Common.Eop.ItemUnit)">
            <summary>
            
            </summary>
            <param name="unit1"></param>
            <param name="unit2"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.ItemUnit.op_Inequality(Winning.Common.Eop.ItemUnit,Winning.Common.Eop.ItemUnit)">
            <summary>
            
            </summary>
            <param name="unit1"></param>
            <param name="unit2"></param>
            <returns></returns>
        </member>
        <member name="P:Winning.Common.Eop.ItemUnit.Name">
            <summary>
            单位名称
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ItemUnit.Quotiety">
            <summary>
            单位系数(数量/此系数=相对于最小单位的数量)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ItemUnit.Kind">
            <summary>
            单位类别
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ItemUnit.IsEmpty">
            <summary>
            标记单位结构体是否被正确初始化
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OrderContentFactory">
            <summary>
            创建医嘱内容的工厂类
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderContentFactory.GetOrderContentClassName(System.Object)">
            <summary>
            根据DataRow中制定列的值确定合适的医嘱内容类名
            </summary>
            <param name="kindValue"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderContentFactory.CreateOrderContent(System.Data.DataRow)">
            <summary>
            根据指定的DataRow创建医嘱内容对象。首先将从DataRow中提取医嘱类别。
            </summary>
            <param name="sourceRow">包含初始数据的医嘱DataRow</param>
            <returns>合适的医嘱对象</returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderContentFactory.CreateOrderContent(Winning.Common.Eop.OrderContentKind,System.Data.DataRow)">
            <summary>
            根据指定的医嘱类型和DataRow创建医嘱内容对象
            </summary>
            <param name="orderKind">医嘱类别</param>
            <param name="sourceRow">包含初始数据的医嘱DataRow</param>
            <returns>合适的医嘱对象</returns>
        </member>
        <member name="T:Winning.Common.Eop.OperationOrderContent">
            <summary>
            手术医嘱内容（应该只出现在临时医嘱中）,需要填写手术时间
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OrderContent">
            <summary>
            医嘱内容基类。不同的医嘱其医嘱内容有很大差别，处理方式也各不相同。
            所以抽象出医嘱内容基类，在继承类中实现各自的处理方式、显示控制及特有属性。
            现在每一个医嘱类别对应一个医嘱内容子类
            </summary> 
        </member>
        <member name="F:Winning.Common.Eop.OrderContent.CombFlag">
            <summary>
            组合字段时使用的分隔符
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderContent.#ctor">
            <summary>
            Inherited constructor
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderContent.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.OrderContent.FireOrderContentChanged(System.EventArgs)">
            <summary>
            医嘱列表改变事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Common.Eop.OrderContent.GenerateOutputs">
            <summary>
            生成输出内容
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderContent.ResetDisplayTexts">
            <summary>
            重设当前可显示的内容,为各项内容间加上空格
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderContent.InitBaseDisplayTexts">
            <summary>
            创建并初始化基本的显示内容
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderContent.ResetContentOutputText">
            <summary>
            重设可显示内容和输出内容列表
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderContent.ToString">
            <summary>
            默认以"项目[规格], 数量 单位, 用法, 频次, 嘱托"的形式返回医嘱内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderContent.CheckProperties">
            <summary>
            检查医嘱内容的属性是否有效。
            </summary>
            <returns>检查结果。空串表示无问题</returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderContent.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderContent.BeginInit">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderContent.EndInit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderContent.Item">
            <summary>
            医嘱项目
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderContent.Amount">
            <summary>
            项目数量
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderContent.CurrentUnit">
            <summary>
            当前使用的单位
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderContent.ItemUsage">
            <summary>
            用法对象
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderContent.ItemFrequency">
            <summary>
            频次对象
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderContent.OrderKind">
            <summary>
            医嘱类别
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderContent.Attributes">
            <summary>
            特殊标记
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderContent.EntrustContent">
            <summary>
            嘱托
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderContent.ParentOrder">
            <summary>
            关联的医嘱对象
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderContent.CanCeased">
            <summary>
            该内容的医嘱是否可以停止（一般药品、项目的长期医嘱才可以设停止时间）
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderContent.KeyInitialized">
            <summary>
            无主键，永远是False
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderContent.Outputs">
            <summary>
            当前医嘱对应的输出内容(CustomDraw时使用)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderContent.ProcessCreateOutputeInfo">
            <summary>
            处理输出信息创建
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderContent.Texts">
            <summary>
            当前可显示的内容集合
            </summary>
        </member>
        <member name="E:Winning.Common.Eop.OrderContent.OrderContentChanged">
            <summary>
            医嘱内容改变事件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OrderContent.GenerateOutputInfo">
            <summary>
            输出信息创建方法委托
            </summary>
            <param name="texts"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OperationOrderContent.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OperationOrderContent.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.OperationOrderContent.ComposeEntrustContent">
            <summary>
            将手术时间和麻醉代码组合到嘱托中
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OperationOrderContent.ParseInfoFromEntrustContent(System.String)">
            <summary>
            从嘱托中解析出手术时间和麻醉代码，并赋值给对应属性
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OperationOrderContent.ResetDisplayTexts">
            <summary>
            重设当前可显示的内容,为各项内容间加上空格
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OperationOrderContent.CheckProperties">
            <summary>
            校验属性值
            </summary>
            <returns>返回字符串不为空表示有属性的值不正确</returns>
        </member>
        <member name="M:Winning.Common.Eop.OperationOrderContent.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OperationOrderContent.CanCeased">
            <summary>
            标记是否允许停止
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OperationOrderContent.EntrustContent">
            <summary>
            医嘱嘱托字段
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OperationOrderContent.OperationTime">
            <summary>
            手术时间(保存在嘱托字段中)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OperationOrderContent.AnesthesiaOperation">
            <summary>
            麻醉方法(保存在嘱托中)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OperationOrderContent.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OperationOrderContent.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Framework.PlugInConfigurationReader">
            <summary>
            插件Plugin的设置内容读取操作
            </summary>
        </member>
        <member name="M:Winning.Framework.PlugInConfigurationReader.#ctor(System.String,System.String,System.String)">
            <summary>
            Ctor
            </summary>
            <param name="configFileName">配置文件的全路径名称</param>
            <param name="assemblySetPath"></param>
            <param name="assemblyInterfaceType">Plugins实现的接口类型</param>
        </member>
        <member name="M:Winning.Framework.PlugInConfigurationReader.#ctor(System.String,Winning.Framework.PlugInLoader,System.String)">
            <summary>
            Ctor2 ,指定Loader
            </summary>
            <param name="configFileName"></param>
            <param name="plugInLoader"></param>
            <param name="assemblyInterfaceType"></param>
        </member>
        <member name="M:Winning.Framework.PlugInConfigurationReader.CreateAndReadPlugInConfiguration(System.String,System.String,System.String)">
            <summary>
            创建并读取插件的配置信息
            </summary>
            <param name="configFileName">配置文件的全路径名称</param>
            <param name="assemblySetPath">Plugins所在的全路径名称</param>
            <param name="assemblyInterfaceType">Plugins实现的接口类型</param>
        </member>
        <member name="M:Winning.Framework.PlugInConfigurationReader.CreateAndReadPlugInConfiguration(System.String,Winning.Framework.PlugInLoader,System.String)">
            <summary>
            创建并读取插件的配置信息,指定加载类实例
            </summary>
            <param name="configFileName"></param>
            <param name="plugInLoader">加载类</param>
            <param name="assemblyInterfaceType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.PlugInConfigurationReader.CreateAndReadPlugInConfiguration(System.String,Winning.Framework.PlugInLoader,System.String,System.Boolean)">
            <summary>
            创建并读取插件的配置信息,指定加载类实例
            </summary>
            <param name="configFileName"></param>
            <param name="plugInLoader">加载类</param>
            <param name="assemblyInterfaceType"></param>
            <param name="needSearchPlugIn">是否需要遍历PlugIn以生成菜单文件</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.PlugInConfigurationReader.SavePlugInConfiguration2Xml(System.String,System.Collections.ObjectModel.Collection{Winning.Framework.PlugInConfiguration})">
            <summary>
            保存菜单设置数组到菜单文件
            </summary>
            <param name="configFileName"></param>
            <param name="plugInConfigurations"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.PlugInConfiguration">
            <summary>
            插件Plugin的设置内容
            </summary>
        </member>
        <member name="M:Winning.Framework.PlugInConfiguration.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:Winning.Framework.PlugInConfiguration.Clone">
            <summary>
            复制1个
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Framework.PlugInConfiguration.AssemblyName">
            <summary>
            插件的模块文件名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.PlugInConfiguration.AssemblyStartupClass">
            <summary>
            插件启动的类名
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.PlugInConfiguration.AssemblyStartupParam">
            <summary>
            插件启动的启动参数
            主要是加载同一启动类内部封装的不同插件
            </summary>
        </member>
        <member name="P:Winning.Framework.PlugInConfiguration.MenuCaption">
            <summary>
            插件的菜单名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.PlugInConfiguration.MenuParentCaption">
            <summary>
            插件菜单加载到所属的菜单名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.PlugInConfiguration.SubSystemName">
            <summary>
            插件所属的子系统
            </summary>
        </member>
        <member name="P:Winning.Framework.PlugInConfiguration.SubSystemId">
            <summary>
            插件所属的子系统的代码
            </summary>
        </member>
        <member name="P:Winning.Framework.PlugInConfiguration.Visible">
            <summary>
            菜单是否可见
            </summary>
        </member>
        <member name="P:Winning.Framework.PlugInConfiguration.Icon">
            <summary>
            得到或设置菜单图标
            </summary>
        </member>
        <member name="P:Winning.Framework.PlugInConfiguration.IconName">
            <summary>
            得到或设置菜单图标名称
            </summary>
        </member>
        <member name="P:Winning.Framework.PlugInConfiguration.UsedCommon">
            <summary>
            是否是常用菜单
            </summary>
            add by zhouhui 增加是否常用菜单
        </member>
        <member name="T:Winning.Framework.PlugInMenuInfoAttribute">
            <summary>
            插件Assembly的加载在框架上的菜单信息
            </summary>
        </member>
        <member name="M:Winning.Framework.PlugInMenuInfoAttribute.#ctor(System.String,System.String,System.String,System.Type)">
            <summary>
            ctor构造函数
            </summary>
            <param name="menuNameSubsystem">所属的子系统名称</param>
            <param name="menuNameParent">上级菜单名称</param>
            <param name="menuNameAssembly">模块菜单名称</param>
            <param name="startupClassType">启动类</param>
        </member>
        <member name="M:Winning.Framework.PlugInMenuInfoAttribute.#ctor(System.String,System.String,System.String,System.Type,System.String)">
            <summary>
            ctor构造函数
            </summary>
            <param name="menuNameSubsystem">所属的子系统名称</param>
            <param name="menuNameParent">上级菜单名称</param>
            <param name="menuNameAssembly">模块菜单名称</param>
            <param name="startupClassType">启动类</param>
            <param name="iconName">图标名称</param>
        </member>
        <member name="M:Winning.Framework.PlugInMenuInfoAttribute.#ctor(System.String,System.String,System.String,System.Type,System.String,System.Boolean,System.String)">
            <summary>
            ctor
            </summary>
            <param name="menuNameSubsystem">所属的子系统名称</param>
            <param name="menuNameParent">上级菜单名称</param>
            <param name="menuNameAssembly">模块菜单名称</param>
            <param name="startupClassType">启动类</param>
            <param name="iconName">图标名称</param>
            <param name="iscommon">是否通用</param>
            <param name="assemblyStartupParam">启动类加载参数</param>
        </member>
        <member name="P:Winning.Framework.PlugInMenuInfoAttribute.MenuNameSubsystem">
            <summary>
            所属的子系统名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.PlugInMenuInfoAttribute.MenuNameParent">
            <summary>
            上级菜单的名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.PlugInMenuInfoAttribute.MenuNameAssembly">
            <summary>
            代表Assembly的菜单名称,模块菜单名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.PlugInMenuInfoAttribute.StartupClassType">
            <summary>
            启动的类
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.PlugInMenuInfoAttribute.AssemblyStartupParam">
            <summary>
            启动类的参数
            </summary>
        </member>
        <member name="P:Winning.Framework.PlugInMenuInfoAttribute.Visible">
            <summary>
            定义菜单是否可见
            </summary>
        </member>
        <member name="P:Winning.Framework.PlugInMenuInfoAttribute.IconName">
            <summary>
            获得图标名称
            </summary>
        </member>
        <member name="P:Winning.Framework.PlugInMenuInfoAttribute.UsedCommon">
            <summary>
            是否常用
            </summary>
        </member>
        <member name="T:Winning.Framework.AuthorityControlAttribute">
            <summary>
            插件模块在权限控制上的属性控制
            </summary>
        </member>
        <member name="M:Winning.Framework.AuthorityControlAttribute.#ctor(System.Boolean,System.Boolean,System.AttributeTargets)">
            <summary>
            ctor
            </summary>
            <param name="authorityControl"></param>
            <param name="hasWarnning"></param>
            <param name="controlTargets"></param>
        </member>
        <member name="M:Winning.Framework.AuthorityControlAttribute.#ctor(System.Boolean,System.Boolean)">
            <summary>
            ctor
            </summary>
            <param name="authorityControl"></param>
            <param name="hasWarnning"></param>
        </member>
        <member name="P:Winning.Framework.AuthorityControlAttribute.AuthorityControl">
            <summary>
            是否加入权限控制
            </summary>
        </member>
        <member name="P:Winning.Framework.AuthorityControlAttribute.HasWarnning">
            <summary>
            是否显示权限控制的警告信息
            </summary>
        </member>
        <member name="P:Winning.Framework.AuthorityControlAttribute.ControlTargets">
            <summary>
            获得或设置权限控制的目标
            </summary>
        </member>
        <member name="T:Winning.Framework.NoCaptionBarForm">
            <summary>
            无标题栏窗口
            </summary>
        </member>
        <member name="P:Winning.Framework.NoCaptionBarForm.CaptionBar">
            <summary>
            标题栏
            </summary>
        </member>
        <member name="T:Winning.Framework.CaptionBarRenderer">
            <summary>
            ActiveCaptionBarRenderer
            </summary>
        </member>
        <member name="M:Winning.Framework.CaptionBarRenderer.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Winning.Framework.CaptionBarRenderer.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            override OnRenderToolStripBackground
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Framework.CaptionBarRenderer.OnRenderMenuItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            重画菜单项背景
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Winning.Common.Eop.StructPropertyMap">
            <summary>
            结构体属性映射关系
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OneToOneType">
            <summary>
            属性和字段直接对应
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OneToOneType.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Common.Eop.OneToOneType.Property">
            <summary>
            属性名
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OneToOneType.Column">
            <summary>
            列名
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.StructPropertyMap.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Common.Eop.StructPropertyMap.DefaultValue">
            <remarks/>
        </member>
        <member name="P:Winning.Common.Eop.StructPropertyMap.PropertyType">
            <remarks/>
        </member>
        <member name="P:Winning.Common.Eop.StructPropertyMap.ActualProperty">
            <remarks/>
        </member>
        <member name="T:Winning.Common.Eop.PropertyWithClassComplexType">
            <summary>
            属性和其类型名值对，以及类型为抽象类时需要的信息
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.PropertyWithClassType">
            <summary>
            属性和其类型名值对，在设置复杂的对应关系时需要
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.PropertyWithClassType.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Common.Eop.PropertyWithClassType.Property">
            <summary>
            属性名
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.PropertyWithClassType.ClassName">
            <summary>
            属性类型名称
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.PropertyWithClassComplexType.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Common.Eop.PropertyWithClassComplexType.KindColumn">
            <summary>
            表示类别的列名（如属性的类型是抽象类时，将根据类别使用工厂类创建实例；其余情况可以不填）
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.LinkedObject">
            <summary>
            需要为每一种可能出现的相关类指定列映射关系
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.LinkedObject.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Common.Eop.LinkedObject.ColumnToColumns">
            <remarks/>
        </member>
        <member name="P:Winning.Common.Eop.LinkedObject.ClassName">
            <remarks/>
        </member>
        <member name="T:Winning.Common.Eop.ItemPrintAttributeFlag">
            <summary>
            项目打印属性
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemPrintAttributeFlag.NotShowFrequency">
            <summary>
            不显示频次
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemPrintAttributeFlag.NotShowAmount">
            <summary>
            不显示用量
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.TempOrder">
            <summary>
            临时医嘱
            </summary> 
        </member>
        <member name="T:Winning.Common.Eop.Order">
            <summary>
            医嘱基类
            </summary> 
        </member>
        <member name="F:Winning.Common.Eop.Order.HerbSummaryFlag">
            <summary>
            用来判断文字医嘱是否是草药汇总信息的标志
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.Order.HerbSummaryFormat">
            <summary>
            草药汇总信息的格式化串
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.Order.m_IsEditing">
            <summary>
            标记是否正在更新属性(防止频繁调用更新事件)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.Order.m_IsFireAfterSetSynchFlag">
            <summary>
            标记是在更新同步标志后触发改变事件
            (在修改其它属性时会默认将同步标志置为否，而初始化数据时要保留原始的同步标志值)
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Order.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Order.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.Order.FireOrderChanged(Winning.Common.Eop.OrderChangedEventArgs)">
            <summary>
            医嘱列表改变事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Common.Eop.Order.DoAfterOrderContentChanged(System.Object,System.EventArgs)">
            <summary>
            处理医嘱内容改变事件(用来同步触发医嘱的改变事件)
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Common.Eop.Order.ToString">
            <summary>
            返回医嘱内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.Order.AcceptChanges">
            <summary>
            提交自上次调用 AcceptChanges 以来对该医嘱进行的所有更改
            </summary>
            <remarks>在调用 AcceptChanges 时，EndEdit 方法被隐式调用，以便终止任何编辑。如果行的 EditState 是“已添加”或“已修改”，则 EditState 变成“未更改”。如果 EditState 是“删除”，则该行将被移除</remarks>
            TODO: 删除还未实现
        </member>
        <member name="M:Winning.Common.Eop.Order.Added">
            <summary>
            被加入到医嘱对象集合中,更新医嘱状态
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Order.Delete">
            <summary>
            删除自己
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Order.AuditOrder(System.String,System.DateTime)">
            <summary>
            审核医嘱
            </summary>
            <param name="auditorCode"></param>
            <param name="auditTime"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.Order.ExecuteOrder(System.String,System.DateTime)">
            <summary>
            执行医嘱
            </summary>
            <param name="executorCode"></param>
            <param name="executeTime"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.Order.CancelOrder(System.String,System.DateTime)">
            <summary>
            取消医嘱
            </summary>
            <param name="cancellerCode"></param>
            <param name="executeTime"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.Order.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Order.BeginInit">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Order.EndInit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.SerialNo">
            <summary>
            医嘱序号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.PatientId">
            <summary>
            首页序号
            TODO: 以后改成关联病人对象,由调用程序提供
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.GroupSerialNo">
            <summary>
            分组序号(所在组的第一条医嘱的序号)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.GroupPosFlag">
            <summary>
            在组中的位置标记(唯一/头/中间/尾)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.StartDateTime">
            <summary>
            医嘱开始时间
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.Content">
            <summary>
            医嘱内容
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.CreateInfo">
            <summary>
            创建信息
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.AuditInfo">
            <summary>
            审核信息
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.ExecuteInfo">
            <summary>
            执行信息
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.CancelInfo">
            <summary>
            取消信息
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.State">
            <summary>
            医嘱状态
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.OriginalDepartment">
            <summary>
            录入医嘱时病人所在科室
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.OriginalWard">
            <summary>
            录入医嘱时病人所在病区
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.ExecuteDept">
            <summary>
            项目的执行科室
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.HadSync">
            <summary>
            同步标志(是否已同步到HIS)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.Text">
            <summary>
            医嘱内容文本
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.KeyInitialized">
            <summary>
            标记主键是否已初始化
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.ReadOnly">
            <summary>
            只读(该条医嘱是否允许修改)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.EditState">
            <summary>
            医嘱编辑状态
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Order.CanRemove">
            <summary>
            检查医嘱对象是否可以移除
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Common.Eop.Order.CancelInfoText">
            <summary>
            获取取消信息的字符串
            </summary>
        </member>
        <member name="E:Winning.Common.Eop.Order.OrderChanged">
            <summary>
            医嘱改变事件
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.TempOrder.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.TempOrder.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="P:Winning.Common.Eop.TempOrder.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.TempOrder.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.TempOrder.ApplySerialNo">
            <summary>
            (医技)申请单序号
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.Druggery">
            <summary>
            一般的药品项目
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Druggery.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Druggery.#ctor(System.Decimal)">
            <summary>
            
            </summary>
            <param name="productSerialNo"></param>
        </member>
        <member name="M:Winning.Common.Eop.Druggery.#ctor(System.Decimal,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="productSerialNo"></param>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.Druggery.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.Druggery.InitializeDefaultUsageRange(Winning.Framework.IDataAccess)">
            <summary>
            初始化药品默认用法集合(根据剂型)
            </summary>
            <param name="sqlExecutor"></param>
        </member>
        <member name="M:Winning.Common.Eop.Druggery.GetDefaultUsageFrequency(Winning.Common.Eop.SystemApplyRange,Winning.Framework.IDataAccess)">
            <summary>
            取药品默认的用法、频次、数量及单位
            </summary>
            <param name="systemFlag">系统标志(区分门诊还是住院)</param>
            <param name="sqlExecutor"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.Druggery.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.KeyValue">
            <summary>
            主键值
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.ProductSerialNo">
            <summary>
            产地序号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.SpecSerialNo">
            <summary>
            规格序号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.ClinicSerialNo">
            <summary>
            临床序号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.Price">
            <summary>
            价格（带单位）
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.Form">
            <summary>
            药品形态(剂型)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.Catalog">
            <summary>
            药品分类
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.SpecUnit">
            <summary>
            规格单位
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.DepotUnit">
            <summary>
            药库单位
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.PoliclinicUnit">
            <summary>
            门诊单位
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.WardUnit">
            <summary>
            住院单位
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.PaediatricsUnit">
            <summary>
            儿科单位
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.Attributes">
            <summary>
            药品性质
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.SpecialFlag">
            <summary>
            特殊药品标志
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.Source">
            <summary>
            药品来源
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.Manufacturer">
            <summary>
            厂家名称
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.KeyInitialized">
            <summary>
            标记主键是否已初始化
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.DefaultUsageRange">
            <summary>
            剂型对应的用法集合
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.DefaultUsageRangeCondition">
            <summary>
            剂型对应的用法集合
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Druggery.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.DruggeryCatalog">
            <summary>
            药品分类明细类
            TODO: 临时编写，未完整实现
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.DruggeryCatalog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.DruggeryCatalog.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.DruggeryCatalog.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.DruggeryCatalog.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.DruggeryCatalog.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.DruggeryCatalog.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.DruggeryCatalog.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Framework.AppConfigurationWriter">
            <summary>
            设置App.Config
            </summary>
        </member>
        <member name="M:Winning.Framework.AppConfigurationWriter.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Winning.Framework.AppConfigurationWriter.SetNodeOfAppConfig(System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
            <summary>
            设置参数
            </summary>
            <param name="nodeXPath"></param>
            <param name="attrValue"></param>
            <param name="notExistsCreate"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.AppConfigurationWriter.FlushAppConfig">
            <summary>
            保存修改
            </summary>
        </member>
        <member name="T:Winning.Framework.DelegateAssemblyReadAppConfig">
            <summary>
            
            </summary>
            <param name="sectionPropertyValues"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.AppConfigurationReader">
            <summary>
            读取应用程序的配置信息
            </summary>
        </member>
        <member name="M:Winning.Framework.AppConfigurationReader.ReadAppConfiguration(System.String,Winning.Framework.DelegateAssemblyReadAppConfig)">
            <summary>
            读取应用程序设置
            </summary>
            <param name="sectionName"></param>
            <param name="assemblyReadAppConfig"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.ToolCabinet">
            <summary>
            工具箱
            </summary>
        </member>
        <member name="M:Winning.Framework.ToolCabinet.Set2LocalSystemTime(System.DateTime)">
            <summary>
            更改本机时间
            </summary>
            <param name="utcTime"></param>
        </member>
        <member name="T:Winning.Framework.ICustomMessageBox">
            <summary>
            自定义消息提示框
            </summary>
        </member>
        <member name="M:Winning.Framework.ICustomMessageBox.MessageShow(System.String)">
            <summary>
            自定义提示
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.ICustomMessageBox.MessageShow(System.String,Winning.Framework.CustomMessageBoxKind)">
            <summary>
            Override Show
            </summary>
            <param name="message"></param>
            <param name="kind"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.CustomMessageBoxKind">
            <summary>
            自定义消息提示框的类型
            </summary>
        </member>
        <member name="F:Winning.Framework.CustomMessageBoxKind.None">
            <summary>
            Default value
            </summary>
        </member>
        <member name="F:Winning.Framework.CustomMessageBoxKind.WarningOk">
            <summary>
            ! icon ok button
            </summary>
        </member>
        <member name="F:Winning.Framework.CustomMessageBoxKind.WarningOkCancel">
            <summary>
            ok + cancel button
            </summary>
        </member>
        <member name="F:Winning.Framework.CustomMessageBoxKind.QuestionYesNo">
            <summary>
            ? icon yes + no button
            </summary>
        </member>
        <member name="F:Winning.Framework.CustomMessageBoxKind.QuestionYesNoCancel">
            <summary>
            ? icon yes + no + cancel button
            </summary>
        </member>
        <member name="F:Winning.Framework.CustomMessageBoxKind.QuestionOkCancel">
            <summary>
            ? icon ok + cancel button
            </summary>
        </member>
        <member name="F:Winning.Framework.CustomMessageBoxKind.ErrorOk">
            <summary>
            x icon ok button
            </summary>
        </member>
        <member name="F:Winning.Framework.CustomMessageBoxKind.ErrorOkCancel">
            <summary>
            x icon ok + cancel button
            </summary>
        </member>
        <member name="F:Winning.Framework.CustomMessageBoxKind.ErrorYes">
            <summary>
            x icon yes button
            </summary>
        </member>
        <member name="F:Winning.Framework.CustomMessageBoxKind.ErrorYesNo">
            <summary>
            x icon yes + no button
            </summary>
        </member>
        <member name="F:Winning.Framework.CustomMessageBoxKind.ErrorYesNoCancel">
            <summary>
            x icon yes + no + cancel button
            </summary>
        </member>
        <member name="F:Winning.Framework.CustomMessageBoxKind.InformationOk">
            <summary>
            i icon ok button
            </summary>
        </member>
        <member name="T:Winning.Framework.FlagsEditor">
            <summary>
            Implements a custom type editor for selecting a navigationPage in a list
            </summary>
        </member>
        <member name="M:Winning.Framework.FlagsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Overrides the method used to provide basic behaviour for selecting editor.
            Shows our custom control for editing the value.
            </summary>
            <param name="context">The context of the editing control</param>
            <param name="provider">A valid service provider</param>
            <param name="value">The current value of the object to edit</param>
            <returns>The new value of the object</returns>
        </member>
        <member name="M:Winning.Framework.FlagsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Shows a dropdown icon in the property editor
            </summary>
            <param name="context">The context of the editing control</param>
            <returns>Returns <c>UITypeEditorEditStyle.DropDown</c></returns>
        </member>
        <member name="M:Winning.Framework.FlagsEditor.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            When got the focus, handle the lost focus event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Framework.FlagsEditor.OnMouseMoved(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse is moved over the checkedlistbox. 
            Sets the tooltip of the item under the pointer
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Framework.FlagsEditor.ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Close the dropdowncontrol when the user has selected a value
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Winning.Framework.FlagsEditor.clbItem">
            <summary>
            Internal class used for storing custom data in listviewitems
            </summary>
        </member>
        <member name="M:Winning.Framework.FlagsEditor.clbItem.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Creates a new instance of the <c>clbItem</c>
            </summary>
            <param name="str">The string to display in the <c>ToString</c> method. 
            It will contains the name of the flag</param>
            <param name="value">The integer value of the flag</param>
            <param name="tooltip">The tooltip to display in the <see cref="T:System.Windows.Forms.CheckedListBox"/></param>
        </member>
        <member name="M:Winning.Framework.FlagsEditor.clbItem.ToString">
            <summary>
            Gets the name of this item
            </summary>
            <returns>The name passed in the constructor</returns>
        </member>
        <member name="P:Winning.Framework.FlagsEditor.clbItem.Value">
            <summary>
            Gets the int value for this item
            </summary>
        </member>
        <member name="P:Winning.Framework.FlagsEditor.clbItem.Tooltip">
            <summary>
            Gets the tooltip for this item
            </summary>
        </member>
        <member name="T:Winning.Framework.IDockingPanel">
            <summary>
            停靠面板
            </summary>
        </member>
        <member name="P:Winning.Framework.IDockingPanel.ID">
            <summary>
            获取停靠面板的唯一ID
            </summary>
        </member>
        <member name="P:Winning.Framework.IDockingPanel.DockingControl">
            <summary>
            获取被停靠的控件对象
            该控件不能是顶级窗体，但可以是一个Panel,UserControl以及其他任何继承于Control类的类
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IDockingPanel.Title">
            <summary>
            获取停靠时Tab页上的标题
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IDockingPanel.FullTitle">
            <summary>
            获取停靠时标题栏上的标题
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IDockingPanel.Visible">
            <summary>
            获取是否可见
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IDockingPanel.Size">
            <summary>
            获取面板的大小
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IDockingPanel.FloatingSize">
            <summary>
            获取面板在浮动时的大小
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IDockingPanel.Location">
            <summary>
            获取面板位置
            </summary>
        </member>
        <member name="P:Winning.Framework.IDockingPanel.ImageList">
            <summary>
            获取一个ImageList对象,该ImageList包含了用于Donking内容被最小化时显示的图标
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IDockingPanel.ImageIndex">
            <summary>
            获取Docking内容图标在ImageList对象中的索引
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IDockingPanel.ParentForm">
            <summary>
            获取该面板的父窗体
            </summary>
        </member>
        <member name="T:Winning.Framework.IDockingForm">
            <summary>
            停靠窗体
            </summary>
        </member>
        <member name="P:Winning.Framework.IDockingForm.Title">
            <summary>
            得到窗体的标题
            </summary>
        </member>
        <member name="P:Winning.Framework.IDockingForm.Visilibity">
            <summary>
            得到窗体显示方式的枚举
            </summary>
        </member>
        <member name="P:Winning.Framework.IDockingForm.Location">
            <summary>
            获取窗体浮动时的位置
            </summary>
        </member>
        <member name="P:Winning.Framework.IDockingForm.Size">
            <summary>
            获取窗体的大小
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IDockingForm.FloatingSize">
            <summary>
            获取窗体在浮动时的大小
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IDockingForm.HideAllContents">
            <summary>
            获取初始化时是否隐藏所有的其它窗体
            </summary>
        </member>
        <member name="P:Winning.Framework.IDockingForm.Tabbed">
            <summary>
            获取或设置窗体内面板是否为Tab页摆放
            </summary>
        </member>
        <member name="P:Winning.Framework.IDockingForm.FloatVertical">
            <summary>
            获取或设置窗体的子面板是竖直摆放还是水平摆放
            </summary>
        </member>
        <member name="P:Winning.Framework.IDockingForm.ActivePanelIndex">
            <summary>
            获得正在活动的子面板
            </summary>
        </member>
        <member name="P:Winning.Framework.IDockingForm.DockingPanels">
            <summary>
            获取窗体包含的面板数组
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IDockingForm.DockingSite">
            <summary>
            获取窗体的停靠位置
            </summary>
            <value></value>
        </member>
        <member name="T:Winning.Framework.DockingSite">
            <summary>
            停靠位置的枚举
            </summary>
        </member>
        <member name="F:Winning.Framework.DockingSite.Bottom">
            <summary>
            Docking在上边
            </summary>
        </member>
        <member name="F:Winning.Framework.DockingSite.Left">
            <summary>
            Docking在下边
            </summary>
        </member>
        <member name="F:Winning.Framework.DockingSite.Right">
            <summary>
            Docking在右边
            </summary>
        </member>
        <member name="F:Winning.Framework.DockingSite.Top">
            <summary>
            Docking在上边
            </summary>
        </member>
        <member name="F:Winning.Framework.DockingSite.Floating">
            <summary>
            浮动
            </summary>
        </member>
        <member name="F:Winning.Framework.DockingSite.Fill">
            <summary>
            填充
            </summary>
        </member>
        <member name="T:Winning.Framework.DockingVisilibity">
            <summary>
            窗体显示方式的枚举
            </summary>
        </member>
        <member name="F:Winning.Framework.DockingVisilibity.AutoHidden">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.DockingVisilibity.Hidden">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.DockingVisilibity.Visible">
            <summary>
            
            </summary>
        </member>
        <member name="T:Winning.Framework.ExchangeInfoHelper">
            <summary>
            辅助类创建交互信息服务对象
            </summary>
        </member>
        <member name="P:Winning.Framework.ExchangeInfoHelper.ExchangeInfoServer">
            <summary>
            取得消息交互服务对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:Winning.Common.Eop.LeaveHospitalOrderContent">
            <summary>
            出院医嘱内容, 需要填写出院时间
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.TextOrderContent">
            <summary>
            文字医嘱内容
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.TextOrderContent.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.TextOrderContent.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.TextOrderContent.ResetDisplayTexts">
            <summary>
            重设当前可显示的内容,为各项内容间加上空格
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.TextOrderContent.CheckProperties">
            <summary>
            校验属性值
            </summary>
            <returns>返回字符串不为空表示有属性的值不正确</returns>
        </member>
        <member name="P:Winning.Common.Eop.TextOrderContent.CanCeased">
            <summary>
            标记是否允许停止
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.TextOrderContent.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.TextOrderContent.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.TextOrderContent.IsSummaryOfHerbDetail">
            <summary>
            指明该条文字医嘱是否是草药医嘱的汇总信息
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.TextOrderContent.GroupSerialNoOfLinkedHerbs">
            <summary>
            关联的草药医嘱的分组序号(该条文字医嘱是草药医嘱的汇总信息时有效)
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.LeaveHospitalOrderContent.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.LeaveHospitalOrderContent.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.LeaveHospitalOrderContent.ConvertEntrustContent2DateTime(System.String)">
            <summary>
            从嘱托中解析出出院时间，并赋值给对应属性
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.LeaveHospitalOrderContent.ResetDisplayTexts">
            <summary>
            重设当前可显示的内容,为各项内容间加上空格
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.LeaveHospitalOrderContent.CheckProperties">
            <summary>
            校验属性值
            </summary>
            <returns>返回字符串不为空表示有属性的值不正确</returns>
        </member>
        <member name="P:Winning.Common.Eop.LeaveHospitalOrderContent.EntrustContent">
            <summary>
            隐藏嘱托字段，避免外部直接访问
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.LeaveHospitalOrderContent.LeaveHospitalTime">
            <summary>
            出院时间(保存在嘱托字段中)
            </summary>
        </member>
        <member name="T:Winning.Framework.CaptionBarAnother">
            <summary>
            标题栏
            </summary>
            <summary>
            窗口标题栏
            </summary>
        </member>
        <member name="F:Winning.Framework.CaptionBarAnother.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Winning.Framework.CaptionBarAnother.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Winning.Framework.CaptionBarAnother.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Winning.Framework.CaptionBarAnother.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:Winning.Framework.CaptionBarAnother._captionLabel_DoubleClick(System.Object,System.EventArgs)">
            <summary>
            双击图标关闭窗口
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Framework.CaptionBarAnother.#ctor(System.ComponentModel.IContainer)">
            <summary>
            ctor2
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Winning.Framework.CaptionBarAnother.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标拖动标题栏
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Framework.CaptionBarAnother.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标双击标题栏
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Framework.CaptionBarAnother.SetFormCaption(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            设置窗口标题栏
            </summary>
            <param name="form"></param>
            <param name="canMin"></param>
            <param name="canMax"></param>
            <param name="setFormBorderNone"></param>
        </member>
        <member name="M:Winning.Framework.CaptionBarAnother.SetFormCaption(System.Windows.Forms.Control)">
            <summary>
            设置窗口标题栏 2
            </summary>
            <param name="form"></param>
        </member>
        <member name="M:Winning.Framework.CaptionBarAnother.SetFormCaption(System.Windows.Forms.Control,System.Boolean,System.Boolean)">
            <summary>
            设置窗口标题栏 3
            </summary>
            <param name="form"></param>
            <param name="canMin"></param>
            <param name="canMax"></param>
        </member>
        <member name="P:Winning.Framework.CaptionBarAnother.MinButtonVisible">
            <summary>
            最小化按钮是否显示
            </summary>
        </member>
        <member name="P:Winning.Framework.CaptionBarAnother.MaxButtonVisible">
            <summary>
            最大化按钮是否显示
            </summary>
        </member>
        <member name="P:Winning.Framework.CaptionBarAnother.Caption">
            <summary>
            标题
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OrderOperateInfo">
            <summary>
            医嘱操作信息结构体  
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderOperateInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderOperateInfo.#ctor(System.String,System.DateTime)">
            <summary>
            
            </summary>
            <param name="executorCode">医嘱操作执行者代码（职工代码）</param>
            <param name="executeTime">操作执行时间</param>
        </member>
        <member name="M:Winning.Common.Eop.OrderOperateInfo.SetPropertyValue(System.String,System.DateTime)">
            <summary>
            提供赋值方法，以减少代码中对空值的判断
            </summary>
            <param name="executorCode"></param>
            <param name="executeTime"></param>
        </member>
        <member name="M:Winning.Common.Eop.OrderOperateInfo.Equals(System.Object)">
            <summary>
            确定两个对象是否具有相同的值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderOperateInfo.GetHashCode">
            <summary>
            返回该实例的哈希代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderOperateInfo.ToString">
            <summary>
            获取对象的 Expression（如果存在的话）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderOperateInfo.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderOperateInfo.ExecuteTime">
            <summary>
            操作发生时间
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderOperateInfo.Executor">
            <summary>
            操作执行者
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderOperateInfo.HadInitialized">
            <summary>
            标记是否初始化过(含有有效数据)
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.WorkDepartment">
            <summary>
            工作单位
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.WorkDepartment.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.WorkDepartment.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.WorkDepartment.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.WorkDepartment.CompanyName">
            <summary>
            公司名称(工作单位)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.WorkDepartment.CompanyAddress">
            <summary>
            单位地址
            </summary>    
        </member>
        <member name="P:Winning.Common.Eop.WorkDepartment.Occupation">
            <summary>
            职业代码 默认初始化字典
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.WorkDepartment.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.WorkDepartment.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ShiftDeptOrderContent">
            <summary>
            转科医嘱内容，需要填写转往科室和病区
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ShiftDeptOrderContent.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ShiftDeptOrderContent.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.ShiftDeptOrderContent.ComposeEntrustContent">
            <summary>
            将转往科室和病区的代码组合到嘱托中
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ShiftDeptOrderContent.ParseCodeFromEntrustContent(System.String)">
            <summary>
            从嘱托中解析出转往科室和病区代码，并赋值给对应属性
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ShiftDeptOrderContent.ResetDisplayTexts">
            <summary>
            重设当前可显示的内容,为各项内容间加上空格
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ShiftDeptOrderContent.CheckProperties">
            <summary>
            校验属性值
            </summary>
            <returns>返回字符串不为空表示有属性的值不正确</returns>
        </member>
        <member name="M:Winning.Common.Eop.ShiftDeptOrderContent.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ShiftDeptOrderContent.EntrustContent">
            <summary>
            隐藏嘱托字段，避免外部直接访问
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ShiftDeptOrderContent.ShiftDept">
            <summary>
            转往科室代码(和转往病区代码组合在一起保存在嘱托字段中)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ShiftDeptOrderContent.ShiftWard">
            <summary>
            转往病区代码(和转往科室代码组合在一起保存在嘱托字段中)
            </summary>
        </member>
        <member name="T:Winning.Printing.GraphicsDpis">
            <summary>
            图形度量刻度定义类
            </summary>
        </member>
        <member name="F:Winning.Printing.GraphicsDpis.Display">
            <summary>
            1/75 英寸
            </summary>
        </member>
        <member name="F:Winning.Printing.GraphicsDpis.Document">
            <summary>
            文档单位（1/300 英寸）
            </summary>
        </member>
        <member name="F:Winning.Printing.GraphicsDpis.HundredthsOfAnInch">
            <summary>
            百分之一英寸
            </summary>
        </member>
        <member name="F:Winning.Printing.GraphicsDpis.Inch">
            <summary>
            英寸
            </summary>
        </member>
        <member name="F:Winning.Printing.GraphicsDpis.Millimeter">
            <summary>
            毫米
            </summary>
        </member>
        <member name="F:Winning.Printing.GraphicsDpis.Pixel">
            <summary>
            设备像素
            </summary>
        </member>
        <member name="F:Winning.Printing.GraphicsDpis.Point">
            <summary>
            打印机点
            </summary>
        </member>
        <member name="F:Winning.Printing.GraphicsDpis.TenthsOfAMillimeter">
            <summary>
            十分之一毫米
            </summary>
        </member>
        <member name="F:Winning.Printing.GraphicsDpis.Twips">
            <summary>
            Twips
            </summary>
        </member>
        <member name="F:Winning.Printing.GraphicsDpis.Centimeter">
            <summary>
            厘米
            </summary>
        </member>
        <member name="M:Winning.Printing.GraphicsDpis.DpiToUnit(System.Single)">
            <summary>
            根据度量单位刻度，获得GraphicsUnit枚举值
            </summary>
            <param name="dpi"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsDpis.UnitToDpi(System.Drawing.GraphicsUnit)">
            <summary>
            获取GraphicsUnit对应的度量刻度
            </summary>
            <param name="unit"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.Security.IUser">
            <summary>
            用户信息接口
            </summary>
        </member>
        <member name="E:Winning.Framework.Security.IUser.CurrentDeptWardChanged">
            <summary>
            当前科室病区被改变事件
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IUser.Id">
            <summary>
            获取用户代码
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.Security.IUser.Name">
            <summary>
            获取用户名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.Security.IUser.DoctorId">
            <summary>
            获取操作员的医生Id
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IUser.DoctorName">
            <summary>
            获取操作员的医生姓名
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IUser.CurrentDeptId">
            <summary>
            获取当前科室代码
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.Security.IUser.CurrentDeptName">
            <summary>
            获取当前科室名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.Security.IUser.CurrentWardId">
            <summary>
            获取当前病区代码
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.Security.IUser.CurrentWardName">
            <summary>
            获取当前病区名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.Security.IUser.GWCodes">
            <summary>
            岗位代码字串（形式：01,02,03,）
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IUser.Available">
            <summary>
            获取该用户是否有效
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IUser.RelateDeptWards">
            <summary>
            获取用户相关科室病区信息(形式:deptid,deptname/wardid,wardname)
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IUser.CurrentDeptWard">
            <summary>
            当前科室病区信息
            </summary>
        </member>
        <member name="T:Winning.Framework.Security.DeptWardInfo">
            <summary>
            科室病区信息
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.DeptWardInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="deptid"></param>
            <param name="deptname"></param>
            <param name="wardid"></param>
            <param name="wardname"></param>
        </member>
        <member name="M:Winning.Framework.Security.DeptWardInfo.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.Security.DeptWardInfo.Equals(System.Object)">
            <summary>
            重载判等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.Security.DeptWardInfo.op_Equality(Winning.Framework.Security.DeptWardInfo,Winning.Framework.Security.DeptWardInfo)">
            <summary>
            重载==
            </summary>
            <param name="dept1"></param>
            <param name="dept2"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.Security.DeptWardInfo.op_Inequality(Winning.Framework.Security.DeptWardInfo,Winning.Framework.Security.DeptWardInfo)">
            <summary>
            重载!=
            </summary>
            <param name="dept1"></param>
            <param name="dept2"></param>
            <returns></returns>
        </member>
        <member name="P:Winning.Framework.Security.DeptWardInfo.DeptId">
            <summary>
            科室Id
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.DeptWardInfo.DeptName">
            <summary>
            科室Name
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.DeptWardInfo.WardId">
            <summary>
            病区Id
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.DeptWardInfo.WardName">
            <summary>
            病区Name
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.DeptWardInfo.MergeSameWard">
            <summary>
            按病区显示病人
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.DeptWardInfo.RelateDeptIds">
            <summary>
            病区关联的科室（在按病区显示病人时用作查询的过滤条件）
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.DeptWardInfo.Key">
            <summary>
            KEY
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.DeptWardInfo.Display">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="T:Winning.Framework.PlugInLoader">
            <summary>
            插件启动的应用域
            </summary>
        </member>
        <member name="M:Winning.Framework.PlugInLoader.#ctor(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Ctor
            </summary>
            <param name="applicationPath"></param>
            <param name="plugInsPath"></param>
            <param name="useShadowCopy">是否使用ShadowCopy技术</param>
            <param name="cachePath">ShadowCopy时的Cache路径</param>
        </member>
        <member name="M:Winning.Framework.PlugInLoader.RemoteLoadAssembly(System.String)">
            <summary>
            启动插件
            </summary>
            <param name="assemblyName"></param>
        </member>
        <member name="M:Winning.Framework.PlugInLoader.UnloadAssembly(System.String)">
            <summary>
            卸载assembly,通过卸载所在的AppDomain
            </summary>
            <param name="assemblyName"></param>
        </member>
        <member name="M:Winning.Framework.PlugInLoader.UnloadAllAssembly">
            <summary>
            卸载所有的Assembly
            </summary>
        </member>
        <member name="P:Winning.Framework.PlugInLoader.PlugInsPath">
            <summary>
            
            </summary>
        </member>
        <member name="T:Winning.Framework.RemoteLoader">
            <summary>
            启动插件
            </summary>
        </member>
        <member name="M:Winning.Framework.RemoteLoader.LoadAssembly(System.String)">
            <summary>
            启动插件
            </summary>
            <param name="assemblyName"></param>
        </member>
        <member name="M:Winning.Framework.RemoteLoader.InitializeLifetimeService">
            <summary>
            override InitializeLifetimeService
            </summary>
            <returns></returns>
        </member>
        <member name="T:Winning.Common.Eop.ManyToStructureType">
            <summary>
            一组字段映射到结构体
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ManyToStructureType.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Common.Eop.ManyToStructureType.PropertyToColumn">
            <remarks/>
        </member>
        <member name="T:Winning.Common.Eop.ItemAttributeFlag">
            <summary>
            项目性质(以二进制位表示)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemAttributeFlag.GeneralItem">
            <summary>
            常规项目
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.ItemAttributeFlag.TextOrder">
            <summary>
            文字医嘱
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OrderFrequency">
            <summary>
            频次
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderFrequency.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderFrequency.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.OrderFrequency.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.OrderFrequency.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.OrderFrequency.ConvertPeriod2PerDay(Winning.Common.Eop.OrderExecPeriodUnitKind,System.Int32)">
            <summary>
            将指定类型的周期换算成按天执行时的次数
            </summary>
            <param name="periodFlag">周期类型</param>
            <param name="period">>周期(如果类型是"周",则表示每周执行几天)</param>
            <returns>按天执行时的次数</returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderFrequency.Equals(System.Object)">
            <summary>
            确定两个对象是否具有相同的值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderFrequency.GetHashCode">
            <summary>
            返回该实例的哈希代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderFrequency.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderFrequency.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderFrequency.ConvertToMedicomFrequency">
            <summary>
            转换成美康合理用药要求的格式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderFrequency.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderFrequency.CalcExecutePoints(System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            根据医嘱开始时间计算在指定范围内的执行时间点。如果是以小时或分钟为单位的频次，会根据开始时间进行推算。
            </summary>
            <param name="orderStartTime">医嘱的开始时间</param>
            <param name="startTime">执行的开始日期</param>
            <param name="endTime">执行的结束日期(不包括此时间点)</param>
            <returns>指定时间范围内的执行时间点</returns>
        </member>
        <member name="P:Winning.Common.Eop.OrderFrequency.ExecuteTimesPerPeriod">
            <summary>
            每个周期最多执行的次数,0表示无限制
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderFrequency.Period">
            <summary>
            执行周期(单位为周时,执行周期表示1周中允许执行的天数)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderFrequency.PeriodUnitFlag">
            <summary>
            执行周期单位
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderFrequency.WeekDays">
            <summary>
            周标志(指定一周中的哪几天能执行)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderFrequency.ExecuteTime">
            <summary>
            执行时间(医嘱每天执行的时间点,24小时制,精确到小时,用'0'补足2位,多个时以','隔开)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderFrequency.ExecuteTimes">
            <summary>
            医嘱每天执行时间点的数值
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderFrequency.Provide4Oneself">
            <summary>
            自备标志
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderFrequency.OrderManagerFlag">
            <summary>
            医嘱管理标志
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderFrequency.Text">
            <summary>
            将频次信息组合成文字
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderFrequency.ExecuteTimesPerDay">
            <summary>
            平均每天执行次数
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderFrequency.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderFrequency.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.DruggerySource">
            <summary>
            药品来源类
            TODO: 临时编写，未完整实现
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.DruggerySource.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.DruggerySource.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.DruggerySource.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.DruggerySource.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.DruggerySource.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.DruggerySource.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.DruggerySource.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Framework.Properties.Resources">
            <summary>
              强类型资源类，用于查找本地化字符串等。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.Culture">
            <summary>
              为使用此强类型资源类的所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.CannotSetNullValue">
            <summary>
              查找类似 属性不能设置为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.ClassNotImplement">
            <summary>
              查找类似 类未实现 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.CommonFileNotFind">
            <summary>
              查找类似 {0} 文件未找到 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.CommonParameterIsNull">
            <summary>
              查找类似 {0} 为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.CommonValueIsLess">
            <summary>
              查找类似 值不能小于{0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.EnumFlagNofExist">
            <summary>
              查找类似 枚举标志不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.ObjectIsReadOnly">
            <summary>
              查找类似 只读对象 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.OrderContentKind_CeaseLong">
            <summary>
              查找类似 停长期医嘱 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.OrderContentKind_ChargeItem">
            <summary>
              查找类似 收费项目医嘱 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.OrderContentKind_ClinicItem">
            <summary>
              查找类似 临床项目医嘱 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.OrderContentKind_Druggery">
            <summary>
              查找类似 药品医嘱 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.OrderContentKind_GeneralItem">
            <summary>
              查找类似 常规医嘱 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.OrderContentKind_None">
            <summary>
              查找类似 无 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.OrderContentKind_Operation">
            <summary>
              查找类似 手术医嘱 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.OrderContentKind_OutDruggery">
            <summary>
              查找类似 出院带药 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.OrderContentKind_TextAfterOperation">
            <summary>
              查找类似 纯医嘱(术后) 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.OrderContentKind_TextLeaveHospital">
            <summary>
              查找类似 纯医嘱(出院) 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.OrderContentKind_TextNormal">
            <summary>
              查找类似 纯医嘱(普通) 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.OrderContentKind_TextShiftDept">
            <summary>
              查找类似 纯医嘱(转科) 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.SubSystemFlag_CFG">
            <summary>
              查找类似 配置管理系统 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.SubSystemFlag_EMR">
            <summary>
              查找类似 电子病历系统 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.SubSystemFlag_MCS">
            <summary>
              查找类似 移动护理系统 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.SubSystemFlag_None">
            <summary>
              查找类似 无 的本地化字符串。
            </summary>
        </member>
        <member name="P:Winning.Framework.Properties.Resources.XmlBaseDataFilePath">
            <summary>
              查找类似 请检查本地路径 的本地化字符串。
            </summary>
        </member>
        <member name="T:Winning.Framework.StripRenderReader">
            <summary>
            渲染设置的读取
            </summary>
        </member>
        <member name="M:Winning.Framework.StripRenderReader.ReadRendererSettings(System.Xml.XmlNode)">
            <summary>
            读取设置
            </summary>
            <param name="section"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.HsbColor">
            <summary>
            Provides Round-trip conversion from RGB to HSB and back
            </summary>
        </member>
        <member name="F:Winning.Framework.HsbColor.h">
            <summary>
            color.h
            </summary>
        </member>
        <member name="F:Winning.Framework.HsbColor.s">
            <summary>
            color.s
            </summary>
        </member>
        <member name="F:Winning.Framework.HsbColor.b">
            <summary>
            color.b
            </summary>
        </member>
        <member name="F:Winning.Framework.HsbColor.a">
            <summary>
            color.a
            </summary>
        </member>
        <member name="M:Winning.Framework.HsbColor.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            ctor
            </summary>
            <param name="h"></param>
            <param name="s"></param>
            <param name="b"></param>
        </member>
        <member name="M:Winning.Framework.HsbColor.#ctor(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            ctor2
            </summary>
            <param name="a"></param>
            <param name="h"></param>
            <param name="s"></param>
            <param name="b"></param>
        </member>
        <member name="M:Winning.Framework.HsbColor.#ctor(System.Drawing.Color)">
            <summary>
            ctor3
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:Winning.Framework.HsbColor.ShiftHue(System.Drawing.Color,System.Single)">
            <summary>
            ShiftHue
            </summary>
            <param name="c"></param>
            <param name="hueDelta"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.HsbColor.ShiftSaturation(System.Drawing.Color,System.Single)">
            <summary>
            ShiftSaturation
            </summary>
            <param name="c"></param>
            <param name="saturationDelta"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.HsbColor.ShiftBrighness(System.Drawing.Color,System.Single)">
            <summary>
            ShiftBrighness
            </summary>
            <param name="c"></param>
            <param name="brightnessDelta"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.HsbColor.FromHsb(Winning.Framework.HsbColor)">
            <summary>
            FromHSB
            </summary>
            <param name="hsbColor"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.HsbColor.FromColor(System.Drawing.Color)">
            <summary>
            FromColor
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="P:Winning.Framework.HsbColor.H">
            <summary>
            Property H
            </summary>
        </member>
        <member name="P:Winning.Framework.HsbColor.S">
            <summary>
            Property S
            </summary>
        </member>
        <member name="P:Winning.Framework.HsbColor.B">
            <summary>
            Property B
            </summary>
        </member>
        <member name="P:Winning.Framework.HsbColor.A">
            <summary>
            Property A
            </summary>
        </member>
        <member name="P:Winning.Framework.HsbColor.Color">
            <summary>
            Property Color
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.AdmissionInfo">
            <summary>
            住院信息
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.AdmissionInfo.#ctor">
            <summary>
            初始化空实例
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.AdmissionInfo.#ctor(System.Data.DataRow)">
            <summary>
            用DataRow初始化实例
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.AdmissionInfo.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.AdmitInfo">
            <summary>
            入院基本信息
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.DischargeInfo">
            <summary>
            出院基本信息
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.AdmissionKind">
            <summary>
            入院途径（门诊、转院等）
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.AdmitStatus">
            <summary>
            入院情况(入院时病情)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.LengthOfStay">
            <summary>
            住院天数
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.XRecordNo">
            <summary>
            X线信息
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.DischargeStatus">
            <summary>
            出院方式(治愈、好转等)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.DiagnosisOfClinic">
            <summary>
            门诊诊断
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.ClinicDoctor">
            <summary>
            门诊医生
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.ChineseDiagnosisOfClinic">
            <summary>
            门诊诊断(中医)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.ChineseDiagnosisOfClinic2">
            <summary>
            门诊症候(中医)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.SolarTerm">
            <summary>
            发病节气(中医使用)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.Resident">
            <summary>
            住院医生
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.AttendingPhysician">
            <summary>
            主治医生
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.Director">
            <summary>
            主任医师代码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.CareLevel">
            <summary>
            护理级别
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionInfo.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ChineseDiagnosis">
            <summary>
            中医诊断库类
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ChineseDiagnosis.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ChineseDiagnosis.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.ChineseDiagnosis.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.ChineseDiagnosis.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.ChineseDiagnosis.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ChineseDiagnosis.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ChineseDiagnosis.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.Anesthesia">
            <summary>
            麻醉类
            TODO: 临时编写，未完整实现
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Anesthesia.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Anesthesia.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.Anesthesia.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.Anesthesia.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.Anesthesia.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Anesthesia.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Anesthesia.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Framework.SqlDataAccess">
            <summary>
            Sql数据访问
            </summary>
        </member>
        <member name="T:Winning.Framework.IDataAccess">
            <summary>
            数据访问接口
            </summary>
        </member>
        <member name="M:Winning.Framework.IDataAccess.BeginUseSingleConnection">
            <summary>
            使用单一Connection执行语句前调用
            </summary>
        </member>
        <member name="M:Winning.Framework.IDataAccess.EndUseSingleConnection">
            <summary>
            使用单一Connection执行语句完成后调用
            </summary>
        </member>
        <member name="M:Winning.Framework.IDataAccess.BeginTransaction">
            <summary>
            开始事务，批量执行多个语句或表更新前使用。需要手工提交或回滚事务
            </summary>
        </member>
        <member name="M:Winning.Framework.IDataAccess.RollbackTransaction">
            <summary>
            批量执行出错时手工回滚事务
            </summary>
        </member>
        <member name="M:Winning.Framework.IDataAccess.CommitTransaction">
            <summary>
            批量执行成功后手工提交事务
            </summary>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteDataTable(System.String)">
            <summary>
            返回数据表
            </summary>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteDataTable(System.String,System.Boolean)">
            <summary>
            返回需要缓存的数据集
            </summary>
            <param name="commandText"></param>
            <param name="cached">是否需要缓存</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteDataTable(System.String,System.Data.CommandType)">
            <summary>
            返回数据表,指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteDataTable(System.String,System.Boolean,System.Data.CommandType)">
            <summary>
            返回需要缓存的数据集,指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="cached"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteDataTable(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回数据表,带参数
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteDataTable(System.String,System.Data.SqlClient.SqlParameter[],System.Data.CommandType)">
            <summary>
            返回数据表,带参数,指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteDataTable(System.String,System.String)">
            <summary>
            需要反复使用RowFilter对同一DataTable进行过滤时可以使用此方法。
            系统将对每次调用返回的DataTable进行缓存
            </summary>
            <param name="commandText"></param>
            <param name="rowFilter"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteNoneQuery(System.String)">
            <summary>
            执行sql语句
            </summary>
            <param name="commandText"></param>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteNoneQuery(System.String,System.Data.CommandType)">
            <summary>
            执行sql语句,指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="commandType"></param>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteNoneQuery(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行sql语句 2
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteNoneQuery(System.String,System.Data.SqlClient.SqlParameter[],System.Data.CommandType)">
            <summary>
            执行带参数sql语句,指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteNoneQuery(System.String,System.Data.SqlClient.SqlParameter[],System.Int32@)">
            <summary>
            执行Sql语句 3, 返回Identity
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <param name="identityValue"></param>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteNoneQuery(System.String,System.Data.SqlClient.SqlParameter[],System.Data.CommandType,System.Int32@)">
            <summary>
            执行sql语句 3, 指定CommandType, 返回Identity
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="identityValue"></param>
        </member>
        <member name="M:Winning.Framework.IDataAccess.UpdateTable(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            更新表
            </summary>
            <param name="changedTable"></param>
            <param name="sqlTable"></param>
            <param name="needUpdateSchema"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteDataSet(System.String)">
            <summary>
            返回DataSet 1
            </summary>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteDataSet(System.String,System.Data.CommandType)">
            <summary>
            返回DataSet 1, 指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteDataSet(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回DataSet 2
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteDataSet(System.String,System.Data.SqlClient.SqlParameter[],System.Data.CommandType)">
            <summary>
            返回DataSet 2, 指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteReader(System.String)">
            <summary>
            返回IDataReader 1
            </summary>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteReader(System.String,System.Data.CommandType)">
            <summary>
            返回IDataReader 1,指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteReader(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回IDataReader 2
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteReader(System.String,System.Data.SqlClient.SqlParameter[],System.Data.CommandType)">
            <summary>
            返回IDataReader 2,指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteScalar(System.String)">
            <summary>
            Scalar 1
            </summary>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteScalar(System.String,System.Data.CommandType)">
            <summary>
            Scalar 1, 指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteScalar(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Scalar 2
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ExecuteScalar(System.String,System.Data.SqlClient.SqlParameter[],System.Data.CommandType)">
            <summary>
            Scalar 2, 指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.ResetTableSchema(System.Data.DataTable,System.String)">
            <summary>
            ResetTableSchema
            </summary>
            <param name="originalTable"></param>
            <param name="sqlTable"></param>
        </member>
        <member name="M:Winning.Framework.IDataAccess.GetTableColumnDefinitions(System.String)">
            <summary>
            GetTableColumnDefinitions
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.GetRecord(System.String,System.String,System.Boolean)">
            <summary>
            取得满足条件的记录
            </summary>
            <param name="commandText">取得数据集的Sql语句</param>
            <param name="filter">过滤条件</param>
            <param name="cached">是否缓存</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.GetRecords(System.String,System.String,System.Boolean)">
            <summary>
            取得满足条件的记录集
            </summary>
            <param name="commandText"></param>
            <param name="filter"></param>
            <param name="cached"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IDataAccess.GetServerUtcTimeNow">
            <summary>
            获取数据库服务器当前时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.#ctor(System.String)">
            <summary>
            Ctor2
            </summary>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.BeginUseSingleConnection">
            <summary>
            使用单一Connection执行语句前调用
            </summary>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.EndUseSingleConnection">
            <summary>
            使用单一Connection执行语句完成后调用
            </summary>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.BeginTransaction">
            <summary>
            开始事务，批量执行多个语句或表更新前使用。需要手工提交或回滚事务
            </summary>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.RollbackTransaction">
            <summary>
            批量执行出错时手工回滚事务
            </summary>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.CommitTransaction">
            <summary>
            批量执行成功后手工提交事务
            </summary>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteDataTable(System.String,System.Data.CommandType)">
            <summary>
            返回DataTable,指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteDataTable(System.String)">
            <summary>
            返回DataTable
            </summary>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteDataTable(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回DataTable, 未缓存
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteDataTable(System.String,System.Data.SqlClient.SqlParameter[],System.Data.CommandType)">
            <summary> 
            返回数据表,带参数,指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteDataTable(System.String,System.Boolean)">
            <summary>
            指定是否重新从数据库读取数据
            </summary>
            <param name="commandText">Sql语句</param>
            <param name="cached">重新加载缓存的信息</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteDataTable(System.String,System.Boolean,System.Data.CommandType)">
            <summary>
            指定是否重新从数据库读取数据,指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="cached"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteDataTable(System.String,System.String)">
            <summary>
            需要反复使用RowFilter对同一DataTable进行过滤时可以使用此方法。
            系统将对每次调用返回的DataTable进行缓存
            </summary>
            <param name="commandText"></param>
            <param name="rowFilter"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.GetRecord(System.String,System.String,System.Boolean)">
            <summary>
            取得满足条件的记录
            </summary>
            <param name="commandText">取得数据集的Sql语句</param>
            <param name="filter">过滤条件</param>
            <param name="cached">是否缓存</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.GetRecords(System.String,System.String,System.Boolean)">
            <summary>
            取得满足条件的记录集
            </summary>
            <param name="commandText"></param>
            <param name="filter"></param>
            <param name="cached"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteNoneQuery(System.String)">
            <summary>
            执行Sql语句
            </summary>
            <param name="commandText"></param>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteNoneQuery(System.String,System.Data.CommandType)">
            <summary>
            执行Sql语句,指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="commandType"></param>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteNoneQuery(System.String,System.Data.SqlClient.SqlParameter[],System.Data.CommandType)">
            <summary>
            执行Sql语句,带参数,指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteNoneQuery(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行Sql语句,带参数
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteNoneQuery(System.String,System.Data.SqlClient.SqlParameter[],System.Data.CommandType,System.Int32@)">
            <summary>
            执行Sql语句,带参数,指定CommandType,返回Identity
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="identityValue"></param>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteNoneQuery(System.String,System.Data.SqlClient.SqlParameter[],System.Int32@)">
            <summary>
            执行Sql语句,并返回Identity值
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <param name="identityValue"></param>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteDataSet(System.String,System.Data.CommandType)">
            <summary>
            返回数据集,指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteDataSet(System.String)">
            <summary>
            返回数据集
            </summary>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteDataSet(System.String,System.Data.SqlClient.SqlParameter[],System.Data.CommandType)">
            <summary>
            返回数据集,带参数,指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteDataSet(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回数据集2
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteReader(System.String,System.Data.CommandType)">
            <summary>
            返回DataReader, 指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteReader(System.String)">
            <summary>
            返回DataReader
            </summary>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteReader(System.String,System.Data.SqlClient.SqlParameter[],System.Data.CommandType)">
            <summary>
            返回DataReader2, 指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteReader(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回DataReader 2
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteScalar(System.String,System.Data.CommandType)">
            <summary>
            Scalar, 指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteScalar(System.String)">
            <summary>
            Scalar
            </summary>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteScalar(System.String,System.Data.SqlClient.SqlParameter[],System.Data.CommandType)">
            <summary>
            Scalar2, 指定CommandType
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ExecuteScalar(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Scalar 2
            </summary>
            <param name="commandText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.UpdateTable(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            更新表。方法内部会调用table的GetChanges方法。
            若不是在事务内调用Update，则在更新成功后会自动调用table的AcceptChanges方法。
            </summary>
            <param name="table">包含所有数据的表。注意：不是GetChanges()后的表</param>
            <param name="sqlTableName"></param>
            <param name="needUpdateSchema"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ResetTableSchema(System.Data.DataTable,System.String)">
            <summary>
            ResetSchema
            </summary>
            <param name="originalTable"></param>
            <param name="sqlTableName"></param>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.GetTableColumnDefinitions(System.String)">
            <summary>
            GetTableColumnDefinitions
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.GetConnectionInfo(System.String)">
            <summary>
            取得指定的数据连接的配置信息
            </summary>
            <param name="dbName">数据连接名</param>
            <returns>保存配置信息的Hashtable</returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.GetServerUtcTimeNow">
            <summary>
            取服务器的时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.GetCommand(System.String,System.Data.CommandType)">
            <summary>
            创建合适DbCommandWrapper
            </summary>
            <param name="commandText">SQL命令</param>
            <param name="commandType">命令类型</param>
            <returns>符合命令类型的DBCommandWrapper</returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.GetCommand(System.String,System.Data.CommandType,System.Data.Common.DbParameter[])">
            <summary>
            创建带参数的DBCommandWrapper
            </summary>
            <param name="commandText">SQL命令</param>
            <param name="commandType">命令类型</param>
            <param name="parameters">参数集合</param>
            <returns>符合命令类型的DBCommandWrapper</returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.ParseConnectionString(System.String)">
            <summary>
            解析连接字符串的参数
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.LogSqlStatements(System.Data.Common.DbCommand)">
            <summary>
            将IDbCommand转换成SQL语句记录下来
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.LogSqlStatements(System.Data.DataSet,System.String,System.Data.Common.DbCommand,System.Data.Common.DbCommand,System.Data.Common.DbCommand)">
            <summary>
            将更新数据集的操作转换成SQL语句记录下来
            </summary>
            <param name="dataSet"></param>
            <param name="tableName"></param>
            <param name="insertCommand"></param>
            <param name="updateCommand"></param>
            <param name="deleteCommand"></param>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.DoLogger(System.String)">
            <summary>
            执行日志记录操作
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Winning.Framework.SqlDataAccess.CheckNeedLog">
            <summary>
            检查是否需要记录执行的SQL语句
            </summary>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.DelegateReadConfiguration">
            <summary>
            委托
            </summary>
            <param name="xmlNode"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.WinningConfigurationSectionHandler">
            <summary>
            WinningConfigurationSectionHandler
            </summary>
        </member>
        <member name="M:Winning.Framework.WinningConfigurationSectionHandler.SetConfigurationDelegate(Winning.Framework.DelegateReadConfiguration)">
            <summary>
            设置委托函数
            </summary>
        </member>
        <member name="M:Winning.Framework.WinningConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            实现IConfigurationSectionHandler.Create
            </summary>
            <param name="parent"></param>
            <param name="configContext"></param>
            <param name="section"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.XtraReport">
            <summary>
            调用DevExpress报表组件
            </summary>
        </member>
        <member name="M:Winning.Framework.XtraReport.PrintDataSet(System.Data.DataSet,System.String,System.Int32)">
            <summary>
            打印数据集
            </summary>
            <param name="printDS">数据集</param>
            <param name="templateFile">模板文件</param>
            <param name="designFlag">设计标志(0 预览 1 设计)</param>
        </member>
        <member name="T:Winning.Framework.Security.User">
            <summary>
            用户类
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.User.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="userID">用户代码</param>
            <param name="userName">用户名称</param>
        </member>
        <member name="M:Winning.Framework.Security.User.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.User.SetUser(System.String,System.String)">
            <summary>
            设置用户的代码和名称
            </summary>
            <param name="userId">用户代码</param>
            <param name="userName">用户名称</param>
        </member>
        <member name="M:Winning.Framework.Security.User.SetUserDoctor(System.String,System.String)">
            <summary>
            设置用户代码名称,和职工代码名称
            </summary>
            <param name="userDoctorId"></param>
            <param name="userDoctorName"></param>
        </member>
        <member name="M:Winning.Framework.Security.User.SetCurrentDeptWard(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="deptId"></param>
            <param name="deptName"></param>
            <param name="wardId"></param>
            <param name="wardName"></param>
        </member>
        <member name="M:Winning.Framework.Security.User.SetCurrentDeptWard(Winning.Framework.Security.DeptWardInfo)">
            <summary>
            设置当前科室病区的代码和名称
            </summary>
            <param name="newDwi"></param>
        </member>
        <member name="M:Winning.Framework.Security.User.SetRoleId(System.String)">
            <summary>
            设置当前操作员的角色字串
            </summary>
            <param name="roleIds"></param>
        </member>
        <member name="M:Winning.Framework.Security.User.ComparePassword(System.String)">
            <summary>
            验证密码是否正确
            </summary>
            <param name="password">密码字符串</param>
            <returns>正确返回true,否则返回false</returns>
        </member>
        <member name="E:Winning.Framework.Security.User.CurrentDeptWardChanged">
            <summary>
            当前科室病区被改变事件
            </summary>
        </member>
        <member name="E:Winning.Framework.Security.User.UserChanged">
            <summary>
            用户改变事件
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.User.PasswordKey">
            <summary>
            登记时间
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.User.Password">
            <summary>
            获得和设置用户密码
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.Security.User.Id">
            <summary>
            用户代码
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.Security.User.Name">
            <summary>
            用户名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.Security.User.DoctorId">
            <summary>
            用户医生代码
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.Security.User.DoctorName">
            <summary>
            用户医生名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.Security.User.CurrentDeptId">
            <summary>
            当前科室代码
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.Security.User.CurrentDeptName">
            <summary>
            当前科室名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.Security.User.CurrentWardId">
            <summary>
            当前病区代码
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.Security.User.CurrentWardName">
            <summary>
            当前病区名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.Security.User.GWCodes">
            <summary>
            岗位代码字串（形式：01,02,03,）
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.User.Available">
            <summary>
            获取该用户是否有效
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.User.RelateDeptWards">
            <summary>
            获取用户相关科室病区信息(形式:deptid,deptname/wardid,wardname)
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.User.CurrentDeptWard">
            <summary>
            当前科室病区
            </summary>
        </member>
        <member name="T:Winning.Framework.Security.IRBSFunction">
            <summary>
            权限模块功能列表接口
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IRBSFunction.FunctionId">
            <summary>
            功能Id
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IRBSFunction.FunctionName">
            <summary>
            功能名称
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IRBSFunction.FunctionDescription">
            <summary>
            功能描述
            </summary>
        </member>
        <member name="T:Winning.Framework.Security.IRBSModule">
            <summary>
            权限模块列表接口
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.IRBSModule.AddAFunction(Winning.Framework.Security.IRBSFunction)">
            <summary>
            增加一个授权功能
            </summary>
            <param name="function"></param>
        </member>
        <member name="M:Winning.Framework.Security.IRBSModule.AddAFunction(System.String,System.String,System.String)">
            <summary>
            增加一个授权功能并返回索引
            </summary>
            <param name="functionId"></param>
            <param name="functionName"></param>
            <param name="functionDescription"></param>
            <returns></returns>
        </member>
        <member name="P:Winning.Framework.Security.IRBSModule.ModuleId">
            <summary>
            模块Id
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IRBSModule.ModuleName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IRBSModule.ModuleDescription">
            <summary>
            模块描述
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IRBSModule.ParentSystem">
            <summary>
            所属系统id
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IRBSModule.FunctionList">
            <summary>
            模块功能列表
            </summary>
        </member>
        <member name="T:Winning.Framework.Security.IPermission">
            <summary>
            访问权限接口
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.IPermission.AddAModule(Winning.Framework.Security.IRBSModule)">
            <summary>
            增加模块权限
            </summary>
            <param name="module"></param>
        </member>
        <member name="M:Winning.Framework.Security.IPermission.AddAModule(System.String,System.String,System.String,Winning.Framework.SubSystemFlag)">
            <summary>
            增加新的模块权限
            </summary>
            <param name="moduleId"></param>
            <param name="moduleName"></param>
            <param name="moduleDescription"></param>
            <param name="system"></param>
            <returns></returns>
        </member>
        <member name="P:Winning.Framework.Security.IPermission.RoleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IPermission.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IPermission.ParentSystem">
            <summary>
            父系统
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IPermission.ModuleList">
            <summary>
            模块列表
            </summary>
        </member>
        <member name="E:Winning.Framework.Security.IPermission.RoleIdChanged">
            <summary>
            角色Id改变事件
            </summary>
        </member>
        <member name="E:Winning.Framework.Security.IPermission.RoleNameChanged">
            <summary>
            角色Name改变事件
            </summary>
        </member>
        <member name="E:Winning.Framework.Security.IPermission.ParentSystemChanged">
            <summary>
            所属系统改变事件
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IPermission.IsAdministrators">
            <summary>
            判断一个岗位是否为管理员权限,目前默认00
            </summary>
        </member>
        <member name="T:Winning.Framework.Security.RoleIdChangedEventArgs">
            <summary>
            RoleIdChanged,角色Id改变事件参数类
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.RoleIdChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            ctor,传入新老Id
            </summary>
            <param name="oldId"></param>
            <param name="newId"></param>
        </member>
        <member name="P:Winning.Framework.Security.RoleIdChangedEventArgs.OldId">
            <summary>
            原Id
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.RoleIdChangedEventArgs.NewId">
            <summary>
            新Id
            </summary>
        </member>
        <member name="T:Winning.Framework.Security.RoleNameChangedEventArgs">
            <summary>
            RoleNameChanged,角色Name改变事件参数类
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.RoleNameChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            ctor,传入新老Name
            </summary>
            <param name="oldName"></param>
            <param name="newName"></param>
        </member>
        <member name="P:Winning.Framework.Security.RoleNameChangedEventArgs.OldName">
            <summary>
            原Name
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.RoleNameChangedEventArgs.NewName">
            <summary>
            新Name
            </summary>
        </member>
        <member name="T:Winning.Framework.Security.RoleParentSystemChangedEArgs">
            <summary>
            岗位所属系统改变事件参数
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.RoleParentSystemChangedEArgs.#ctor(Winning.Framework.SubSystemFlag,Winning.Framework.SubSystemFlag)">
            <summary>
            ctor
            </summary>
            <param name="oldSystem"></param>
            <param name="newSystem"></param>
        </member>
        <member name="P:Winning.Framework.Security.RoleParentSystemChangedEArgs.OldSystem">
            <summary>
            OldSystem
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.RoleParentSystemChangedEArgs.NewSystem">
            <summary>
            NewSystem
            </summary>
        </member>
        <member name="T:Winning.Framework.BusinessEventArgs">
            <summary>
            Plugin间属性值改变的事件参数
            </summary>
        </member>
        <member name="M:Winning.Framework.BusinessEventArgs.#ctor(System.String,System.Object[])">
            <summary>
            Ctor
            </summary>
            <param name="businessParameters"></param>
            <param name="businessName"></param>
        </member>
        <member name="M:Winning.Framework.BusinessEventArgs.BusinessParameters">
            <summary>
            取得_businessParameters
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Framework.BusinessEventArgs.BusinessName">
            <summary>
            业务操作名
            </summary>
        </member>
        <member name="T:Winning.Framework.IBusiness">
            <summary>
            定义一个插件通过框架调用其他插件的接口
            </summary>
        </member>
        <member name="M:Winning.Framework.IBusiness.OnReceiveBusiness(Winning.Framework.BusinessEventArgs)">
            <summary>
            触发事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Winning.Framework.IBusiness.WinningBusinessHost">
            <summary>
            得到框架实现的IApplication接口
            </summary>
            <value>返回框架接口</value>
        </member>
        <member name="P:Winning.Framework.IBusiness.AssemblyFunctionList">
            <summary>
            供调用的函数列表
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.IBusiness.AssemblyBusinessList">
            <summary>
            事务列表
            </summary>
            <value></value>
        </member>
        <member name="E:Winning.Framework.IBusiness.ReceiveBusiness">
            <summary>
            接收到事务
            </summary>
        </member>
        <member name="T:Winning.Framework.DockingBuilder">
            <summary>
            停靠窗口创建器
            </summary>
        </member>
        <member name="M:Winning.Framework.DockingBuilder.BuildDockingForm(System.Windows.Forms.Control,Winning.Framework.DockingSite)">
            <summary>
            创建停靠窗体
            </summary>
            <param name="control">窗体内控件</param>
            <param name="dockingSite">停靠位置</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.DockingBuilder.BuildDockingForm(System.Windows.Forms.Control,Winning.Framework.DockingSite,Winning.Framework.DockingVisilibity)">
            <summary>
            创建停靠窗体
            </summary>
            <param name="control">窗体内控件</param>
            <param name="dockingSite">停靠位置</param>
            <param name="visilibity">显示方式</param>
            <returns></returns>        
        </member>
        <member name="M:Winning.Framework.DockingBuilder.BuildDockingForm(System.Windows.Forms.Control,Winning.Framework.DockingSite,Winning.Framework.DockingVisilibity,System.Drawing.Size)">
            <summary>
            创建停靠窗体
            </summary>
            <param name="control">窗体内控件</param>
            <param name="dockingSite">停靠位置</param>
            <param name="visilibity">显示方式</param>
            <param name="size">窗体大小</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.DockingBuilder.BuildDockingForm(System.Windows.Forms.Control[],Winning.Framework.DockingSite)">
            <summary>
            创建停靠窗体
            </summary>
            <param name="controls">窗体内控件数组</param>
            <param name="dockingSite">停靠位置</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.DockingBuilder.BuildDockingForm(System.Windows.Forms.Control[],Winning.Framework.DockingSite,Winning.Framework.DockingVisilibity)">
            <summary>
            创建停靠窗体
            </summary>
            <param name="controls">窗体内控件</param>
            <param name="dockingSite">停靠位置</param>
            <param name="visilibity">显示方式</param>
            <returns></returns>        
        </member>
        <member name="M:Winning.Framework.DockingBuilder.BuildDockingForm(System.Windows.Forms.Control[],Winning.Framework.DockingSite,Winning.Framework.DockingVisilibity,System.Drawing.Size)">
            <summary>
            创建停靠窗体
            </summary>
            <param name="controls">窗体内控件</param>
            <param name="dockingSite">停靠位置</param>
            <param name="visilibity">显示方式</param>
            <param name="size">窗体大小</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.DockingBuilder.BuildDockingForm(System.Windows.Forms.Control,Winning.Framework.DockingSite,System.Boolean)">
            <summary>
            创建停靠窗体
            </summary>
            <param name="control">窗体内控件</param>
            <param name="dockingSite">停靠位置</param>
            <param name="hide"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.DockingBuilder.BuildDockingForm(System.Windows.Forms.Control[],Winning.Framework.DockingSite,System.Boolean)">
            <summary>
            创建停靠窗体
            </summary>
            <param name="controls">窗体内控件数组</param>
            <param name="dockingSite">停靠位置</param>
            <param name="hide"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.DockingBuilder.BuildDockingForm(System.Windows.Forms.Control,Winning.Framework.DockingSite,System.Boolean,System.Drawing.Size)">
            <summary>
            创建停靠窗体
            </summary>
            <param name="control">窗体内控件</param>
            <param name="dockingSite">停靠位置</param>
            <param name="hide"></param>
            <param name="size">窗体大小</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.DockingBuilder.BuildFloatingForm(System.Windows.Forms.Control,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            创建漂浮窗体
            </summary>
            <param name="control">窗体内控件</param>
            <param name="location">漂浮位置</param>
            <param name="floatingsize">漂浮时窗体大小</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.DockingBuilder.BuildFloatingForm(System.Windows.Forms.Control,System.Drawing.Point,System.Drawing.Size,Winning.Framework.DockingVisilibity)">
            <summary>
            创建漂浮窗体
            </summary>
            <param name="control">窗体内控件</param>
            <param name="location">漂浮位置</param>
            <param name="floatingsize">漂浮时窗体大小</param>
            <param name="visilibity">显示方式</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.DockingBuilder.BuildFloatingForm(System.Windows.Forms.Control[],System.Drawing.Point,System.Drawing.Size)">
            <summary>
            创建漂浮窗体
            </summary>
            <param name="controls">窗体内控件数组</param>
            <param name="location">漂浮位置</param>
            <param name="floatingsize">漂浮时窗体大小</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.DockingBuilder.BuildFloatingForm(System.Windows.Forms.Control[],System.Drawing.Point,System.Drawing.Size,Winning.Framework.DockingVisilibity)">
            <summary>
            创建漂浮窗体
            </summary>
            <param name="controls">窗体内控件数组</param>
            <param name="location">漂浮位置</param>
            <param name="floatingsize">漂浮时窗体大小</param>
            <param name="visilibity">显示方式</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.DockingBuilder.BuildFloatingForm(System.Windows.Forms.Control[],System.Drawing.Point,System.Drawing.Size,Winning.Framework.DockingVisilibity,System.String,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            创建漂浮窗体
            </summary>
            <param name="controls">窗体内控件数组</param>
            <param name="location">漂浮位置</param>
            <param name="floatingsize">漂浮时窗体大小</param>
            <param name="visilibity">窗体显示方式</param>
            <param name="title">窗体的标题</param>
            <param name="tabbed">窗体内是否是以Tab页显示</param>
            <param name="floatingvertical">多个控件在其中时漂浮位置</param>
            <param name="activecontrolindex">窗体内有多个控件时，正被激活的控件</param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.RendererSettings">
            <summary>
            渲染设置
            </summary>
        </member>
        <member name="M:Winning.Framework.RendererSettings.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="P:Winning.Framework.RendererSettings.KeyString">
            <summary>
            关键字符串,唯一标识区分
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.RendererSettings.ChineseName">
            <summary>
            显示的设置名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.RendererSettings.FromColor">
            <summary>
            渐变色的开始颜色
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.RendererSettings.EndColor">
            <summary>
            渐变色的终止颜色
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.RendererSettings.BorderColor">
            <summary>
            边框的颜色
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.RendererSettings.BorderWidth">
            <summary>
            边框的粗细
            </summary>
            <value></value>
        </member>
        <member name="T:Winning.Framework.RenderPart">
            <summary>
            枚举Renderer的各部分
            </summary>
        </member>
        <member name="F:Winning.Framework.RenderPart.None">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:Winning.Framework.RenderPart.ItemBackground">
            <summary>
            项目背景
            </summary>
        </member>
        <member name="F:Winning.Framework.RenderPart.ItemText">
            <summary>
            项目文字
            </summary>
        </member>
        <member name="F:Winning.Framework.RenderPart.ImageMargin">
            <summary>
            项目间
            </summary>
        </member>
        <member name="F:Winning.Framework.RenderPart.MenuItemBackground">
            <summary>
            菜单项背景
            </summary>
        </member>
        <member name="F:Winning.Framework.RenderPart.ButtonBackground">
            <summary>
            按钮项背景
            </summary>
        </member>
        <member name="F:Winning.Framework.RenderPart.ToolStripBackground">
            <summary>
            工具条背景
            </summary>
        </member>
        <member name="F:Winning.Framework.RenderPart.RaftingContainerBackground">
            <summary>
            容器背景
            </summary>
        </member>
        <member name="F:Winning.Framework.RenderPart.CaptionBarBackground">
            <summary>
            标题栏背景（由于采用了ToolStrip作为标题栏）
            </summary>
        </member>
        <member name="T:Winning.Framework.MyRenderer">
            <summary>
            Copy from Codeproject.Com , 菜单着色
            </summary>
        </member>
        <member name="M:Winning.Framework.MyRenderer.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Winning.Framework.MyRenderer.OnRenderImageMargin(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            重画图像间隙
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Framework.MyRenderer.OnRenderItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            重画项目背景
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Framework.MyRenderer.OnRenderItemText(System.Windows.Forms.ToolStripItemTextRenderEventArgs)">
            <summary>
            重画项目文字
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Framework.MyRenderer.OnRenderMenuItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            重画菜单项背景
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Framework.MyRenderer.OnRenderButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            重画按钮项背景
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Framework.MyRenderer.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            重画工具条背景
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Framework.MyRenderer.OnRenderToolStripBorder(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            重画工具条边框
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Framework.MyRenderer.OnRenderToolStripPanelBackground(System.Windows.Forms.ToolStripPanelRenderEventArgs)">
            <summary>
            将ToolStripPanel.Color = Transparent,重画了Container
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Winning.Common.Eop.OutputInfoStruct">
            <summary>
            输出信息结构体，包括输出的文本、区域以及字体
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OutputInfoStruct.#ctor(System.String,System.Drawing.Rectangle,System.Drawing.Font,Winning.Common.Eop.OrderOutputTextType)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="bounds"></param>
            <param name="font"></param>
            <param name="outputType"></param>
        </member>
        <member name="M:Winning.Common.Eop.OutputInfoStruct.#ctor(System.String,Winning.Common.Eop.OrderOutputTextType)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="outputType"></param>
        </member>
        <member name="M:Winning.Common.Eop.OutputInfoStruct.Equals(System.Object)">
            <summary>
            确定两个对象是否具有相同的值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OutputInfoStruct.op_Equality(Winning.Common.Eop.OutputInfoStruct,Winning.Common.Eop.OutputInfoStruct)">
            <summary>
            
            </summary>
            <param name="output1"></param>
            <param name="output2"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OutputInfoStruct.op_Inequality(Winning.Common.Eop.OutputInfoStruct,Winning.Common.Eop.OutputInfoStruct)">
            <summary>
            
            </summary>
            <param name="output1"></param>
            <param name="output2"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OutputInfoStruct.GetHashCode">
            <summary>
            返回该实例的哈希代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OutputInfoStruct.ToString">
            <summary>
            获取对象的 Expression（如果存在的话）
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Common.Eop.OutputInfoStruct.Text">
            <summary>
            输出文本(如果类型是分组标记，则输出文本为空)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OutputInfoStruct.Bounds">
            <summary>
            输出范围(或者是分组标记矩形框的范围)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OutputInfoStruct.Font">
            <summary>
            输出使用的字体
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OutputInfoStruct.OutputType">
            <summary>
            输出内容类型
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.DruggeryAttributeFlag">
            <summary>
            药品性质(以二进制位表示)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryAttributeFlag.SkinTestLimited">
            <summary>
            皮试(有时间限制)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryAttributeFlag.SkinTestUnlimited">
            <summary>
            皮试(永久有效)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryAttributeFlag.Valuable">
            <summary>
            贵重药品
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.DruggeryAttributeFlag.IsOTC">
            <summary>
            OTC标志
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OrderEditState">
            <summary>
            医嘱编辑状态枚举
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderEditState.Added">
            <summary>
            已被加到医嘱列表中，还未存到数据库
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderEditState.Deleted">
            <summary>
            已从医嘱列表中删除，还未存到数据库
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderEditState.Detached">
            <summary>
            医嘱已创建，但不属于任何医嘱集合
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderEditState.Modified">
            <summary>
            已被修改，还未存到数据库
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderEditState.Unchanged">
            <summary>
            未做任何修改
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OrderOutputTextType">
            <summary>
            输出内容类型标志(便于输出控制)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderOutputTextType.NormalText">
            <summary>
            普通文本
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderOutputTextType.ItemName">
            <summary>
            项目名称(含规格)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderOutputTextType.ItemAmount">
            <summary>
            项目数量(含单位)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderOutputTextType.ItemUsage">
            <summary>
            项目用法名称
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderOutputTextType.ItemFrequency">
            <summary>
            项目频次名称
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderOutputTextType.ItemDays">
            <summary>
            项目天数
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderOutputTextType.EntrustContent">
            <summary>
            嘱托内容
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderOutputTextType.CancelInfo">
            <summary>
            取消信息(含取消者名字)
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderOutputTextType.GroupStart">
            <summary>
            分组开始标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderOutputTextType.GroupMiddle">
            <summary>
            分组中间标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderOutputTextType.GroupEnd">
            <summary>
            分组结束标记
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.OrderOutputTextType.SelfProvide">
            <summary>
            自备
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OrderChangedEventArgs">
            <summary>
            提供医嘱改变事件(OrderChanged)的参数
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderChangedEventArgs.#ctor(System.Decimal)">
            <summary>
            医嘱改变事件参数
            </summary>
            <param name="newSerialNo">更新后的医嘱对应的医嘱序号</param>
        </member>
        <member name="M:Winning.Common.Eop.OrderChangedEventArgs.#ctor(System.Decimal,System.Decimal)">
            <summary>
            医嘱改变事件参数
            </summary>
            <param name="newSerialNo">更新后的医嘱对应的医嘱序号</param>
            <param name="oldSerialNo">被更新的医嘱原始的医嘱序号</param>
        </member>
        <member name="P:Winning.Common.Eop.OrderChangedEventArgs.NewSerialNo">
            <summary>
            更新后的医嘱对应的医嘱序号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderChangedEventArgs.OldSerialNo">
            <summary>
            被更新的医嘱原始的医嘱序号（除了更新医嘱序号，其余情况下都为-1）
            </summary>
        </member>
        <member name="T:Winning.Framework.IAppConfigDesign">
            <summary>
            系统设置接口
            </summary>
        </member>
        <member name="M:Winning.Framework.IAppConfigDesign.Load(Winning.Framework.IApplication,System.Collections.Generic.Dictionary{System.String,Winning.Framework.EmrAppConfig})">
            <summary>
            加载设置集合
            </summary>
            <param name="app"></param>
            <param name="configs"></param>
        </member>
        <member name="M:Winning.Framework.IAppConfigDesign.Save">
            <summary>
            接口内保存更改的设置到ChangedConfigs
            如果接口内即时更新ChangedConfigs,此方法无需实现(不要抛出未实现异常)
            </summary>
        </member>
        <member name="P:Winning.Framework.IAppConfigDesign.DesignUI">
            <summary>
            设置界面控件
            </summary>
        </member>
        <member name="P:Winning.Framework.IAppConfigDesign.ChangedConfigs">
            <summary>
            更新设置集合
            </summary>
        </member>
        <member name="P:Winning.Framework.IAppConfigDesign.ConfigObj">
            <summary>
            设置对象(如果有返回,没有则null)
            </summary>
        </member>
        <member name="T:Winning.Framework.EmrAppConfig">
            <summary>
            系统配置
            </summary>
        </member>
        <member name="M:Winning.Framework.EmrAppConfig.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.SubConfigs">
            <summary>
            组配置集合
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.CanSetUserLevel">
            <summary>
            配置是否可以设置到用户级别
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.Valid">
            <summary>
            配置是否有效
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.System">
            <summary>
            所属系统
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.Plevel">
            <summary>
            配置级别
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.DesignClass">
            <summary>
            配置设计类
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.ShowlistDict">
            <summary>
            选择值字典
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.Ctype">
            <summary>
            配置值选择类型
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.Keyset">
            <summary>
            组配置包含的键值列表
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.Ptype">
            <summary>
            配置值类型
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.Descript">
            <summary>
            配置描述
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.Config">
            <summary>
            配置值
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.Key">
            <summary>
            配置键值
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.Name">
            <summary>
            配置名称
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.RoleId">
            <summary>
            岗位代码
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrAppConfig.UserId">
            <summary>
            职工代码
            </summary>
        </member>
        <member name="T:Winning.Framework.EmrUserConfig">
            <summary>
            用户配置(系统配置集合)
            </summary>
        </member>
        <member name="M:Winning.Framework.EmrUserConfig.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:Winning.Framework.EmrUserConfig.GetRoleConfig(System.String)">
            <summary>
            取得指定岗位代码的配置
            </summary>
            <param name="roleId"></param>
            <returns>存在返回配置,否则返回Null</returns>
        </member>
        <member name="M:Winning.Framework.EmrUserConfig.GetUserConfig">
            <summary>
            取得用户配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.EmrUserConfig.GetAppConfig">
            <summary>
            取得系统默认配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.EmrUserConfig.GetDefaultConfig">
            <summary>
            取得用户的默认配置
            优先级(高->低): 用户配置 -> 岗位配置(默认第一个) -> 系统配置 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Framework.EmrUserConfig.UserId">
            <summary>
            用户代码
            </summary>
        </member>
        <member name="P:Winning.Framework.EmrUserConfig.Configs">
            <summary>
            配置集合
            </summary>
        </member>
        <member name="T:Winning.Framework.ConfigParamType">
            <summary>
            设置参数类型
            </summary>
        </member>
        <member name="F:Winning.Framework.ConfigParamType.Var">
            <summary>
            Variant(Object)
            </summary>
        </member>
        <member name="F:Winning.Framework.ConfigParamType.String">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Winning.Framework.ConfigParamType.Integer">
            <summary>
            Int
            </summary>
        </member>
        <member name="F:Winning.Framework.ConfigParamType.Double">
            <summary>
            Double
            </summary>
        </member>
        <member name="F:Winning.Framework.ConfigParamType.Boolean">
            <summary>
            Bool
            </summary>
        </member>
        <member name="F:Winning.Framework.ConfigParamType.Xml">
            <summary>
            Xml
            </summary>
        </member>
        <member name="F:Winning.Framework.ConfigParamType.Color">
            <summary>
            Color
            </summary>
        </member>
        <member name="F:Winning.Framework.ConfigParamType.Set">
            <summary>
            Set
            </summary>
        </member>
        <member name="T:Winning.Framework.ConfigChoiceType">
            <summary>
            配置参数选择型
            </summary>
        </member>
        <member name="F:Winning.Framework.ConfigChoiceType.None">
            <summary>
            非选择型
            </summary>
        </member>
        <member name="F:Winning.Framework.ConfigChoiceType.Single">
            <summary>
            单选择
            </summary>
        </member>
        <member name="F:Winning.Framework.ConfigChoiceType.Multi">
            <summary>
            多选择
            </summary>
        </member>
        <member name="T:Winning.Framework.ConfigParamLevel">
            <summary>
            配置级别
            </summary>
        </member>
        <member name="F:Winning.Framework.ConfigParamLevel.System">
            <summary>
            系统级
            </summary>
        </member>
        <member name="F:Winning.Framework.ConfigParamLevel.Role">
            <summary>
            岗位级
            </summary>
        </member>
        <member name="F:Winning.Framework.ConfigParamLevel.User">
            <summary>
            用户级
            </summary>
        </member>
        <member name="T:Winning.Framework.IAppConfigReader">
            <summary>
            配置读取接口
            </summary>
        </member>
        <member name="M:Winning.Framework.IAppConfigReader.GetConfigs(System.String[])">
            <summary>
            取得配置参数字典
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IAppConfigReader.GetConfigs(System.String,System.String[])">
            <summary>
            取得指定用户配置参数字典
            </summary>
            <param name="userId"></param>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IAppConfigReader.GetConfig(System.String)">
            <summary>
             取得指定的单一配置
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IAppConfigReader.GetConfig(System.String,System.String)">
            <summary>
            取得指定用户的单一配置(可能有多个,系统默认,岗位默认等)
            </summary>
            <param name="userId"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IAppConfigReader.GetConfigObj(System.String)">
            <summary>
            取得指定的配置对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.IAppConfigReader.GetConfigObj(System.String,System.String)">
            <summary>
            取得指定用户的配置对象
            </summary>
            <param name="userId"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.AttributesReader">
            <summary>
            读取属性
            </summary>
        </member>
        <member name="M:Winning.Framework.AttributesReader.#ctor(System.String)">
            <summary>
            ctor
            </summary>
            <param name="assemblyName"></param>
        </member>
        <member name="M:Winning.Framework.AttributesReader.#ctor(System.AppDomain,System.String)">
            <summary>
            在指定应用域加载的Ctor
            </summary>
            <param name="domain"></param>
            <param name="assemblyName"></param>
        </member>
        <member name="M:Winning.Framework.AttributesReader.#ctor(System.Reflection.Assembly)">
            <summary>
            Ctor3
            </summary>
            <param name="assembly"></param>
        </member>
        <member name="M:Winning.Framework.AttributesReader.GetPlugInMenuInfoAttribute">
            <summary>
            取得插件Plugin的菜单信息
            </summary>
            <returns>插件的属性数组</returns>
        </member>
        <member name="M:Winning.Framework.AttributesReader.GetAuthorityControlAttribute">
            <summary>
            取得插件的权限控制信息
            </summary>
            <returns>插件的属性数组</returns>
        </member>
        <member name="T:Winning.Framework.InstanceTraceListenerHeaders">
            <summary>
            Defines the various headers that can be included with trace statements
            </summary>
            <see>Razor.FrameWork</see>
        </member>
        <member name="F:Winning.Framework.InstanceTraceListenerHeaders.DateAndTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.InstanceTraceListenerHeaders.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.InstanceTraceListenerHeaders.LineNumber">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.InstanceTraceListenerHeaders.Namespace">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.InstanceTraceListenerHeaders.TypeName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.InstanceTraceListenerHeaders.MethodName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Winning.Framework.MyTraceListener">
            <summary>
            用来记录Trace
            </summary>
        </member>
        <member name="M:Winning.Framework.MyTraceListener.#cctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:Winning.Framework.MyTraceListener.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Framework.MyTraceListener.#ctor(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Winning.Framework.MyTraceListener.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Winning.Framework.MyTraceListener.#ctor(System.IO.Stream,System.String)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Framework.MyTraceListener.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Framework.MyTraceListener.#ctor(System.IO.TextWriter,System.String)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Framework.MyTraceListener.WriteLine(System.String)">
            <summary>
            重载WriteLine
            </summary>
            <param name="message">信息</param>
        </member>
        <member name="M:Winning.Framework.MyTraceListener.Write(System.String)">
            <summary>
            重载Write
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Winning.Framework.MyTraceListener.WriteLine(System.String,System.String)">
            <summary>
            重载WriteLine(message, category)
            </summary>
            <param name="message"></param>
            <param name="category"></param>
        </member>
        <member name="M:Winning.Framework.MyTraceListener.InitializeLifetimeService">
            <summary>
            Remoting Object Always Valid
            </summary>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.LogHelper">
            <summary>
            LOG开关控制(默认值为4:所有信息输出)
            </summary>
        </member>
        <member name="M:Winning.Framework.LogHelper.TraceLog(System.String,System.Diagnostics.TraceLevel,System.Diagnostics.StackFrame)">
            <summary>
            输出到日志（注意：堆栈帧，现在传入参数固定为 new StackFrame(0,true)）
            </summary>
            <param name="log">自定义的日志内容</param>
            <param name="level">日志的信息类型：错误 Error 警告 Warning 详细信息 Verbose</param>
            <param name="frame">堆栈帧，现在传入参数固定为 new StackFrame(0,true)</param>
        </member>
        <member name="M:Winning.Framework.LogHelper.GetHeaders(System.Boolean,System.Diagnostics.StackFrame)">
            <summary>
            Writes a header line for each header flag that is specified in Headers
            </summary>
            <see>Razor.FrameWork</see>
        </member>
        <member name="M:Winning.Framework.LogHelper.GetHeaderDescription(Winning.Framework.InstanceTraceListenerHeaders)">
            <summary>
            Retrieves the description for a value from the cached descriptions
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.LogHelper.IsFlagSet(System.Int32,System.Int32)">
            <summary>
            Checks a bitmask to see if a particular flag is set on or off
            </summary>
            <param name="value">The bitmask to check</param>
            <param name="flag">The flag whose state is in question</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.LogHelper.FormatHeaderLine(System.String,System.String)">
            <summary>
            Formats a line into a [Name(Value)] + newline format
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.LogHelper.GetHeaderValue(Winning.Framework.InstanceTraceListenerHeaders,System.Diagnostics.StackFrame)">
            <summary>
            Retrieves a specific value for the INDIVIDUAL header value. NOTE: Do not pass a flag combination here. It will break if you do!
            </summary>
            <param name="header"></param>
            <param name="frame"></param>
            <returns>Header Descript</returns>
            <see>Razor.FrameWork</see>
        </member>
        <member name="P:Winning.Framework.LogHelper.WinningSwitch">
            <summary>
            获得日志开关控制总信息
            </summary>
        </member>
        <member name="T:Winning.Framework.TypeXmlFontConvert">
            <summary>
            处理String和TypeXmlFont的转换
            </summary>
        </member>
        <member name="M:Winning.Framework.TypeXmlFontConvert.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            返回此转换器是否可将该对象转换为指定的类型
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.TypeXmlFontConvert.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            返回该转换器是否可以将一种类型的对象转换为此转换器的类型
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.TypeXmlFontConvert.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            将给定值转换为此转换器的类型
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.TypeXmlFontConvert.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            将给定值对象转换为指定的类型
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.TypeXmlFontConvert.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            在给定 Object 的一组属性值的情况下重新创建该对象
            </summary>
            <param name="context"></param>
            <param name="propertyValues"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.TypeXmlFontConvert.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            返回更改此对象的值是否需要调用 CreateInstance 来创建新值。
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.RemotingHelper">
            <summary>
            访问远程对象
            </summary>
        </member>
        <member name="M:Winning.Framework.RemotingHelper.GetWellKnownObject(System.Type,System.String)">
            <summary>
            取得服务器对象
            </summary>
            <param name="type"></param>
            <param name="objectName"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.RemotingHelper.GetClientActivatedObject(System.Type,System.Object[])">
            <summary>
            取得客户端激活对象
            </summary>
            <param name="type"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.GenerateShortCode">
            <summary>
            为字符串生成拼音、五笔代码缩写
            </summary>
        </member>
        <member name="F:Winning.Framework.GenerateShortCode.ShortCodeLength">
            <summary>
            拼音、五笔字段的最大长度
            </summary>
        </member>
        <member name="F:Winning.Framework.GenerateShortCode.EmptyShortCode">
            <summary>
            空字符串，长度与CODE_LEN一样
            </summary>
        </member>
        <member name="F:Winning.Framework.GenerateShortCode.FieldPy">
            <summary>
            默认的拼音列名
            </summary>
        </member>
        <member name="F:Winning.Framework.GenerateShortCode.FieldWb">
            <summary>
            默认的五笔列名
            </summary>
        </member>
        <member name="F:Winning.Framework.GenerateShortCode.m_ChineseTable">
            <summary>
            汉字库
            </summary>
        </member>
        <member name="M:Winning.Framework.GenerateShortCode.InitChineseTable(Winning.Framework.IDataAccess)">
            <summary>
            初始化汉字库的Hashtable
            </summary>
        </member>
        <member name="M:Winning.Framework.GenerateShortCode.GenerateStringShortCode(System.String,System.Char[],System.Char[])">
            <summary>
            为传入的字符串生成拼音、五笔代码。代码保存在传入的数组中
            </summary>
            <param name="chinese">要生成代码的字符串</param>
            <param name="py">保存拼音代码的数组</param>
            <param name="wb">保存五笔代码的数组</param>
        </member>
        <member name="M:Winning.Framework.GenerateShortCode.#ctor(Winning.Framework.IDataAccess)">
            <summary>
            创建生成拼音、五笔代码缩写的类实例。需提供sqlHelper实例，以便取出基础数据
            </summary>
            <param name="sqlHelper"></param>
        </member>
        <member name="M:Winning.Framework.GenerateShortCode.GenerateStringShortCode(System.String)">
            <summary>
            为传入的字符串生成拼音和五笔代码
            </summary>
            <param name="source">要生成代码的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.GenerateShortCode.GenerateTableShortCode(System.Data.DataTable,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            为DataTable中的名称字段生成字头缩写。需要指定名称字段。拼音、五笔必须存在，且使用默认列名（py/wb）
            </summary>
            <param name="sourceTable">需要生成代码的DataTable</param>
            <param name="nameField">指定的名称字段</param>
            <param name="onlyEmpty">是否只为没有生成过拼音或五笔代码的生成缩写</param>
            <param name="needPY">是否生成拼音缩写</param>
            <param name="needWB">是否生成五笔缩写</param>
            <returns>生成结果信息，非空表示有错误信息</returns>
        </member>
        <member name="M:Winning.Framework.GenerateShortCode.AutoAddShortCode(System.Data.DataTable,System.String)">
            <summary>
            为表手工添加拼音、五笔字段（如果不存在的话），并填充拼音或五笔代码为空的行
            </summary>
            <param name="table">要处理的表</param>
            <param name="nameField">名称字段</param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.Resource.DefinedNames">
            <summary>
            统一定义的和系统有关的字符串变量
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.KingstarWinning">
            <summary>
            公司名称
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.SystemEmr">
            <summary>
            电子病历系统
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.SystemMcs">
            <summary>
            移动护理系统
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.SystemEmrCaption">
            <summary>
            电子病历系统标题
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.SystemMcsCaption">
            <summary>
            移动护理系统标题
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuTopicDailywork">
            <summary>
            菜单分类－－日常工作
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuTopicQuery">
            <summary>
            菜单分类－－查询统计
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuTopicDataManager">
            <summary>
            菜单分类－－数据维护
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuTopicTemplateSetup">
            <summary>
            菜单分类－－模板设置
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuTopicSystemSetup">
            <summary>
            菜单分类－－系统设置
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuTopicHelp">
            <summary>
            菜单分类－－帮助
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuWardConsole">
            <summary>
            EMR菜单－－病区一览
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuEditOrder">
            <summary>
            EMR菜单－－医嘱编辑
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuEditRecord">
            <summary>
            EMR菜单－－病历编辑
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuEditRequisition">
            <summary>
            EMR菜单－－医技申请单
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuDailyNotandum">
            <summary>
            EMR菜单－－每日提示
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuArchiveRecord">
            <summary>
            EMR菜单－－病历归档
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuDoctorShiftRecord">
            <summary>
             EMR菜单－－医生交班
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuCheckForgeryMark">
            <summary>
            EMR菜单－－验证病历防伪标记
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuQcConsole">
            <summary>
            EMR菜单－－质量管理平台
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuQueryRecord">
            <summary>
            EMR菜单－－病历数据查询
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuQueryOperation">
            <summary>
            EMR菜单－－手术查询
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuQueryTimeQc">
            <summary>
            EMR菜单－－时限质量查询
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuQueryRequisition">
            <summary>
            EMR菜单－－医技报告单查询
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuQueryOrder">
            <summary>
            EMR菜单－－医嘱查询
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuQueryThermotaxis">
            <summary>
            EMR菜单－－体温单查询
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuQueryRecordsBrowseTrace">
            <summary>
            Emr菜单——病历阅读记录查询
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuDataDictionarySetup">
            <summary>
            EMR菜单－－配置数据字典维护模块
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuManageDataDictionary">
            <summary>
            EMR菜单－－数据字典维护
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuManageSpecialSymbol">
            <summary>
            EMR菜单－－特殊字符数据维护
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuManageOrderSuite">
            <summary>
            EMR菜单－－成套医嘱设置
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuManageModelCatalog">
            <summary>
            EMR菜单－－病历模板分类管理
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuManageClinicRule">
            <summary>
            EMR菜单－－临床规则设置
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuManageTimeQcRule">
            <summary>
            EMR菜单－－时限质量规则设置
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuManageTemplateRecord">
            <summary>
            EMR菜单－－病历模板设置
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuManageModelTrigger">
            <summary>
            EMR菜单——病历临床规则设置
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuManageTemplateFirstPage">
            <summary>
            EMR菜单－－病案首页模板设置
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuManagePrintTemplateRecord">
            <summary>
            EMR菜单－－病历打印模板设置
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuManagePrintTemplateOrder">
            <summary>
            EMR菜单－－医嘱打印模板设置
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuManageTemplateRequisition">
            <summary>
            EMR菜单－－医技申请单设置
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuSetRecordEditor">
            <summary>
            EMR菜单－－病历编辑器设置
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuSetFormStyle">
            <summary>
            公共菜单－－界面风格设置
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuOnlineHelp">
            <summary>
            公共菜单－－联机帮助
            </summary>
        </member>
        <member name="F:Winning.Framework.Resource.DefinedNames.MenuAbout">
            <summary>
            公共菜单－－关于
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ORMCollection">
            <summary>
            表和对象映射关系集合
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ORMCollection.ORMappings">
            <summary>
            表和对象映射关系集合
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ORMCollection.ParentORMappings">
            <summary>
            对象的父类和表的映射关系集合
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ChargeItemOrderContent">
            <summary>
            项目医嘱内容。项目为收费项目、常规项目、临床项目的医嘱内容。
            </summary> 
        </member>
        <member name="M:Winning.Common.Eop.ChargeItemOrderContent.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ChargeItemOrderContent.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.ChargeItemOrderContent.ResetDisplayTexts">
            <summary>
            重设当前可显示的内容,为各项内容间加上空格
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ChargeItemOrderContent.CheckProperties">
            <summary>
            校验属性值
            </summary>
            <returns>返回字符串不为空表示有属性的值不正确</returns>
        </member>
        <member name="P:Winning.Common.Eop.ChargeItemOrderContent.CanCeased">
            <summary>
            标记是否允许停止
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ChargeItemOrderContent.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ChargeItemOrderContent.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ClinicItemOrderContent">
            <summary>
            临床项目医嘱内容
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ClinicItemOrderContent.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ClinicItemOrderContent.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.ClinicItemOrderContent.ResetDisplayTexts">
            <summary>
            重设当前可显示的内容,为各项内容间加上空格
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.CommonBaseCode">
            <summary>
            通用字典对象，用来处理字典分类明细表（YY_ZDFLMXK）
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.CommonBaseCode.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.CommonBaseCode.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.CommonBaseCode.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.CommonBaseCode.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
            <param name="catalogCode"></param>
        </member>
        <member name="M:Winning.Common.Eop.CommonBaseCode.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.CommonBaseCode.Equals(System.Object)">
            <summary>
            确定两个对象是否具有相同的值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.CommonBaseCode.GetHashCode">
            <summary>
            返回该实例的哈希代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.CommonBaseCode.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.CommonBaseCode.CatalogCode">
            <summary>
            所属分类代码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.CommonBaseCode.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.CommonBaseCode.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Framework.MemberXmlComment">
            <summary>
            XML注释文档中每个成员注释
            </summary>
        </member>
        <member name="M:Winning.Framework.MemberXmlComment.#ctor(Winning.Framework.XmlCommentMemberType,System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <param name="summary"></param>
        </member>
        <member name="M:Winning.Framework.MemberXmlComment.ToString">
            <summary>
            重载ToString返回成员摘要
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Framework.MemberXmlComment.MemberSummary">
            <summary>
            成员摘要
            </summary>
        </member>
        <member name="P:Winning.Framework.MemberXmlComment.MemberName">
            <summary>
            成员名称
            </summary>
        </member>
        <member name="P:Winning.Framework.MemberXmlComment.MemberType">
            <summary>
            成员类型
            </summary>
        </member>
        <member name="T:Winning.Framework.AssebmlyXmlComment">
            <summary>
            assebmly的XML注释类,只读取summary
            </summary>
        </member>
        <member name="M:Winning.Framework.AssebmlyXmlComment.#ctor">
            <summary>
            AssemblyXML注释类
            </summary>
        </member>
        <member name="P:Winning.Framework.AssebmlyXmlComment.MemberSummary">
            <summary>
            MemberSummary
            </summary>
        </member>
        <member name="T:Winning.Framework.XmlCommentReader">
            <summary>
            读取Xml Comment信息的类
            </summary>
        </member>
        <member name="M:Winning.Framework.XmlCommentReader.#ctor">
            <summary>
            Ctor构造一个读取AssemblyXml注释类
            </summary>
        </member>
        <member name="M:Winning.Framework.XmlCommentReader.#ctor(System.String)">
            <summary>
            Ctor提供所在的目录全路径
            </summary>
            <param name="fullDirectoryPath"></param>
        </member>
        <member name="M:Winning.Framework.XmlCommentReader.GetOneMemberSummary(System.String,System.String,Winning.Framework.XmlCommentMemberType,System.String)">
            <summary>
            得到指定的成员摘要
            </summary>
            <param name="filePath"></param>
            <param name="assemblyName"></param>
            <param name="memberType"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.XmlCommentReader.GetAllMemberSummary(System.String,System.String)">
            <summary>
            得到一个Assembly所有的XML注释摘要
            </summary>
            <param name="filePath"></param>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.XmlCommentMemberType">
            <summary>
            注释Xml文件中的分类
            </summary>
        </member>
        <member name="F:Winning.Framework.XmlCommentMemberType.None">
            <summary>
            default
            </summary>
        </member>
        <member name="F:Winning.Framework.XmlCommentMemberType.MemberIsClass">
            <summary>
            类
            </summary>
        </member>
        <member name="F:Winning.Framework.XmlCommentMemberType.MemberIsMethod">
            <summary>
            方法
            </summary>
        </member>
        <member name="F:Winning.Framework.XmlCommentMemberType.MemberIsProperty">
            <summary>
            属性
            </summary>
        </member>
        <member name="F:Winning.Framework.XmlCommentMemberType.MemberIsField">
            <summary>
            字段
            </summary>
        </member>
        <member name="T:Winning.Printing.GraphicsUnitTransformer">
            <summary>
            图形单位换算类，强制保证转换后不会因为舍入误差的问题导致转换后结果小于转换前数据
            </summary>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Drawing.Point,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
            转换点
            </summary>
            <param name="val"></param>
            <param name="fromUnit"></param>
            <param name="toUnit"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Drawing.Point,System.Single,System.Single)">
            <summary>
            转换点
            </summary>
            <param name="val"></param>
            <param name="fromDpi">点现在的度量刻度</param>
            <param name="toDpi">要转换到的度量刻度</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Drawing.PointF,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
            转换点
            </summary>
            <param name="val"></param>
            <param name="fromUnit"></param>
            <param name="toUnit"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Drawing.PointF,System.Single,System.Single)">
            <summary>
            转换点
            </summary>
            <param name="val"></param>
            <param name="fromDpi">点现在的度量刻度</param>
            <param name="toDpi">要转换到的度量刻度</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
            转换矩形
            </summary>
            <param name="val"></param>
            <param name="fromUnit"></param>
            <param name="toUnit"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
            转换矩形
            </summary>
            <param name="val"></param>
            <param name="fromDpi">点现在的度量刻度</param>
            <param name="toDpi">要转换到的度量刻度</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
            转换矩形
            </summary>
            <param name="val"></param>
            <param name="fromUnit"></param>
            <param name="toUnit"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            转换矩形
            </summary>
            <param name="val"></param>
            <param name="fromDpi">点现在的度量刻度</param>
            <param name="toDpi">要转换到的度量刻度</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Drawing.Size,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
            转换尺寸
            </summary>
            <param name="val"></param>
            <param name="fromUnit"></param>
            <param name="toUnit"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Drawing.Size,System.Single,System.Single)">
            <summary>
            转换尺寸
            </summary>
            <param name="val"></param>
            <param name="fromDpi">点现在的度量刻度</param>
            <param name="toDpi">要转换到的度量刻度</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Drawing.SizeF,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
            转换尺寸
            </summary>
            <param name="val"></param>
            <param name="fromUnit"></param>
            <param name="toUnit"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Drawing.SizeF,System.Single,System.Single)">
            <summary>
            转换尺寸
            </summary>
            <param name="val"></param>
            <param name="fromDpi">点现在的度量刻度</param>
            <param name="toDpi">要转换到的度量刻度</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Int32,System.Single,System.Single)">
            <summary>
            转换整数
            </summary>
            <param name="val"></param>
            <param name="fromDpi">点现在的度量刻度</param>
            <param name="toDpi">要转换到的度量刻度</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Single,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
            转换浮点数
            </summary>
            <param name="val"></param>
            <param name="fromUnit"></param>
            <param name="toUnit"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Single,System.Single,System.Single)">
            <summary>
            转换浮点数
            </summary>
            <param name="val"></param>
            <param name="fromDpi">点现在的度量刻度</param>
            <param name="toDpi">要转换到的度量刻度</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Drawing.Printing.Margins,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
            转换边距
            </summary>
            <param name="val"></param>
            <param name="fromUnit"></param>
            <param name="toUnit"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Convert(System.Drawing.Printing.Margins,System.Single,System.Single)">
            <summary>
            转换边距
            </summary>
            <param name="val"></param>
            <param name="fromDpi">点现在的度量刻度</param>
            <param name="toDpi">要转换到的度量刻度</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.DocToPixel(System.Drawing.PointF)">
            <summary>
            文档单位的点转成像素单位
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.DocToPixel(System.Drawing.RectangleF)">
            <summary>
            文档单位的矩形转成像素单位
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.DocToPixel(System.Drawing.SizeF)">
            <summary>
            文档单位的尺寸转成像素单位
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.DocToPixel(System.Single)">
            <summary>
            文档单位的值转成像素单位
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.PixelToDoc(System.Drawing.PointF)">
            <summary>
            点：设备像素到文档单位
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.PixelToDoc(System.Drawing.RectangleF)">
            <summary>
            矩形：设备像素到文档单位
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.PixelToDoc(System.Drawing.SizeF)">
            <summary>
            尺寸：设备像素到文档单位
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.PixelToDoc(System.Single)">
            <summary>
            像素
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Round(System.Drawing.PointF)">
            <summary>
            浮点Point取整
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Round(System.Drawing.RectangleF)">
            <summary>
            浮点矩形取整
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Printing.GraphicsUnitTransformer.Round(System.Single)">
            <summary>
            对浮点数取整
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Common.Eop.ManyToSubClassType">
            <summary>
            用子类来映射剩余的字段（以相同的方式定义子类映射关系，子类的不会单独使用）
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ManyToSubClassType.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:Winning.Common.Eop.ManyToObjectClassType">
            <summary>
            字段值来自于其它表时，连接到相关的类
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ManyToObjectClassType.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Common.Eop.ManyToObjectClassType.LinkedObjects">
            <remarks/>
        </member>
        <member name="T:Winning.Common.Eop.Ward">
            <summary>
            病区
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Ward.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Ward.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.Ward.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.Ward.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.Ward.InitializeCorrespondingDepts(Winning.Framework.IDataAccess)">
            <summary>
            初始化关联科室数据
            </summary>
            <param name="sqlExecutor"></param>
        </member>
        <member name="M:Winning.Common.Eop.Ward.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Ward.HospitalCode">
            <summary>
            所属医院代码
            TODO: 需要补充医院类
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Ward.AmountOfBeds">
            <summary>
            床位数
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Ward.Kind">
            <summary>
            病区标志()
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Ward.CorrespondingDepts">
            <summary>
            对应科室
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Ward.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Ward.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.AfterOperationContent">
            <summary>
            术后医嘱内容
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.AfterOperationContent.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.AfterOperationContent.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.AfterOperationContent.ResetDisplayTexts">
            <summary>
            重设当前可显示的内容,为各项内容间加上空格
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.AfterOperationContent.CheckProperties">
            <summary>
            校验属性值
            </summary>
            <returns>返回字符串不为空表示有属性的值不正确</returns>
        </member>
        <member name="P:Winning.Common.Eop.AfterOperationContent.EntrustContent">
            <summary>
            隐藏嘱托字段，避免外部直接访问
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.DruggeryOrderContent">
            <summary>
            药品医嘱内容
            </summary> 
        </member>
        <member name="M:Winning.Common.Eop.DruggeryOrderContent.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.DruggeryOrderContent.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.DruggeryOrderContent.ResetDisplayTexts">
            <summary>
            重设当前可显示的内容,为各项内容间加上空格
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.DruggeryOrderContent.CheckProperties">
            <summary>
            校验属性值
            </summary>
            <returns>返回字符串不为空表示有属性的值不正确</returns>
        </member>
        <member name="P:Winning.Common.Eop.DruggeryOrderContent.CanCeased">
            <summary>
            标记是否允许停止
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.DruggeryOrderContent.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.DruggeryOrderContent.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Framework.PermissionAttribute">
            <summary>
            权限标志属性
            </summary>
        </member>
        <member name="M:Winning.Framework.PermissionAttribute.#ctor(System.String)">
            <summary>
            Ctor构造权限
            </summary>
            <param name="description">方法描述</param>
        </member>
        <member name="P:Winning.Framework.PermissionAttribute.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:Winning.Localization.LocalizedEnumConverter">
            <summary>
            定义一个本地化当前工程内枚举类型的转换器
            </summary>
        </member>
        <member name="M:Winning.Localization.LocalizedEnumConverter.#ctor(System.Type)">
            <summary>
            Create a new instance of the converter using translations from the given resource manager
            </summary>
            <param name="type"></param>
        </member>
        <member name="T:Winning.Framework.Security.TraceEventArgs">
            <summary>
            跟踪类事件参数TraceEventArgs
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.TraceEventArgs.#ctor(System.String)">
            <summary>
            Ctor
            </summary>
            <param name="info"></param>
        </member>
        <member name="P:Winning.Framework.Security.TraceEventArgs.Info">
            <summary>
            跟踪信息
            </summary>
        </member>
        <member name="T:Winning.Framework.Security.IAccount">
            <summary>
            帐户接口,处理一些帐户信息及操作
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.IAccount.Login(System.String,System.String)">
            <summary>
            用户登录函数
            </summary>
            <param name="userId">用户代码</param>
            <param name="password">密码</param>
            <returns>一个包含了用户信息的xml字符串</returns>
        </member>
        <member name="M:Winning.Framework.Security.IAccount.ChangePassword(System.String,System.String,System.String)">
            <summary>
            更改密码
            </summary>
            <param name="userId">用户代码</param>
            <param name="oldPassword">老密码</param>
            <param name="newPassword">新密码</param>
        </member>
        <member name="M:Winning.Framework.Security.IAccount.CreateNewUser(Winning.Framework.Security.IUser,System.String)">
            <summary>
            创建一个新用户
            </summary>
            <param name="user">IUser接口对象</param>
            <param name="initPassword">初始密码</param>
        </member>
        <member name="M:Winning.Framework.Security.IAccount.UpdateUserInfo(Winning.Framework.Security.IUser)">
            <summary>
            更新用户的信息
            </summary>
            <param name="user">IUser接口对象</param>
        </member>
        <member name="M:Winning.Framework.Security.IAccount.BroadcastMessage(System.String)">
            <summary>
            Copy from Advanced .Net Remoting.CHM
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Winning.Framework.Security.IAccount.HasPermission(System.String,System.String)">
            <summary>
            判断帐户是否有模块权限
            </summary>
            <param name="assemblyName"></param>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.Security.IAccount.HasPermission(System.String,System.String,System.String)">
            <summary>
            判断帐户是否有方法权限
            </summary>
            <param name="assemblyName"></param>
            <param name="className"></param>
            <param name="functionName"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.Security.IAccount.IsAdministrator">
            <summary>
            判断是否为系统管理员
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.Security.IAccount.GetAUserName(System.String,Winning.Framework.SubSystemFlag,System.Boolean@)">
            <summary>
            通过用户Id得到用户名称和登录系统的权限,仅用于登录时使用
            </summary>
            <param name="userId"></param>
            <param name="system"></param>
            <param name="available"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.Security.IAccount.GetAUserName(System.String,System.Boolean@)">
            <summary>
            通过用户Id得到用户名称
            </summary>
            <param name="userId"></param>
            <param name="available"></param>
            <returns></returns>
        </member>
        <member name="P:Winning.Framework.Security.IAccount.User">
            <summary>
            登录帐户的用户
            </summary>
        </member>
        <member name="P:Winning.Framework.Security.IAccount.CurrentSystem">
            <summary>
            用户当前登录的系统
            </summary>
        </member>
        <member name="E:Winning.Framework.Security.IAccount.InfoAddedDelegate">
            <summary>
            OnInfoAdded
            </summary>
        </member>
        <member name="T:Winning.Framework.Security.BroadcastEventWrapper">
            <summary>
            Copy from Advanced .Net Remoting.CHM
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.BroadcastEventWrapper.LocallyHandleMessageArrived(System.Object,Winning.Framework.Security.TraceEventArgs)">
            <summary>
            调用定义的事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Winning.Framework.Security.BroadcastEventWrapper.InitializeLifetimeService">
            <summary>
            重载生命期设置
            </summary>
            <returns></returns>
        </member>
        <member name="E:Winning.Framework.Security.BroadcastEventWrapper.MessageArrivedLocally">
            <summary>
            自定义消息到达事件
            </summary>
        </member>
        <member name="T:Winning.Framework.SubSystemFlag">
            <summary>
            系统标识
            </summary>
        </member>
        <member name="F:Winning.Framework.SubSystemFlag.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Winning.Framework.SubSystemFlag.CFG">
            <summary>
            配置管理系统
            </summary>
        </member>
        <member name="F:Winning.Framework.SubSystemFlag.EMR">
            <summary>
            电子病历系统
            </summary>
        </member>
        <member name="F:Winning.Framework.SubSystemFlag.MCS">
            <summary>
            移动护理系统
            </summary>
        </member>
        <member name="T:Winning.Framework.ConstantCollection">
            <summary>
            这个类用于定义所有的常数
            </summary>
        </member>
        <member name="T:Winning.Framework.DockingPanel">
            <summary>
            停靠面板，该类实现了IDockingPanel接口
            </summary>
        </member>
        <member name="M:Winning.Framework.DockingPanel.#ctor(System.Windows.Forms.Control,System.String,System.Windows.Forms.ImageList,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="control">需要被Docking的控件对象</param>
            <param name="title">Docking时显示Tab上的标题</param>
            <param name="imageList">一个ImageList对象,该ImageList包含了用于Donking内容被最小话时显示的图标</param>
            <param name="imageIndex">Docking内容图标在ImageList对象中的索引</param>
        </member>
        <member name="M:Winning.Framework.DockingPanel.#ctor(System.Windows.Forms.Control,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="control">需要被Docking的控件对象</param>
            <param name="title">Docking时显示Tab上的标题</param>
        </member>
        <member name="M:Winning.Framework.DockingPanel.#ctor(System.Windows.Forms.Control)">
            <summary>
            构造函数
            </summary>
            <param name="control">需要被Docking的控件对象</param>
        </member>
        <member name="P:Winning.Framework.DockingPanel.DockingControl">
            <summary>
            获取被停靠的控件对象
            该控件不能是顶级窗体，但可以是一个Panel,UserControl以及其他任何继承于Control类的类
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.DockingPanel.Title">
            <summary>
            获取停靠时Tab页上的标题
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.DockingPanel.FullTitle">
            <summary>
            获取停靠时标题栏上的标题
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.DockingPanel.Visible">
            <summary>
            是否可见
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.DockingPanel.Size">
            <summary>
            正常显示时的大小
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.DockingPanel.FloatingSize">
            <summary>
            浮动时的大小
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.DockingPanel.Location">
            <summary>
            获取或设置面板位置
            </summary>
        </member>
        <member name="P:Winning.Framework.DockingPanel.AutoHideSize">
            <summary>
            自动隐藏时的大小
            </summary>
            <value></value>        
        </member>
        <member name="P:Winning.Framework.DockingPanel.ImageList">
            <summary>
            一个ImageList对象,该ImageList包含了用于Donking内容被最小化时显示的图标
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.DockingPanel.ImageIndex">
            <summary>
            Docking内容图标在ImageList对象中的索引
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.DockingPanel.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:Winning.Framework.DockingPanel.Hide">
            <summary>
            Hide
            </summary>
        </member>
        <member name="P:Winning.Framework.DockingPanel.ID">
            <summary>
            设置或获取停靠面板ID
            </summary>
        </member>
        <member name="P:Winning.Framework.DockingPanel.ParentForm">
            <summary>
            
            </summary>
        </member>
        <member name="T:Winning.Framework.DockingForm">
            <summary>
            停靠窗体，该类实现了IDockingForm接口
            </summary>
        </member>
        <member name="M:Winning.Framework.DockingForm.#ctor(System.Collections.ObjectModel.Collection{Winning.Framework.IDockingPanel},Winning.Framework.DockingSite,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="dockingWindows">IDockingWindow的接口对象数组  </param>
            <param name="dockingSite">docking的位置</param>
            <param name="height">form的高度</param>
            <param name="width">form的宽度</param>
        </member>
        <member name="M:Winning.Framework.DockingForm.#ctor(System.Collections.ObjectModel.Collection{Winning.Framework.IDockingPanel},Winning.Framework.DockingSite)">
            <summary>
            构造函数
            </summary>
            <param name="dockingWindows">IDockingWindow的接口对象数组  </param>
            <param name="dockingSite">docking的位置</param>
        </member>
        <member name="M:Winning.Framework.DockingForm.#ctor(System.Collections.ObjectModel.Collection{Winning.Framework.IDockingPanel})">
            <summary>
            构造函数
            </summary>
            <param name="dockingWindows">IDockingWindow的接口对象数组  </param>
        </member>
        <member name="M:Winning.Framework.DockingForm.#ctor(Winning.Framework.IDockingPanel,Winning.Framework.DockingSite,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="dockingWindow">IDockingWindow的接口对象</param>
            <param name="dockingSite">docking的位置</param>
            <param name="height">form的高度</param>
            <param name="width">form的宽度</param>
        </member>
        <member name="M:Winning.Framework.DockingForm.#ctor(Winning.Framework.IDockingPanel,Winning.Framework.DockingSite)">
            <summary>
            构造函数
            </summary>
            <param name="dockingWindow">IDockingWindow的接口对象</param>
            <param name="dockingSite">docking的位置</param>
        </member>
        <member name="M:Winning.Framework.DockingForm.#ctor(Winning.Framework.IDockingPanel)">
            <summary>
            构造函数
            </summary>
            <param name="dockingWindow">IDockingWindow的接口对象</param>
        </member>
        <member name="M:Winning.Framework.DockingForm.#ctor(System.Windows.Forms.Control,Winning.Framework.DockingSite)">
            <summary>
            构造函数(直接创建DockingContent -> DockingWindow -> DockingForm)
            </summary>
            <param name="control"></param>
            <param name="dockingSite"></param>
        </member>
        <member name="M:Winning.Framework.DockingForm.#ctor(System.Windows.Forms.Control)">
            <summary>
            构造函数2(直接创建DockingContent -> DockingWindow -> DockingForm)
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Winning.Framework.DockingForm.#ctor(System.Windows.Forms.Control,Winning.Framework.DockingSite,System.Boolean)">
            <summary>
            构造函数3,指定是否hide
            </summary>
            <param name="control"></param>
            <param name="dockingSite"></param>
            <param name="hide"></param>
        </member>
        <member name="P:Winning.Framework.DockingForm.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Framework.DockingForm.Visilibity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Framework.DockingForm.Location">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Framework.DockingForm.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Framework.DockingForm.FloatingSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Framework.DockingForm.HideAllContents">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Framework.DockingForm.Tabbed">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Framework.DockingForm.FloatVertical">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Framework.DockingForm.ActivePanelIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Framework.DockingForm.DockingPanels">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Framework.DockingForm.DockingSite">
            <summary>
            
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.ColumnToColumn">
            <summary>
            当前表中字段与关联表中字段的对应关系
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.ColumnToColumn.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Common.Eop.ColumnToColumn.SourceColumn">
            <summary>
            当前表中列名
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ColumnToColumn.TargetColumn">
            <summary>
            关联表中原始列名
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.ColumnToColumn.DefaultValue">
            <summary>
            关联表中列的缺省值(当前表中列名为空时有效)
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.SuiteOrder">
            <summary>
            成套医嘱主记录类
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.SuiteOrder.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.SuiteOrder.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.SuiteOrder.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.SuiteOrder.BeginInit">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.SuiteOrder.EndInit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.SuiteOrder.SerialNo">
            <summary>
            成套医嘱序号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.SuiteOrder.Name">
            <summary>
            成套医嘱名称
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.SuiteOrder.Py">
            <summary>
            拼音代码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.SuiteOrder.Wb">
            <summary>
            五笔代码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.SuiteOrder.DeptCode">
            <summary>
            所属科室代码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.SuiteOrder.WardCode">
            <summary>
            所属病区代码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.SuiteOrder.DoctorCode">
            <summary>
            所属医生代码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.SuiteOrder.ApplyRange">
            <summary>
            应用范围(全院/科室/病区/个人)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.SuiteOrder.Memo">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.SuiteOrder.InitializeSentence">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.SuiteOrder.FilterCondition">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.SuiteOrder.KeyInitialized">
            <summary>
            标记主键属性是否已初始化
            </summary>
        </member>
        <member name="E:Winning.Common.Eop.SuiteOrder.ValueChanged">
            <summary>
            属性值改变事件
            </summary>
        </member>
        <member name="T:Winning.Framework.Mainframe.AppConfigReader">
            <summary>
            配置读取类
            </summary>
        </member>
        <member name="M:Winning.Framework.Mainframe.AppConfigReader.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Winning.Framework.Mainframe.AppConfigReader.GetConfig(System.String,System.String)">
            <summary>
            读取用户配置
            </summary>
            <param name="userId"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.Mainframe.AppConfigReader.GetConfig(System.String)">
            <summary>
            读取配置
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.Mainframe.AppConfigReader.GetConfigObj(System.String,System.String)">
            <summary>
            读取用户配置对象
            </summary>
            <param name="userId"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.Mainframe.AppConfigReader.GetConfigObj(System.String)">
            <summary>
            读取配置对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.Mainframe.AppConfigReader.GetConfigs(System.String,System.String[])">
            <summary>
            读取一组用户配置
            </summary>
            <param name="userId"></param>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.Mainframe.AppConfigReader.GetConfigs(System.String[])">
            <summary>
            读取一组配置
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.IRemotingHelper">
            <summary>
            远程服务接口
            </summary>
        </member>
        <member name="M:Winning.Framework.IRemotingHelper.GetWellKnownObject(System.Type,System.String)">
            <summary>
            获得远程的知名对象
            </summary>
            <param name="type">要创建的对象的类型</param>
            <param name="objectName">远程知名对象的名称</param>
            <returns>一个代理,它指向由所请求的已知对象服务的终结点</returns>
        </member>
        <member name="M:Winning.Framework.IRemotingHelper.GetClientActivatedObject(System.Type,System.Object[])">
            <summary>
            获得远程的客户端激活对象
            </summary>
            <param name="type">要创建的对象的类型。</param>
            <param name="args">与要调用构造函数的参数数量、顺序和类型匹配的参数数组；如果 args 为空数组或空引用，则调用不带任何参数的构造函数</param>
            <returns></returns>
        </member>
        <member name="P:Winning.Framework.IRemotingHelper.RemotingServerUrl">
            <summary>
            获得远程服务器的URL
            </summary>
            <value></value>
        </member>
        <member name="T:Winning.Framework.SystemConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:Winning.Framework.SystemConfig.SubSystems">
            <summary>
            子系统
            </summary>
        </member>
        <member name="T:Winning.Framework.SystemInfo">
            <summary>
            系统定义
            </summary>
        </member>
        <member name="P:Winning.Framework.SystemInfo.SystemID">
            <summary>
            系统ID
            </summary>
        </member>
        <member name="P:Winning.Framework.SystemInfo.Caption">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="P:Winning.Framework.SystemInfo.ShortName">
            <summary>
            系统简写
            用于获取图片资源
            </summary>
        </member>
        <member name="P:Winning.Framework.SystemInfo.LoginModel">
            <summary>
            登录模式
            </summary>
        </member>
        <member name="P:Winning.Framework.SystemInfo.ConfigXmlName">
            <summary>
            配置文件名称
            </summary>
        </member>
        <member name="T:Winning.Framework.IDockingHelper">
            <summary>
            停靠帮助类
            </summary>
        </member>
        <member name="M:Winning.Framework.IDockingHelper.ShowDockingPanel(Winning.Framework.IDockingPanel)">
            <summary>
            显示停靠面板
            </summary>
            <param name="panel">需显示的面板</param>
        </member>
        <member name="M:Winning.Framework.IDockingHelper.ShowDockingPanel(System.Guid)">
            <summary>
            显示停靠面板
            </summary>
            <param name="ID">需显示的面板ID</param>
        </member>
        <member name="M:Winning.Framework.IDockingHelper.HideDockingPanel(Winning.Framework.IDockingPanel)">
            <summary>
            隐藏停靠面板
            </summary>
            <param name="panel">需隐藏的面板</param>
        </member>
        <member name="M:Winning.Framework.IDockingHelper.HideDockingPanel(System.Guid)">
            <summary>
            隐藏停靠面板
            </summary>
            <param name="ID">需隐藏的面板ID</param>
        </member>
        <member name="M:Winning.Framework.IDockingHelper.ShowDockingForm(Winning.Framework.IDockingForm)">
            <summary>
            显示停靠窗体
            </summary>
            <param name="form"></param>
        </member>
        <member name="M:Winning.Framework.IDockingHelper.HideDockingForm(Winning.Framework.IDockingForm)">
            <summary>
            隐藏停靠窗体
            </summary>
            <param name="form"></param>
        </member>
        <member name="M:Winning.Framework.IDockingHelper.HideAllPanels">
            <summary>
            隐藏所有
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OneToStateType">
            <summary>
            对用状态位保存数据的字段特殊处理
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OneToStateType.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Common.Eop.OneToStateType.ClassName">
            <summary>
            Attribute类名
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.AdmissionBasicInfo">
            <summary>
            住院基本信息类
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.AdmissionBasicInfo.#ctor">
            <summary>
            初始化空实例
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.AdmissionBasicInfo.#ctor(System.Data.DataRow)">
            <summary>
            用DataRow初始化实例
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.AdmissionBasicInfo.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionBasicInfo.CurrentDepartment">
            <summary>
            科室
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionBasicInfo.CurrentWard">
            <summary>
            病区
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionBasicInfo.BedNo">
            <summary>
            床号
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionBasicInfo.StepOneDate">
            <summary>
            进入第一阶段的时间(入院或出区)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionBasicInfo.StepTwoDate">
            <summary>
            进入第二阶段的时间(入区或出院)
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionBasicInfo.Diagnosis">
            <summary>
            诊断
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionBasicInfo.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.AdmissionBasicInfo.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.Address">
            <summary>
            地址信息
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Address.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.Address.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.Address.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.Address.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.Address.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Address.Country">
            <summary>
            国籍
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Address.Province">
            <summary>
            省（或直辖市） 
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Address.City">
            <summary>
            市（或区县）
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Address.address">
            <summary>
            地址()
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Address.FullAddress">
            <summary>
            完整的地址信息（包括省市、区县、街道等）
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Address.PhoneNo">
            <summary>
            电话号码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Address.Postalcode">
            <summary>
            邮政编码
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Address.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.Address.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.LongOrder">
            <summary>
            长期医嘱
            </summary> 
        </member>
        <member name="M:Winning.Common.Eop.LongOrder.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.LongOrder.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.LongOrder.CeaseOrder(System.String,System.DateTime,Winning.Common.Eop.OrderCeaseReason)">
            <summary>
            停止医嘱(设置停止时间和停止者)
            </summary>
            <param name="employeeCode"></param>
            <param name="ceaseTime"></param>
            <param name="ceaseReason">停止原因</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.LongOrder.AuditCeaseOrder(System.String,System.DateTime)">
            <summary>
            审核医嘱停止信息
            </summary>
            <param name="auditorCode"></param>
            <param name="auditTime"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.LongOrder.SetStateToCeased">
            <summary>
            将医嘱状态设为已停止
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.LongOrder.SetStateToCeased(Winning.Common.Eop.OrderCeaseReason)">
            <summary>
            将医嘱状态设为已停止
            </summary>
            <param name="ceaseReason">停止原因</param>
        </member>
        <member name="M:Winning.Common.Eop.LongOrder.RollbackStateOfCeasedOrder(Winning.Common.Eop.OrderCeaseReason,System.DateTime)">
            <summary>
            将符合指定条件的已停止医嘱的状态恢复到执行状态
            </summary>
            <param name="ceaseReason">停止原因</param>
            <param name="rollbackTime">恢复状态的时间点</param>
        </member>
        <member name="M:Winning.Common.Eop.LongOrder.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.LongOrder.CeaseInfo">
            <summary>
            停止信息
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.LongOrder.CeaseAuditInfo">
            <summary>
            停止审核信息
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.LongOrder.CeaseReason">
            <summary>
            停止原因
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.LongOrder.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.LongOrder.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.GeneralOrderContent">
            <summary>
            常规医嘱内容类.继承自ChargeItemContent类.（应该只出现在长期医嘱中）
            不需要用法,频次
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.GeneralOrderContent.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.GeneralOrderContent.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.GeneralOrderContent.ResetDisplayTexts">
            <summary>
            重设当前可显示的内容,为各项内容间加上空格
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.GeneralOrderContent.CheckProperties">
            <summary>
            校验属性值
            </summary>
            <returns>返回字符串不为空表示有属性的值不正确</returns>
        </member>
        <member name="P:Winning.Common.Eop.GeneralOrderContent.CanCeased">
            <summary>
            是否允许停止
            </summary>
        </member>
        <member name="T:Winning.Framework.XsltTransHelper">
            <summary>
            XSLT转换辅助类
            </summary>
        </member>
        <member name="M:Winning.Framework.XsltTransHelper.TransXml(System.String,System.IO.Stream,System.String@)">
            <summary>
            xslt xml file
            </summary>
            <param name="xsltUraddress"></param>
            <param name="inStream"></param>
            <param name="outFileName"></param>
        </member>
        <member name="M:Winning.Framework.XsltTransHelper.TransXml(System.String,System.IO.Stream,System.IO.Stream@)">
            <summary>
            xslt xml file 2
            </summary>
            <param name="xsltUraddress"></param>
            <param name="inStream"></param>
            <param name="outStream"></param>
        </member>
        <member name="M:Winning.Framework.XsltTransHelper.TransXml(System.String,System.String,System.String@)">
            <summary>
            xslt xml file 3
            </summary>
            <param name="xsltUraddress"></param>
            <param name="inFileName"></param>
            <param name="outFileName"></param>
        </member>
        <member name="M:Winning.Framework.XsltTransHelper.TransXml(System.String,System.String,System.IO.Stream@)">
            <summary>
            xslt xml file 4
            </summary>
            <param name="xsltUraddress"></param>
            <param name="inFileName"></param>
            <param name="outStream"></param>
        </member>
        <member name="T:Winning.Framework.TypeXmlFont">
            <summary>
            字体设置。Size以打印机点（1/72 英寸）指定为度量单位；字符集默认为中文
            </summary>
        </member>
        <member name="M:Winning.Framework.TypeXmlFont.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Framework.TypeXmlFont.FontFamily">
            <remarks/>
        </member>
        <member name="P:Winning.Framework.TypeXmlFont.Size">
            <remarks/>
        </member>
        <member name="P:Winning.Framework.TypeXmlFont.Style">
            <remarks/>
        </member>
        <member name="P:Winning.Framework.TypeXmlFont.Font">
            <summary>
            
            </summary>
        </member>
        <member name="T:Winning.Framework.Security.InvalidUserIdException">
            <summary>
            自定义的非法用户异常
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.InvalidUserIdException.#ctor(System.String)">
            <summary>
            Ctor
            </summary>
            <param name="errMessage"></param>
        </member>
        <member name="M:Winning.Framework.Security.InvalidUserIdException.#ctor">
            <summary>
            Ctor2
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.InvalidUserIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Ctor3
            </summary>
            <param name="serializationInfo"></param>
            <param name="streamingContext"></param>
        </member>
        <member name="M:Winning.Framework.Security.InvalidUserIdException.#ctor(System.String,System.Exception)">
            <summary>
            Ctor4
            </summary>
            <param name="errMessage"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:Winning.Framework.Security.InvalidUserPasswordException">
            <summary>
            自定义的用户密码错误异常
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.InvalidUserPasswordException.#ctor(System.String)">
            <summary>
            Ctor
            </summary>
            <param name="errMessage"></param>
        </member>
        <member name="M:Winning.Framework.Security.InvalidUserPasswordException.#ctor">
            <summary>
            Ctor2
            </summary>
        </member>
        <member name="M:Winning.Framework.Security.InvalidUserPasswordException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Ctor3
            </summary>
            <param name="serializationInfo"></param>
            <param name="streamingContext"></param>
        </member>
        <member name="M:Winning.Framework.Security.InvalidUserPasswordException.#ctor(System.String,System.Exception)">
            <summary>
            Ctor4
            </summary>
            <param name="errMessage"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:Winning.Framework.PlugIn">
            <summary>
            实现接口IPlugin
            一般在插件模块（实现IStartup接口）的run方法中要创建该类的实例，并作为IStartup.run接口的返回值
            可参考IStartup接口的说明和示例
            </summary>
        </member>
        <member name="F:Winning.Framework.PlugIn.NeedSaveData">
            <summary>
            保存数据委托方法
            </summary>
        </member>
        <member name="F:Winning.Framework.PlugIn.SaveData">
            <summary>
            保存数据委托方法
            </summary>
        </member>
        <member name="M:Winning.Framework.PlugIn.SetAssemblyFrom1stDockForm(System.Collections.ObjectModel.Collection{Winning.Framework.IDockingForm})">
            <summary>
            设置AssemblyFileName , StartClassType 属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Winning.Framework.PlugIn.#ctor(System.String,System.String)">
            <summary>
            Ctor
            </summary>
            <param name="assemblyName"></param>
            <param name="startClassType"></param>
        </member>
        <member name="M:Winning.Framework.PlugIn.#ctor(System.String,System.Windows.Forms.Form,System.Boolean,System.Boolean,System.Collections.ObjectModel.Collection{Winning.Framework.IPluginOwnerMenu},System.Collections.ObjectModel.Collection{Winning.Framework.IPluginOwnerToolBar},System.Collections.ObjectModel.Collection{Winning.Framework.IDockingForm},System.Collections.ObjectModel.Collection{Winning.Framework.IPlugIn})">
            <summary>
            Ctor
            </summary>
            <param name="startClassType">启动类名</param>
            <param name="mainForm"></param>
            <param name="isMdiChild"></param>
            <param name="isShowModel"></param>
            <param name="addInMenuItems"></param>
            <param name="addInToolStrips"></param>
            <param name="addInIDockingForms"></param>
            <param name="assistPlugIn"></param>
        </member>
        <member name="M:Winning.Framework.PlugIn.#ctor(System.String,System.Windows.Forms.Form,System.Boolean,System.Boolean,System.Collections.ObjectModel.Collection{Winning.Framework.IPluginOwnerMenu},System.Collections.ObjectModel.Collection{Winning.Framework.IPluginOwnerToolBar},System.Collections.ObjectModel.Collection{Winning.Framework.IDockingForm})">
            <summary>
            Plugin构造函数
            </summary>
            <param name="startClassType">启动类名</param>
            <param name="mainForm">启动的Form</param>
            <param name="isMdiChild">是否为MdiChild启动</param>
            <param name="isShowModel">是否为ShowModel启动</param>
            <param name="addInMenuItems">插件的菜单数组</param>
            <param name="addInToolStrips">插件的工具栏数组</param>
            <param name="addInIDockingForms">插件的Docking对象数组</param>
        </member>
        <member name="M:Winning.Framework.PlugIn.#ctor(System.String,System.Windows.Forms.Form,System.Boolean,System.Boolean)">
            <summary>
            Plugin构造函数
            </summary>
            <param name="startClassType">启动类名</param>
            <param name="mainForm">主窗体</param>
            <param name="isMdiChild">是否为MdiChild启动</param>
            <param name="isShowModel">是否为ShowModel启动</param>
        </member>
        <member name="M:Winning.Framework.PlugIn.#ctor(System.String,System.Windows.Forms.Form)">
            <summary>
            Plugin构造函数
            </summary>
            <param name="startClassType">启动类名</param>
            <param name="mainForm">启动的Form</param>
        </member>
        <member name="M:Winning.Framework.PlugIn.ExecutePatientChangeEvent(Winning.Framework.PatientArgs)">
            <summary>
            执行病人改变事件
            </summary>
            <param name="e">病人</param>
        </member>
        <member name="M:Winning.Framework.PlugIn.ExecutePatientChangingEvent(System.ComponentModel.CancelEventArgs)">
            <summary>
            执行病人正在改变事件
            </summary>
            <param name="e">病人</param>
        </member>
        <member name="M:Winning.Framework.PlugIn.GetImage(System.String)">
            <summary>
            
            </summary>
            <param name="imageName"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.PlugIn.GetNormalIcon(System.String)">
            <summary>
            
            </summary>
            <param name="iconName"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.PlugIn.GetSmallIcon(System.String,Winning.Resource.IconType)">
            <summary>
            
            </summary>
            <param name="imageName"></param>
            <param name="imageType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.PlugIn.GetMiddleIcon(System.String,Winning.Resource.IconType)">
            <summary>
            
            </summary>
            <param name="imageName"></param>
            <param name="imageType"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.PlugIn.NeedSave">
            <summary>
            是否需要保存
            </summary>
        </member>
        <member name="M:Winning.Framework.PlugIn.Save">
            <summary>
            保存数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.PlugIn.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.PlugIn.Equals(System.Object)">
            <summary>
            重载Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.PlugIn.op_Equality(Winning.Framework.PlugIn,Winning.Framework.PlugIn)">
            <summary>
            重载操作符=
            </summary>
            <param name="o1"></param>
            <param name="o2"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.PlugIn.op_Inequality(Winning.Framework.PlugIn,Winning.Framework.PlugIn)">
            <summary>
            重载操作符!=
            </summary>
            <param name="o1"></param>
            <param name="o2"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.PlugIn.GetHashCode">
            <summary>
            重载GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="P:Winning.Framework.PlugIn.MainForm">
            <summary>
            获取和设置插件的主窗体
            </summary>
            <value>插件的主窗体</value>
        </member>
        <member name="P:Winning.Framework.PlugIn.IsMdiChild">
             <summary>
            获取和设置被启动的Form是否以MdiChild方式启动 
             </summary>
             <value></value>
        </member>
        <member name="P:Winning.Framework.PlugIn.IsShowModel">
            <summary>
            获取和设置被启动的Form是否以ShowModel方式启动
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.PlugIn.AddInMenuItems">
            <summary>
            获取和设置需要添加的菜单数组
            </summary>
            <value>菜单数组</value>
        </member>
        <member name="P:Winning.Framework.PlugIn.AddInToolStrips">
            <summary>
            获取和设置需要添加的工具栏数组
            </summary>
            <value>工具栏数据</value>
        </member>
        <member name="P:Winning.Framework.PlugIn.AddInDockingForms">
            <summary>
            获取和设置需要显示的DockingForm对象数组
            </summary>
            <value>DockingForm对象数组</value>
        </member>
        <member name="P:Winning.Framework.PlugIn.AssemblyFileName">
            <summary>
            Assembly的文件名称
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.PlugIn.AssistPlugIn">
            <summary>
            辅助的插件
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.PlugIn.StartClassType">
            <summary>
            启动类型字符串值
            </summary>
            <value></value>
        </member>
        <member name="P:Winning.Framework.PlugIn.ByLoadPlugIn">
            <summary>
            加载当前Plugin的Plugin
            </summary>
            <value></value>
        </member>
        <member name="E:Winning.Framework.PlugIn.PatientChanged">
            <summary>
            床位号改变事件
            </summary>
        </member>
        <member name="E:Winning.Framework.PlugIn.PatientChanging">
            <summary>
            病人正在改变事件
            </summary>
        </member>
        <member name="P:Winning.Framework.PlugIn.Icon">
            <summary>
            获得或设置图标
            </summary>
        </member>
        <member name="T:Winning.Framework.PlugIn.NeedSaveDataDelegate">
            <summary>
            保存委托定义
            </summary>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.PlugIn.SaveDataDelegate">
            <summary>
            保存委托定义
            </summary>
            <returns></returns>
        </member>
        <member name="T:Winning.Framework.PatientChangedHandler">
            <summary>
            提供病人改变后事件
            </summary>
            <param name="Sender">发送者</param>
            <param name="arg">病人参数</param>
        </member>
        <member name="T:Winning.Framework.PatientArgs">
            <summary>
            病人参数
            </summary>
        </member>
        <member name="M:Winning.Framework.PatientArgs.#ctor(Winning.Common.Eop.Inpatient)">
            <summary>
            构造函数
            </summary>
            <param name="patinfo"></param>
        </member>
        <member name="P:Winning.Framework.PatientArgs.PatInfo">
            <summary>
            获得首页序号
            </summary>
        </member>
        <member name="T:Winning.Framework.PatientChangingHandler">
            <summary>
            病人改变中事件
            </summary>
            <param name="sender"></param>
            <param name="arg"></param>
        </member>
        <member name="T:Winning.Common.Eop.SpecialMethodAttribute">
            <summary>
            指示方法是否是默认的初始化数据的方法。不可继承
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.SpecialMethodAttribute.#ctor(Winning.Common.Eop.MethodSpecialKind)">
            <summary>
            
            </summary>
            <param name="flag"></param>
        </member>
        <member name="P:Winning.Common.Eop.SpecialMethodAttribute.Flag">
            <summary>
            方法特殊属性
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.MethodSpecialKind">
            <summary>
            标记类方法和构造函数的特殊属性。在用反射方式设置、获取类属性的值时要用。
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.MethodSpecialKind.DefaultCtor">
            <summary>
            默认的构造函数
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.MethodSpecialKind.StateInitValueMethod">
            <summary>
            状态类的初始化方法
            </summary>
        </member>
        <member name="F:Winning.Common.Eop.MethodSpecialKind.StateGetValueMethod">
            <summary>
            状态类取值的方法
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OutDruggeryContent">
            <summary>
            出院带药医嘱内容.继承自DruggerOrderContent
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OutDruggeryContent.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OutDruggeryContent.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.OutDruggeryContent.ResetDisplayTexts">
            <summary>
            重设当前可显示的内容,为各项内容间加上空格
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OutDruggeryContent.CheckProperties">
            <summary>
            校验属性值
            </summary>
            <returns>返回字符串不为空表示有属性的值不正确</returns>
        </member>
        <member name="M:Winning.Common.Eop.OutDruggeryContent.ReCalcTotalAmount">
            <summary>
            重新计算总数量的数值
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OutDruggeryContent.CanCeased">
            <summary>
            标记是否允许停止
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OutDruggeryContent.ExecuteDays">
            <summary>
            执行天数
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OutDruggeryContent.TotalAmount">
            <summary>
            药品总数量(为出院带药保留,使用剂量单位)
            </summary>
        </member>
        <member name="T:Winning.Common.Eop.OrderUsage">
            <summary>
            医嘱用法类
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderUsage.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Winning.Common.Eop.OrderUsage.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Winning.Common.Eop.OrderUsage.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="name"></param>
        </member>
        <member name="M:Winning.Common.Eop.OrderUsage.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
        </member>
        <member name="M:Winning.Common.Eop.OrderUsage.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderUsage.Equals(System.Object)">
            <summary>
            确定两个对象是否具有相同的值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderUsage.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderUsage.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Winning.Common.Eop.OrderUsage.ReInitializeAllProperties">
            <summary>
            初始化所有的属性，包括引用类型的属性自己的属性
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderUsage.SuitOnly">
            <summary>
            只用于成套医嘱
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderUsage.AutoGroup">
            <summary>
            自动分组
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderUsage.Kind">
            <summary>
            用法类型
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderUsage.InitializeSentence">
            <summary>
            与实体类匹配的、读取DB中数据的SQL语句
            </summary>
        </member>
        <member name="P:Winning.Common.Eop.OrderUsage.FilterCondition">
            <summary>
            在DataTable中按主键值过滤记录的条件
            </summary>
        </member>
        <member name="T:Winning.Framework.BasicSettings">
            <summary>
            获取系统级的基础配置。（从数据库中获取，不再通过文件方式读取）
            特殊处理：
              由于ShowList组件在窗口设计器中使用时，仍需要读取相应的配置。
              若要从数据库读取配置，则需要改devenv.exe.config.
              所以，这里使用判断AppDomain的方式来进行特殊处理。
            一般返回Stream对象
            </summary>
        </member>
        <member name="F:Winning.Framework.BasicSettings.ORMappingSetting">
            <summary>
            ORM映射
            </summary>
        </member>
        <member name="F:Winning.Framework.BasicSettings.PreDefineSqlSetting">
            <summary>
            预定义SQL语句
            </summary>
        </member>
        <member name="F:Winning.Framework.BasicSettings.WordbookSetting">
            <summary>
            数据字典配置
            </summary>
        </member>
        <member name="F:Winning.Framework.BasicSettings.DoctorAdviceSetting">
            <summary>
            医嘱设置
            </summary>
        </member>
        <member name="F:Winning.Framework.BasicSettings.DevSkinConfigKey">
            <summary>
            界面样式
            </summary>
        </member>
        <member name="F:Winning.Framework.BasicSettings.LogonType">
            <summary>
            登录模式
            </summary>
        </member>
        <member name="F:Winning.Framework.BasicSettings.SystemConfigKey">
            <summary>
            系统定义
            </summary>
        </member>
        <member name="F:Winning.Framework.BasicSettings.McsBaseSettings">
            <summary>
            移动护理系统基础设置
            </summary>
        </member>
        <member name="M:Winning.Framework.BasicSettings.GetSystemInfo(Winning.Framework.SubSystemFlag)">
            <summary>
            获取指定子系统定义
            </summary>
            <param name="systemID"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.BasicSettings.GetConfig(System.String)">
            <summary>
            获取指定键值对应的参数设置
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.BasicSettings.GetConfigNewVersion(System.String)">
            <summary>
            获取指定键值对应的参数设置的最新版本
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.BasicSettings.UpdateConfig(System.String,System.IO.Stream)">
            <summary>
            更新参数配置
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Winning.Framework.BasicSettings.GetStringConfig(System.String)">
            <summary>
            获取String类型的配置
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.BasicSettings.GetStringConfigNewVersion(System.String)">
            <summary>
            读取最新的String类型的配置
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.BasicSettings.GetCompressedReportTemplate(System.String,System.String)">
            <summary>
            获取指定的打印模板（经过压缩的）。现在是从数据库中获得
            </summary>
            <param name="templateName"></param>
            <param name="kind">模板类型：YZ-医嘱 BL-病历</param>
            <returns></returns>
        </member>
        <member name="M:Winning.Framework.BasicSettings.UpdateCompressedReportTemplate(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            更新打印模板数据
            </summary>
            <param name="templateName"></param>
            <param name="description">模板描述</param>
            <param name="kind">模板类型：YZ-医嘱 BL-病历</param>
            <param name="compressedTemplate">压缩后的模板内容</param>
            <param name="insertNew">不存在时是否添加记录</param>
            <returns></returns>
        </member>
        <member name="P:Winning.Framework.BasicSettings.TemplateTable">
            <summary>
            存放打印模板，初始为空，需要时才添加相应的模板数据
            </summary>
        </member>
        <member name="P:Winning.Framework.BasicSettings.SystemDefine">
            <summary>
            系统定义
            </summary>
        </member>
    </members>
</doc>
