//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.261
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.261 版自动生成。
// 
#pragma warning disable 1591

namespace SendOrder.Service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback QueryPatientPDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPatientQcOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInpatientListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSingleInpatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAllInpatientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangedInpatientListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientAllReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientReportContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientExtraInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeptPatientsExtraInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAdvisesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAdvisesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuditOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResendSynchRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SynchExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHisOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientOperationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SynchMedTechReqFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTFRequestAdviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCLRequestAdviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPatientBigChargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPatientSmallChargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPatientChargeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPatientOtherInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPatientOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecipeRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportPatientRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPatientFirstPageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPatFirstPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPatFirstPageExportOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePatFirstPageExportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessOrderPrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderPrintSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCheckListDetailOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::SendOrder.Properties.Settings.Default.SendOrder_Service_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event QueryPatientPDFCompletedEventHandler QueryPatientPDFCompleted;
        
        /// <remarks/>
        public event QueryPatientQcCompletedEventHandler QueryPatientQcCompleted;
        
        /// <remarks/>
        public event GetInpatientListCompletedEventHandler GetInpatientListCompleted;
        
        /// <remarks/>
        public event UpdateSingleInpatientCompletedEventHandler UpdateSingleInpatientCompleted;
        
        /// <remarks/>
        public event UpdateAllInpatientsCompletedEventHandler UpdateAllInpatientsCompleted;
        
        /// <remarks/>
        public event GetChangedInpatientListCompletedEventHandler GetChangedInpatientListCompleted;
        
        /// <remarks/>
        public event GetPatientAllReportsCompletedEventHandler GetPatientAllReportsCompleted;
        
        /// <remarks/>
        public event GetPatientReportContentCompletedEventHandler GetPatientReportContentCompleted;
        
        /// <remarks/>
        public event GetPatientExtraInfoCompletedEventHandler GetPatientExtraInfoCompleted;
        
        /// <remarks/>
        public event GetDeptPatientsExtraInfoCompletedEventHandler GetDeptPatientsExtraInfoCompleted;
        
        /// <remarks/>
        public event CheckAdvisesCompletedEventHandler CheckAdvisesCompleted;
        
        /// <remarks/>
        public event SaveAdvisesCompletedEventHandler SaveAdvisesCompleted;
        
        /// <remarks/>
        public event AuditOrderCompletedEventHandler AuditOrderCompleted;
        
        /// <remarks/>
        public event ResendSynchRecordsCompletedEventHandler ResendSynchRecordsCompleted;
        
        /// <remarks/>
        public event SynchExecuteCompletedEventHandler SynchExecuteCompleted;
        
        /// <remarks/>
        public event GetHisOrderCompletedEventHandler GetHisOrderCompleted;
        
        /// <remarks/>
        public event GetPatientOperationInfoCompletedEventHandler GetPatientOperationInfoCompleted;
        
        /// <remarks/>
        public event SynchMedTechReqFormCompletedEventHandler SynchMedTechReqFormCompleted;
        
        /// <remarks/>
        public event DeleteTFRequestAdviceCompletedEventHandler DeleteTFRequestAdviceCompleted;
        
        /// <remarks/>
        public event DeleteCLRequestAdviceCompletedEventHandler DeleteCLRequestAdviceCompleted;
        
        /// <remarks/>
        public event GetPatientReportCompletedEventHandler GetPatientReportCompleted;
        
        /// <remarks/>
        public event QueryPatientBigChargeCompletedEventHandler QueryPatientBigChargeCompleted;
        
        /// <remarks/>
        public event QueryPatientSmallChargeCompletedEventHandler QueryPatientSmallChargeCompleted;
        
        /// <remarks/>
        public event QueryPatientChargeDetailCompletedEventHandler QueryPatientChargeDetailCompleted;
        
        /// <remarks/>
        public event QueryPatientOtherInfoCompletedEventHandler QueryPatientOtherInfoCompleted;
        
        /// <remarks/>
        public event QueryPatientOperationCompletedEventHandler QueryPatientOperationCompleted;
        
        /// <remarks/>
        public event GetRecipeRulesCompletedEventHandler GetRecipeRulesCompleted;
        
        /// <remarks/>
        public event ExportPatientRecordsCompletedEventHandler ExportPatientRecordsCompleted;
        
        /// <remarks/>
        public event QueryPatientFirstPageInfoCompletedEventHandler QueryPatientFirstPageInfoCompleted;
        
        /// <remarks/>
        public event InsertPatFirstPageCompletedEventHandler InsertPatFirstPageCompleted;
        
        /// <remarks/>
        public event QueryPatFirstPageExportCompletedEventHandler QueryPatFirstPageExportCompleted;
        
        /// <remarks/>
        public event UpdatePatFirstPageExportCompletedEventHandler UpdatePatFirstPageExportCompleted;
        
        /// <remarks/>
        public event ProcessOrderPrintCompletedEventHandler ProcessOrderPrintCompleted;
        
        /// <remarks/>
        public event GetOrderPrintSettingsCompletedEventHandler GetOrderPrintSettingsCompleted;
        
        /// <remarks/>
        public event InsertCheckListDetailCompletedEventHandler InsertCheckListDetailCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPatientPDF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryPatientPDF(string hissyxh) {
            object[] results = this.Invoke("QueryPatientPDF", new object[] {
                        hissyxh});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPatientPDFAsync(string hissyxh) {
            this.QueryPatientPDFAsync(hissyxh, null);
        }
        
        /// <remarks/>
        public void QueryPatientPDFAsync(string hissyxh, object userState) {
            if ((this.QueryPatientPDFOperationCompleted == null)) {
                this.QueryPatientPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPatientPDFOperationCompleted);
            }
            this.InvokeAsync("QueryPatientPDF", new object[] {
                        hissyxh}, this.QueryPatientPDFOperationCompleted, userState);
        }
        
        private void OnQueryPatientPDFOperationCompleted(object arg) {
            if ((this.QueryPatientPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPatientPDFCompleted(this, new QueryPatientPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPatientQc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryPatientQc(string cxlb, string ksrq, string jsrq, string bqdm, string hissyxh, string lb) {
            object[] results = this.Invoke("QueryPatientQc", new object[] {
                        cxlb,
                        ksrq,
                        jsrq,
                        bqdm,
                        hissyxh,
                        lb});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPatientQcAsync(string cxlb, string ksrq, string jsrq, string bqdm, string hissyxh, string lb) {
            this.QueryPatientQcAsync(cxlb, ksrq, jsrq, bqdm, hissyxh, lb, null);
        }
        
        /// <remarks/>
        public void QueryPatientQcAsync(string cxlb, string ksrq, string jsrq, string bqdm, string hissyxh, string lb, object userState) {
            if ((this.QueryPatientQcOperationCompleted == null)) {
                this.QueryPatientQcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPatientQcOperationCompleted);
            }
            this.InvokeAsync("QueryPatientQc", new object[] {
                        cxlb,
                        ksrq,
                        jsrq,
                        bqdm,
                        hissyxh,
                        lb}, this.QueryPatientQcOperationCompleted, userState);
        }
        
        private void OnQueryPatientQcOperationCompleted(object arg) {
            if ((this.QueryPatientQcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPatientQcCompleted(this, new QueryPatientQcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInpatientList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetInpatientList() {
            object[] results = this.Invoke("GetInpatientList", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInpatientListAsync() {
            this.GetInpatientListAsync(null);
        }
        
        /// <remarks/>
        public void GetInpatientListAsync(object userState) {
            if ((this.GetInpatientListOperationCompleted == null)) {
                this.GetInpatientListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInpatientListOperationCompleted);
            }
            this.InvokeAsync("GetInpatientList", new object[0], this.GetInpatientListOperationCompleted, userState);
        }
        
        private void OnGetInpatientListOperationCompleted(object arg) {
            if ((this.GetInpatientListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInpatientListCompleted(this, new GetInpatientListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSingleInpatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSingleInpatient([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] changeData) {
            object[] results = this.Invoke("UpdateSingleInpatient", new object[] {
                        changeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSingleInpatientAsync(byte[] changeData) {
            this.UpdateSingleInpatientAsync(changeData, null);
        }
        
        /// <remarks/>
        public void UpdateSingleInpatientAsync(byte[] changeData, object userState) {
            if ((this.UpdateSingleInpatientOperationCompleted == null)) {
                this.UpdateSingleInpatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSingleInpatientOperationCompleted);
            }
            this.InvokeAsync("UpdateSingleInpatient", new object[] {
                        changeData}, this.UpdateSingleInpatientOperationCompleted, userState);
        }
        
        private void OnUpdateSingleInpatientOperationCompleted(object arg) {
            if ((this.UpdateSingleInpatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSingleInpatientCompleted(this, new UpdateSingleInpatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAllInpatients", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAllInpatients([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] changeData) {
            object[] results = this.Invoke("UpdateAllInpatients", new object[] {
                        changeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAllInpatientsAsync(byte[] changeData) {
            this.UpdateAllInpatientsAsync(changeData, null);
        }
        
        /// <remarks/>
        public void UpdateAllInpatientsAsync(byte[] changeData, object userState) {
            if ((this.UpdateAllInpatientsOperationCompleted == null)) {
                this.UpdateAllInpatientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAllInpatientsOperationCompleted);
            }
            this.InvokeAsync("UpdateAllInpatients", new object[] {
                        changeData}, this.UpdateAllInpatientsOperationCompleted, userState);
        }
        
        private void OnUpdateAllInpatientsOperationCompleted(object arg) {
            if ((this.UpdateAllInpatientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAllInpatientsCompleted(this, new UpdateAllInpatientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChangedInpatientList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetChangedInpatientList() {
            object[] results = this.Invoke("GetChangedInpatientList", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChangedInpatientListAsync() {
            this.GetChangedInpatientListAsync(null);
        }
        
        /// <remarks/>
        public void GetChangedInpatientListAsync(object userState) {
            if ((this.GetChangedInpatientListOperationCompleted == null)) {
                this.GetChangedInpatientListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangedInpatientListOperationCompleted);
            }
            this.InvokeAsync("GetChangedInpatientList", new object[0], this.GetChangedInpatientListOperationCompleted, userState);
        }
        
        private void OnGetChangedInpatientListOperationCompleted(object arg) {
            if ((this.GetChangedInpatientListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangedInpatientListCompleted(this, new GetChangedInpatientListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientAllReports", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPatientAllReports(string patId) {
            object[] results = this.Invoke("GetPatientAllReports", new object[] {
                        patId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientAllReportsAsync(string patId) {
            this.GetPatientAllReportsAsync(patId, null);
        }
        
        /// <remarks/>
        public void GetPatientAllReportsAsync(string patId, object userState) {
            if ((this.GetPatientAllReportsOperationCompleted == null)) {
                this.GetPatientAllReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientAllReportsOperationCompleted);
            }
            this.InvokeAsync("GetPatientAllReports", new object[] {
                        patId}, this.GetPatientAllReportsOperationCompleted, userState);
        }
        
        private void OnGetPatientAllReportsOperationCompleted(object arg) {
            if ((this.GetPatientAllReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientAllReportsCompleted(this, new GetPatientAllReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientReportContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPatientReportContent(string patId, string bgxh, string bglb, string bglbid) {
            object[] results = this.Invoke("GetPatientReportContent", new object[] {
                        patId,
                        bgxh,
                        bglb,
                        bglbid});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientReportContentAsync(string patId, string bgxh, string bglb, string bglbid) {
            this.GetPatientReportContentAsync(patId, bgxh, bglb, bglbid, null);
        }
        
        /// <remarks/>
        public void GetPatientReportContentAsync(string patId, string bgxh, string bglb, string bglbid, object userState) {
            if ((this.GetPatientReportContentOperationCompleted == null)) {
                this.GetPatientReportContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientReportContentOperationCompleted);
            }
            this.InvokeAsync("GetPatientReportContent", new object[] {
                        patId,
                        bgxh,
                        bglb,
                        bglbid}, this.GetPatientReportContentOperationCompleted, userState);
        }
        
        private void OnGetPatientReportContentOperationCompleted(object arg) {
            if ((this.GetPatientReportContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientReportContentCompleted(this, new GetPatientReportContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientExtraInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPatientExtraInfo(string patId) {
            object[] results = this.Invoke("GetPatientExtraInfo", new object[] {
                        patId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientExtraInfoAsync(string patId) {
            this.GetPatientExtraInfoAsync(patId, null);
        }
        
        /// <remarks/>
        public void GetPatientExtraInfoAsync(string patId, object userState) {
            if ((this.GetPatientExtraInfoOperationCompleted == null)) {
                this.GetPatientExtraInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientExtraInfoOperationCompleted);
            }
            this.InvokeAsync("GetPatientExtraInfo", new object[] {
                        patId}, this.GetPatientExtraInfoOperationCompleted, userState);
        }
        
        private void OnGetPatientExtraInfoOperationCompleted(object arg) {
            if ((this.GetPatientExtraInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientExtraInfoCompleted(this, new GetPatientExtraInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeptPatientsExtraInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDeptPatientsExtraInfo(string dept, string ward) {
            object[] results = this.Invoke("GetDeptPatientsExtraInfo", new object[] {
                        dept,
                        ward});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeptPatientsExtraInfoAsync(string dept, string ward) {
            this.GetDeptPatientsExtraInfoAsync(dept, ward, null);
        }
        
        /// <remarks/>
        public void GetDeptPatientsExtraInfoAsync(string dept, string ward, object userState) {
            if ((this.GetDeptPatientsExtraInfoOperationCompleted == null)) {
                this.GetDeptPatientsExtraInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeptPatientsExtraInfoOperationCompleted);
            }
            this.InvokeAsync("GetDeptPatientsExtraInfo", new object[] {
                        dept,
                        ward}, this.GetDeptPatientsExtraInfoOperationCompleted, userState);
        }
        
        private void OnGetDeptPatientsExtraInfoOperationCompleted(object arg) {
            if ((this.GetDeptPatientsExtraInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeptPatientsExtraInfoCompleted(this, new GetDeptPatientsExtraInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckAdvises", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckAdvises(string wkdz, string syxh, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] xmlcqdata, bool iscqls, string encodingName) {
            object[] results = this.Invoke("CheckAdvises", new object[] {
                        wkdz,
                        syxh,
                        xmlcqdata,
                        iscqls,
                        encodingName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAdvisesAsync(string wkdz, string syxh, byte[] xmlcqdata, bool iscqls, string encodingName) {
            this.CheckAdvisesAsync(wkdz, syxh, xmlcqdata, iscqls, encodingName, null);
        }
        
        /// <remarks/>
        public void CheckAdvisesAsync(string wkdz, string syxh, byte[] xmlcqdata, bool iscqls, string encodingName, object userState) {
            if ((this.CheckAdvisesOperationCompleted == null)) {
                this.CheckAdvisesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAdvisesOperationCompleted);
            }
            this.InvokeAsync("CheckAdvises", new object[] {
                        wkdz,
                        syxh,
                        xmlcqdata,
                        iscqls,
                        encodingName}, this.CheckAdvisesOperationCompleted, userState);
        }
        
        private void OnCheckAdvisesOperationCompleted(object arg) {
            if ((this.CheckAdvisesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAdvisesCompleted(this, new CheckAdvisesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAdvises", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveAdvises(string wkdz, string syxh, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] xmlcqdata, bool iscqls, string encodingName, string lyjzsj) {
            object[] results = this.Invoke("SaveAdvises", new object[] {
                        wkdz,
                        syxh,
                        xmlcqdata,
                        iscqls,
                        encodingName,
                        lyjzsj});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAdvisesAsync(string wkdz, string syxh, byte[] xmlcqdata, bool iscqls, string encodingName, string lyjzsj) {
            this.SaveAdvisesAsync(wkdz, syxh, xmlcqdata, iscqls, encodingName, lyjzsj, null);
        }
        
        /// <remarks/>
        public void SaveAdvisesAsync(string wkdz, string syxh, byte[] xmlcqdata, bool iscqls, string encodingName, string lyjzsj, object userState) {
            if ((this.SaveAdvisesOperationCompleted == null)) {
                this.SaveAdvisesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAdvisesOperationCompleted);
            }
            this.InvokeAsync("SaveAdvises", new object[] {
                        wkdz,
                        syxh,
                        xmlcqdata,
                        iscqls,
                        encodingName,
                        lyjzsj}, this.SaveAdvisesOperationCompleted, userState);
        }
        
        private void OnSaveAdvisesOperationCompleted(object arg) {
            if ((this.SaveAdvisesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAdvisesCompleted(this, new SaveAdvisesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuditOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuditOrder(string hisSyxh, string executorCode, string macAddress, string selectedLongs, string selectedTemps, string auditor, string auditTime) {
            object[] results = this.Invoke("AuditOrder", new object[] {
                        hisSyxh,
                        executorCode,
                        macAddress,
                        selectedLongs,
                        selectedTemps,
                        auditor,
                        auditTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuditOrderAsync(string hisSyxh, string executorCode, string macAddress, string selectedLongs, string selectedTemps, string auditor, string auditTime) {
            this.AuditOrderAsync(hisSyxh, executorCode, macAddress, selectedLongs, selectedTemps, auditor, auditTime, null);
        }
        
        /// <remarks/>
        public void AuditOrderAsync(string hisSyxh, string executorCode, string macAddress, string selectedLongs, string selectedTemps, string auditor, string auditTime, object userState) {
            if ((this.AuditOrderOperationCompleted == null)) {
                this.AuditOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuditOrderOperationCompleted);
            }
            this.InvokeAsync("AuditOrder", new object[] {
                        hisSyxh,
                        executorCode,
                        macAddress,
                        selectedLongs,
                        selectedTemps,
                        auditor,
                        auditTime}, this.AuditOrderOperationCompleted, userState);
        }
        
        private void OnAuditOrderOperationCompleted(object arg) {
            if ((this.AuditOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuditOrderCompleted(this, new AuditOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResendSynchRecords", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResendSynchRecords(string executorCode, string patID, string macAddress) {
            this.Invoke("ResendSynchRecords", new object[] {
                        executorCode,
                        patID,
                        macAddress});
        }
        
        /// <remarks/>
        public void ResendSynchRecordsAsync(string executorCode, string patID, string macAddress) {
            this.ResendSynchRecordsAsync(executorCode, patID, macAddress, null);
        }
        
        /// <remarks/>
        public void ResendSynchRecordsAsync(string executorCode, string patID, string macAddress, object userState) {
            if ((this.ResendSynchRecordsOperationCompleted == null)) {
                this.ResendSynchRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResendSynchRecordsOperationCompleted);
            }
            this.InvokeAsync("ResendSynchRecords", new object[] {
                        executorCode,
                        patID,
                        macAddress}, this.ResendSynchRecordsOperationCompleted, userState);
        }
        
        private void OnResendSynchRecordsOperationCompleted(object arg) {
            if ((this.ResendSynchRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResendSynchRecordsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SynchExecute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SynchExecute(string hisSyxh, string longOrderTable, string tempOrderTable) {
            object[] results = this.Invoke("SynchExecute", new object[] {
                        hisSyxh,
                        longOrderTable,
                        tempOrderTable});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SynchExecuteAsync(string hisSyxh, string longOrderTable, string tempOrderTable) {
            this.SynchExecuteAsync(hisSyxh, longOrderTable, tempOrderTable, null);
        }
        
        /// <remarks/>
        public void SynchExecuteAsync(string hisSyxh, string longOrderTable, string tempOrderTable, object userState) {
            if ((this.SynchExecuteOperationCompleted == null)) {
                this.SynchExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSynchExecuteOperationCompleted);
            }
            this.InvokeAsync("SynchExecute", new object[] {
                        hisSyxh,
                        longOrderTable,
                        tempOrderTable}, this.SynchExecuteOperationCompleted, userState);
        }
        
        private void OnSynchExecuteOperationCompleted(object arg) {
            if ((this.SynchExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SynchExecuteCompleted(this, new SynchExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHisOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetHisOrder(int queryType, string hisFirstPageNo, string wardCode, string deptCode, int orderType, int orderState) {
            object[] results = this.Invoke("GetHisOrder", new object[] {
                        queryType,
                        hisFirstPageNo,
                        wardCode,
                        deptCode,
                        orderType,
                        orderState});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHisOrderAsync(int queryType, string hisFirstPageNo, string wardCode, string deptCode, int orderType, int orderState) {
            this.GetHisOrderAsync(queryType, hisFirstPageNo, wardCode, deptCode, orderType, orderState, null);
        }
        
        /// <remarks/>
        public void GetHisOrderAsync(int queryType, string hisFirstPageNo, string wardCode, string deptCode, int orderType, int orderState, object userState) {
            if ((this.GetHisOrderOperationCompleted == null)) {
                this.GetHisOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHisOrderOperationCompleted);
            }
            this.InvokeAsync("GetHisOrder", new object[] {
                        queryType,
                        hisFirstPageNo,
                        wardCode,
                        deptCode,
                        orderType,
                        orderState}, this.GetHisOrderOperationCompleted, userState);
        }
        
        private void OnGetHisOrderOperationCompleted(object arg) {
            if ((this.GetHisOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHisOrderCompleted(this, new GetHisOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientOperationInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPatientOperationInfo(string deptId, string wardId, string patId, string operId, string anaId, string preOperDiag, string operRoom, int operReqState, string startDate, string endDate, string encodingName) {
            object[] results = this.Invoke("GetPatientOperationInfo", new object[] {
                        deptId,
                        wardId,
                        patId,
                        operId,
                        anaId,
                        preOperDiag,
                        operRoom,
                        operReqState,
                        startDate,
                        endDate,
                        encodingName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientOperationInfoAsync(string deptId, string wardId, string patId, string operId, string anaId, string preOperDiag, string operRoom, int operReqState, string startDate, string endDate, string encodingName) {
            this.GetPatientOperationInfoAsync(deptId, wardId, patId, operId, anaId, preOperDiag, operRoom, operReqState, startDate, endDate, encodingName, null);
        }
        
        /// <remarks/>
        public void GetPatientOperationInfoAsync(string deptId, string wardId, string patId, string operId, string anaId, string preOperDiag, string operRoom, int operReqState, string startDate, string endDate, string encodingName, object userState) {
            if ((this.GetPatientOperationInfoOperationCompleted == null)) {
                this.GetPatientOperationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientOperationInfoOperationCompleted);
            }
            this.InvokeAsync("GetPatientOperationInfo", new object[] {
                        deptId,
                        wardId,
                        patId,
                        operId,
                        anaId,
                        preOperDiag,
                        operRoom,
                        operReqState,
                        startDate,
                        endDate,
                        encodingName}, this.GetPatientOperationInfoOperationCompleted, userState);
        }
        
        private void OnGetPatientOperationInfoOperationCompleted(object arg) {
            if ((this.GetPatientOperationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientOperationInfoCompleted(this, new GetPatientOperationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SynchMedTechReqForm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SynchMedTechReqForm(int updateKind, int reqXh, int hisPatId, int reqModelXh, string reqModelKind, System.DateTime inputTime, string opId, string reqDeptId, string execDeptId, int recState, string reqFormXml, string reqFormText) {
            this.Invoke("SynchMedTechReqForm", new object[] {
                        updateKind,
                        reqXh,
                        hisPatId,
                        reqModelXh,
                        reqModelKind,
                        inputTime,
                        opId,
                        reqDeptId,
                        execDeptId,
                        recState,
                        reqFormXml,
                        reqFormText});
        }
        
        /// <remarks/>
        public void SynchMedTechReqFormAsync(int updateKind, int reqXh, int hisPatId, int reqModelXh, string reqModelKind, System.DateTime inputTime, string opId, string reqDeptId, string execDeptId, int recState, string reqFormXml, string reqFormText) {
            this.SynchMedTechReqFormAsync(updateKind, reqXh, hisPatId, reqModelXh, reqModelKind, inputTime, opId, reqDeptId, execDeptId, recState, reqFormXml, reqFormText, null);
        }
        
        /// <remarks/>
        public void SynchMedTechReqFormAsync(int updateKind, int reqXh, int hisPatId, int reqModelXh, string reqModelKind, System.DateTime inputTime, string opId, string reqDeptId, string execDeptId, int recState, string reqFormXml, string reqFormText, object userState) {
            if ((this.SynchMedTechReqFormOperationCompleted == null)) {
                this.SynchMedTechReqFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSynchMedTechReqFormOperationCompleted);
            }
            this.InvokeAsync("SynchMedTechReqForm", new object[] {
                        updateKind,
                        reqXh,
                        hisPatId,
                        reqModelXh,
                        reqModelKind,
                        inputTime,
                        opId,
                        reqDeptId,
                        execDeptId,
                        recState,
                        reqFormXml,
                        reqFormText}, this.SynchMedTechReqFormOperationCompleted, userState);
        }
        
        private void OnSynchMedTechReqFormOperationCompleted(object arg) {
            if ((this.SynchMedTechReqFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SynchMedTechReqFormCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteTFRequestAdvice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTFRequestAdvice(decimal applySerialNo, string executorCode) {
            this.Invoke("DeleteTFRequestAdvice", new object[] {
                        applySerialNo,
                        executorCode});
        }
        
        /// <remarks/>
        public void DeleteTFRequestAdviceAsync(decimal applySerialNo, string executorCode) {
            this.DeleteTFRequestAdviceAsync(applySerialNo, executorCode, null);
        }
        
        /// <remarks/>
        public void DeleteTFRequestAdviceAsync(decimal applySerialNo, string executorCode, object userState) {
            if ((this.DeleteTFRequestAdviceOperationCompleted == null)) {
                this.DeleteTFRequestAdviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTFRequestAdviceOperationCompleted);
            }
            this.InvokeAsync("DeleteTFRequestAdvice", new object[] {
                        applySerialNo,
                        executorCode}, this.DeleteTFRequestAdviceOperationCompleted, userState);
        }
        
        private void OnDeleteTFRequestAdviceOperationCompleted(object arg) {
            if ((this.DeleteTFRequestAdviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTFRequestAdviceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCLRequestAdvice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCLRequestAdvice(decimal applySerialNo, string executorCode) {
            this.Invoke("DeleteCLRequestAdvice", new object[] {
                        applySerialNo,
                        executorCode});
        }
        
        /// <remarks/>
        public void DeleteCLRequestAdviceAsync(decimal applySerialNo, string executorCode) {
            this.DeleteCLRequestAdviceAsync(applySerialNo, executorCode, null);
        }
        
        /// <remarks/>
        public void DeleteCLRequestAdviceAsync(decimal applySerialNo, string executorCode, object userState) {
            if ((this.DeleteCLRequestAdviceOperationCompleted == null)) {
                this.DeleteCLRequestAdviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCLRequestAdviceOperationCompleted);
            }
            this.InvokeAsync("DeleteCLRequestAdvice", new object[] {
                        applySerialNo,
                        executorCode}, this.DeleteCLRequestAdviceOperationCompleted, userState);
        }
        
        private void OnDeleteCLRequestAdviceOperationCompleted(object arg) {
            if ((this.DeleteCLRequestAdviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCLRequestAdviceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPatientReport(decimal applySerialNo, RequestFormCategory kind) {
            object[] results = this.Invoke("GetPatientReport", new object[] {
                        applySerialNo,
                        kind});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientReportAsync(decimal applySerialNo, RequestFormCategory kind) {
            this.GetPatientReportAsync(applySerialNo, kind, null);
        }
        
        /// <remarks/>
        public void GetPatientReportAsync(decimal applySerialNo, RequestFormCategory kind, object userState) {
            if ((this.GetPatientReportOperationCompleted == null)) {
                this.GetPatientReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientReportOperationCompleted);
            }
            this.InvokeAsync("GetPatientReport", new object[] {
                        applySerialNo,
                        kind}, this.GetPatientReportOperationCompleted, userState);
        }
        
        private void OnGetPatientReportOperationCompleted(object arg) {
            if ((this.GetPatientReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientReportCompleted(this, new GetPatientReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPatientBigCharge", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] QueryPatientBigCharge(string syxh, int lb, string dxmdm, int idm, string ypdm, int jsxh) {
            object[] results = this.Invoke("QueryPatientBigCharge", new object[] {
                        syxh,
                        lb,
                        dxmdm,
                        idm,
                        ypdm,
                        jsxh});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryPatientBigChargeAsync(string syxh, int lb, string dxmdm, int idm, string ypdm, int jsxh) {
            this.QueryPatientBigChargeAsync(syxh, lb, dxmdm, idm, ypdm, jsxh, null);
        }
        
        /// <remarks/>
        public void QueryPatientBigChargeAsync(string syxh, int lb, string dxmdm, int idm, string ypdm, int jsxh, object userState) {
            if ((this.QueryPatientBigChargeOperationCompleted == null)) {
                this.QueryPatientBigChargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPatientBigChargeOperationCompleted);
            }
            this.InvokeAsync("QueryPatientBigCharge", new object[] {
                        syxh,
                        lb,
                        dxmdm,
                        idm,
                        ypdm,
                        jsxh}, this.QueryPatientBigChargeOperationCompleted, userState);
        }
        
        private void OnQueryPatientBigChargeOperationCompleted(object arg) {
            if ((this.QueryPatientBigChargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPatientBigChargeCompleted(this, new QueryPatientBigChargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPatientSmallCharge", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] QueryPatientSmallCharge(string syxh, string dxmdm, int jsxh, int cxlb) {
            object[] results = this.Invoke("QueryPatientSmallCharge", new object[] {
                        syxh,
                        dxmdm,
                        jsxh,
                        cxlb});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryPatientSmallChargeAsync(string syxh, string dxmdm, int jsxh, int cxlb) {
            this.QueryPatientSmallChargeAsync(syxh, dxmdm, jsxh, cxlb, null);
        }
        
        /// <remarks/>
        public void QueryPatientSmallChargeAsync(string syxh, string dxmdm, int jsxh, int cxlb, object userState) {
            if ((this.QueryPatientSmallChargeOperationCompleted == null)) {
                this.QueryPatientSmallChargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPatientSmallChargeOperationCompleted);
            }
            this.InvokeAsync("QueryPatientSmallCharge", new object[] {
                        syxh,
                        dxmdm,
                        jsxh,
                        cxlb}, this.QueryPatientSmallChargeOperationCompleted, userState);
        }
        
        private void OnQueryPatientSmallChargeOperationCompleted(object arg) {
            if ((this.QueryPatientSmallChargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPatientSmallChargeCompleted(this, new QueryPatientSmallChargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPatientChargeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] QueryPatientChargeDetail(string syxh, string dxmdm, int idm, string ypdm, int jsxh, int cxlb) {
            object[] results = this.Invoke("QueryPatientChargeDetail", new object[] {
                        syxh,
                        dxmdm,
                        idm,
                        ypdm,
                        jsxh,
                        cxlb});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryPatientChargeDetailAsync(string syxh, string dxmdm, int idm, string ypdm, int jsxh, int cxlb) {
            this.QueryPatientChargeDetailAsync(syxh, dxmdm, idm, ypdm, jsxh, cxlb, null);
        }
        
        /// <remarks/>
        public void QueryPatientChargeDetailAsync(string syxh, string dxmdm, int idm, string ypdm, int jsxh, int cxlb, object userState) {
            if ((this.QueryPatientChargeDetailOperationCompleted == null)) {
                this.QueryPatientChargeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPatientChargeDetailOperationCompleted);
            }
            this.InvokeAsync("QueryPatientChargeDetail", new object[] {
                        syxh,
                        dxmdm,
                        idm,
                        ypdm,
                        jsxh,
                        cxlb}, this.QueryPatientChargeDetailOperationCompleted, userState);
        }
        
        private void OnQueryPatientChargeDetailOperationCompleted(object arg) {
            if ((this.QueryPatientChargeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPatientChargeDetailCompleted(this, new QueryPatientChargeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPatientOtherInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] QueryPatientOtherInfo(string syxh) {
            object[] results = this.Invoke("QueryPatientOtherInfo", new object[] {
                        syxh});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryPatientOtherInfoAsync(string syxh) {
            this.QueryPatientOtherInfoAsync(syxh, null);
        }
        
        /// <remarks/>
        public void QueryPatientOtherInfoAsync(string syxh, object userState) {
            if ((this.QueryPatientOtherInfoOperationCompleted == null)) {
                this.QueryPatientOtherInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPatientOtherInfoOperationCompleted);
            }
            this.InvokeAsync("QueryPatientOtherInfo", new object[] {
                        syxh}, this.QueryPatientOtherInfoOperationCompleted, userState);
        }
        
        private void OnQueryPatientOtherInfoOperationCompleted(object arg) {
            if ((this.QueryPatientOtherInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPatientOtherInfoCompleted(this, new QueryPatientOtherInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPatientOperation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] QueryPatientOperation(string syxh) {
            object[] results = this.Invoke("QueryPatientOperation", new object[] {
                        syxh});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryPatientOperationAsync(string syxh) {
            this.QueryPatientOperationAsync(syxh, null);
        }
        
        /// <remarks/>
        public void QueryPatientOperationAsync(string syxh, object userState) {
            if ((this.QueryPatientOperationOperationCompleted == null)) {
                this.QueryPatientOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPatientOperationOperationCompleted);
            }
            this.InvokeAsync("QueryPatientOperation", new object[] {
                        syxh}, this.QueryPatientOperationOperationCompleted, userState);
        }
        
        private void OnQueryPatientOperationOperationCompleted(object arg) {
            if ((this.QueryPatientOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPatientOperationCompleted(this, new QueryPatientOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRecipeRules", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetRecipeRules() {
            object[] results = this.Invoke("GetRecipeRules", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRecipeRulesAsync() {
            this.GetRecipeRulesAsync(null);
        }
        
        /// <remarks/>
        public void GetRecipeRulesAsync(object userState) {
            if ((this.GetRecipeRulesOperationCompleted == null)) {
                this.GetRecipeRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecipeRulesOperationCompleted);
            }
            this.InvokeAsync("GetRecipeRules", new object[0], this.GetRecipeRulesOperationCompleted, userState);
        }
        
        private void OnGetRecipeRulesOperationCompleted(object arg) {
            if ((this.GetRecipeRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecipeRulesCompleted(this, new GetRecipeRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExportPatientRecords", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ExportPatientRecords(string syxh) {
            object[] results = this.Invoke("ExportPatientRecords", new object[] {
                        syxh});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ExportPatientRecordsAsync(string syxh) {
            this.ExportPatientRecordsAsync(syxh, null);
        }
        
        /// <remarks/>
        public void ExportPatientRecordsAsync(string syxh, object userState) {
            if ((this.ExportPatientRecordsOperationCompleted == null)) {
                this.ExportPatientRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportPatientRecordsOperationCompleted);
            }
            this.InvokeAsync("ExportPatientRecords", new object[] {
                        syxh}, this.ExportPatientRecordsOperationCompleted, userState);
        }
        
        private void OnExportPatientRecordsOperationCompleted(object arg) {
            if ((this.ExportPatientRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportPatientRecordsCompleted(this, new ExportPatientRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPatientFirstPageInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] QueryPatientFirstPageInfo(string syxh) {
            object[] results = this.Invoke("QueryPatientFirstPageInfo", new object[] {
                        syxh});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryPatientFirstPageInfoAsync(string syxh) {
            this.QueryPatientFirstPageInfoAsync(syxh, null);
        }
        
        /// <remarks/>
        public void QueryPatientFirstPageInfoAsync(string syxh, object userState) {
            if ((this.QueryPatientFirstPageInfoOperationCompleted == null)) {
                this.QueryPatientFirstPageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPatientFirstPageInfoOperationCompleted);
            }
            this.InvokeAsync("QueryPatientFirstPageInfo", new object[] {
                        syxh}, this.QueryPatientFirstPageInfoOperationCompleted, userState);
        }
        
        private void OnQueryPatientFirstPageInfoOperationCompleted(object arg) {
            if ((this.QueryPatientFirstPageInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPatientFirstPageInfoCompleted(this, new QueryPatientFirstPageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertPatFirstPage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertPatFirstPage([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] export) {
            object[] results = this.Invoke("InsertPatFirstPage", new object[] {
                        export});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPatFirstPageAsync(byte[] export) {
            this.InsertPatFirstPageAsync(export, null);
        }
        
        /// <remarks/>
        public void InsertPatFirstPageAsync(byte[] export, object userState) {
            if ((this.InsertPatFirstPageOperationCompleted == null)) {
                this.InsertPatFirstPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPatFirstPageOperationCompleted);
            }
            this.InvokeAsync("InsertPatFirstPage", new object[] {
                        export}, this.InsertPatFirstPageOperationCompleted, userState);
        }
        
        private void OnInsertPatFirstPageOperationCompleted(object arg) {
            if ((this.InsertPatFirstPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPatFirstPageCompleted(this, new InsertPatFirstPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPatFirstPageExport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] QueryPatFirstPageExport(string syxh) {
            object[] results = this.Invoke("QueryPatFirstPageExport", new object[] {
                        syxh});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryPatFirstPageExportAsync(string syxh) {
            this.QueryPatFirstPageExportAsync(syxh, null);
        }
        
        /// <remarks/>
        public void QueryPatFirstPageExportAsync(string syxh, object userState) {
            if ((this.QueryPatFirstPageExportOperationCompleted == null)) {
                this.QueryPatFirstPageExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPatFirstPageExportOperationCompleted);
            }
            this.InvokeAsync("QueryPatFirstPageExport", new object[] {
                        syxh}, this.QueryPatFirstPageExportOperationCompleted, userState);
        }
        
        private void OnQueryPatFirstPageExportOperationCompleted(object arg) {
            if ((this.QueryPatFirstPageExportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPatFirstPageExportCompleted(this, new QueryPatFirstPageExportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePatFirstPageExport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePatFirstPageExport([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] export) {
            object[] results = this.Invoke("UpdatePatFirstPageExport", new object[] {
                        export});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePatFirstPageExportAsync(byte[] export) {
            this.UpdatePatFirstPageExportAsync(export, null);
        }
        
        /// <remarks/>
        public void UpdatePatFirstPageExportAsync(byte[] export, object userState) {
            if ((this.UpdatePatFirstPageExportOperationCompleted == null)) {
                this.UpdatePatFirstPageExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePatFirstPageExportOperationCompleted);
            }
            this.InvokeAsync("UpdatePatFirstPageExport", new object[] {
                        export}, this.UpdatePatFirstPageExportOperationCompleted, userState);
        }
        
        private void OnUpdatePatFirstPageExportOperationCompleted(object arg) {
            if ((this.UpdatePatFirstPageExportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePatFirstPageExportCompleted(this, new UpdatePatFirstPageExportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessOrderPrint", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ProcessOrderPrint(int syxh, int yexh, int yzlb, int zxlb, string czyh, string now, int czlb, int ksym, int jsym) {
            object[] results = this.Invoke("ProcessOrderPrint", new object[] {
                        syxh,
                        yexh,
                        yzlb,
                        zxlb,
                        czyh,
                        now,
                        czlb,
                        ksym,
                        jsym});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ProcessOrderPrintAsync(int syxh, int yexh, int yzlb, int zxlb, string czyh, string now, int czlb, int ksym, int jsym) {
            this.ProcessOrderPrintAsync(syxh, yexh, yzlb, zxlb, czyh, now, czlb, ksym, jsym, null);
        }
        
        /// <remarks/>
        public void ProcessOrderPrintAsync(int syxh, int yexh, int yzlb, int zxlb, string czyh, string now, int czlb, int ksym, int jsym, object userState) {
            if ((this.ProcessOrderPrintOperationCompleted == null)) {
                this.ProcessOrderPrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessOrderPrintOperationCompleted);
            }
            this.InvokeAsync("ProcessOrderPrint", new object[] {
                        syxh,
                        yexh,
                        yzlb,
                        zxlb,
                        czyh,
                        now,
                        czlb,
                        ksym,
                        jsym}, this.ProcessOrderPrintOperationCompleted, userState);
        }
        
        private void OnProcessOrderPrintOperationCompleted(object arg) {
            if ((this.ProcessOrderPrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessOrderPrintCompleted(this, new ProcessOrderPrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrderPrintSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetOrderPrintSettings() {
            object[] results = this.Invoke("GetOrderPrintSettings", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderPrintSettingsAsync() {
            this.GetOrderPrintSettingsAsync(null);
        }
        
        /// <remarks/>
        public void GetOrderPrintSettingsAsync(object userState) {
            if ((this.GetOrderPrintSettingsOperationCompleted == null)) {
                this.GetOrderPrintSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderPrintSettingsOperationCompleted);
            }
            this.InvokeAsync("GetOrderPrintSettings", new object[0], this.GetOrderPrintSettingsOperationCompleted, userState);
        }
        
        private void OnGetOrderPrintSettingsOperationCompleted(object arg) {
            if ((this.GetOrderPrintSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderPrintSettingsCompleted(this, new GetOrderPrintSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCheckListDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCheckListDetail(string checklistid, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] xmljcdata, string encodingName) {
            object[] results = this.Invoke("InsertCheckListDetail", new object[] {
                        checklistid,
                        xmljcdata,
                        encodingName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCheckListDetailAsync(string checklistid, byte[] xmljcdata, string encodingName) {
            this.InsertCheckListDetailAsync(checklistid, xmljcdata, encodingName, null);
        }
        
        /// <remarks/>
        public void InsertCheckListDetailAsync(string checklistid, byte[] xmljcdata, string encodingName, object userState) {
            if ((this.InsertCheckListDetailOperationCompleted == null)) {
                this.InsertCheckListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCheckListDetailOperationCompleted);
            }
            this.InvokeAsync("InsertCheckListDetail", new object[] {
                        checklistid,
                        xmljcdata,
                        encodingName}, this.InsertCheckListDetailOperationCompleted, userState);
        }
        
        private void OnInsertCheckListDetailOperationCompleted(object arg) {
            if ((this.InsertCheckListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCheckListDetailCompleted(this, new InsertCheckListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum RequestFormCategory {
        
        /// <remarks/>
        TF,
        
        /// <remarks/>
        CL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryPatientPDFCompletedEventHandler(object sender, QueryPatientPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPatientPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPatientPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryPatientQcCompletedEventHandler(object sender, QueryPatientQcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPatientQcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPatientQcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInpatientListCompletedEventHandler(object sender, GetInpatientListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInpatientListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInpatientListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateSingleInpatientCompletedEventHandler(object sender, UpdateSingleInpatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSingleInpatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSingleInpatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateAllInpatientsCompletedEventHandler(object sender, UpdateAllInpatientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAllInpatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAllInpatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetChangedInpatientListCompletedEventHandler(object sender, GetChangedInpatientListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangedInpatientListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangedInpatientListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientAllReportsCompletedEventHandler(object sender, GetPatientAllReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientAllReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientAllReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientReportContentCompletedEventHandler(object sender, GetPatientReportContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientReportContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientReportContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientExtraInfoCompletedEventHandler(object sender, GetPatientExtraInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientExtraInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientExtraInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDeptPatientsExtraInfoCompletedEventHandler(object sender, GetDeptPatientsExtraInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeptPatientsExtraInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeptPatientsExtraInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckAdvisesCompletedEventHandler(object sender, CheckAdvisesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAdvisesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAdvisesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveAdvisesCompletedEventHandler(object sender, SaveAdvisesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveAdvisesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveAdvisesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuditOrderCompletedEventHandler(object sender, AuditOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuditOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ResendSynchRecordsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SynchExecuteCompletedEventHandler(object sender, SynchExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SynchExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SynchExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHisOrderCompletedEventHandler(object sender, GetHisOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHisOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHisOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientOperationInfoCompletedEventHandler(object sender, GetPatientOperationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientOperationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientOperationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SynchMedTechReqFormCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteTFRequestAdviceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteCLRequestAdviceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientReportCompletedEventHandler(object sender, GetPatientReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryPatientBigChargeCompletedEventHandler(object sender, QueryPatientBigChargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPatientBigChargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPatientBigChargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryPatientSmallChargeCompletedEventHandler(object sender, QueryPatientSmallChargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPatientSmallChargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPatientSmallChargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryPatientChargeDetailCompletedEventHandler(object sender, QueryPatientChargeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPatientChargeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPatientChargeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryPatientOtherInfoCompletedEventHandler(object sender, QueryPatientOtherInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPatientOtherInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPatientOtherInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryPatientOperationCompletedEventHandler(object sender, QueryPatientOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPatientOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPatientOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRecipeRulesCompletedEventHandler(object sender, GetRecipeRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecipeRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecipeRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExportPatientRecordsCompletedEventHandler(object sender, ExportPatientRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportPatientRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportPatientRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryPatientFirstPageInfoCompletedEventHandler(object sender, QueryPatientFirstPageInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPatientFirstPageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPatientFirstPageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertPatFirstPageCompletedEventHandler(object sender, InsertPatFirstPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPatFirstPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPatFirstPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryPatFirstPageExportCompletedEventHandler(object sender, QueryPatFirstPageExportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPatFirstPageExportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPatFirstPageExportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdatePatFirstPageExportCompletedEventHandler(object sender, UpdatePatFirstPageExportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePatFirstPageExportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePatFirstPageExportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProcessOrderPrintCompletedEventHandler(object sender, ProcessOrderPrintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessOrderPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessOrderPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOrderPrintSettingsCompletedEventHandler(object sender, GetOrderPrintSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderPrintSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderPrintSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertCheckListDetailCompletedEventHandler(object sender, InsertCheckListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCheckListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCheckListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591